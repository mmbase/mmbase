PDF component.

    The PDF component generates pdf versions of education content. It can
    convert trees of learnblock and page objects. It can also render the
    pdf as an email-attachment (instead of sending the pdf as an HTTP 
    response).


     Java classes:

     nl.didactor.pdf.PDFConverter
        the main code that reads from a URL (that should point to a relatively
        strict html page) and returns a PDF on an outputstream.

        This code is also responsible for configuring some basic layout
        properties of the PDF like headers, footers and logo.

        The actual HTML -> PDF conversion is done by the iText library.
        http://www.lowagie.com/iText/

        Note that this class actually requests the URL over HTTP. Also
        see the configuration below.

     nl.didactor.pdf.servlet.PDFServlet
        this class can send the PDF output directly to the HTTP response.
        

     JSP pages and static elements:
     
     there a some jsp pages in  src/pdf/templates/pdf. the most important
     are: 
     
     pdfhtml.jsp
        this renders a content-tree as a strict xhtml page using a combination 
        of regular expressions, guesswork and jTidy.
        http://sourceforge.net/projects/jtidy

     pdfchooser.jsp
        the editwizard interface to the pdf component.

     headerimage.png
        the image to be used in the header of the pdf document. this can be
        overridden by the active provider, just like other content.


     Configuration:

     internalUrl
        the context-parameter that should be prepended so that
        $internalUrl/pdf/pdfhtml.jsp points to pdfhtml.jsp on the current
        server. This url should be reachable from the server itself, so
        make sure firewall configurations etc allow that.

     see also:
        src/pdf/webinf/web-extra.xml


