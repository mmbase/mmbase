<jsp:root
    xmlns:fmt="http://java.sun.com/jsp/jstl/fmt"
    xmlns:c="http://java.sun.com/jsp/jstl/core"
    xmlns:mm="http://www.mmbase.org/mmbase-taglib-2.0"
    xmlns:jsp="http://java.sun.com/JSP/Page"
    xmlns:os="http://www.opensymphony.com/oscache"
    version="2.0">
  <jsp:directive.tag description="Generates the 'see alo' back references, for the current node." />

  <jsp:directive.attribute name="see"
                           description="What sould be said before the list. Defaults to 'See also' (but i18n'd)"
                           />
  <jsp:directive.attribute name="type"
                           description="Type of (id-)related nodes to show. Defaults to 'object'."
                           />
  <jsp:directive.attribute name="types"
                           description="Type-constraints on the related nodes to apply to the query. Defaults to no constraint. This can
                                        be used if you want to list several types, which have no common base type."
                           />
  <!--
      TODO. Together with versioning, links not pointing to the _current_ version of the node should be ignored.
      $Id: referred.tagx,v 1.6 2008-06-10 14:25:13 michiel Exp $
  -->
  <mm:import id="t">${empty type ? (empty types ? 'texts' : 'object') : type}</mm:import>
  <fmt:bundle basename="org.mmbase.richtext.resources.messages">
    <mm:listrelationscontainer
        type="$t" role="idrel" searchdir="source">

      <c:if test="${! empty types}">
        <mm:typeconstraint element="${t}" name="${types}" />
      </c:if>

      <!-- support for embargo -->
      <mm:hasfield nodetype="${t}" name="begin">
        <mm:constraint field="${t}.begin" operator="LESS"      value="now" />
        <mm:sortorder field="${t}.begin"  direction="down" />
      </mm:hasfield>
      <mm:hasfield nodetype="${t}" name="begin">
        <mm:constraint field="${t}.end"   operator="GREATER"   value="now" />
      </mm:hasfield>

      <mm:sortorder field="${t}.number" direction="down" />
      <mm:size>
        <mm:isgreaterthan value="0">
          <p class="seealso">
            <strong>
              <c:choose>
                <c:when test="${empty see}">
                  <fmt:message key="seealso" />
                </c:when>
                <c:otherwise>${see}</c:otherwise>
              </c:choose>
              <jsp:text> </jsp:text>
            </strong>
            <mm:listrelations>
              <mm:field name="id" id="anchor" write="false" />

              <mm:relatednode id="related" />

              <c:if test="${related ne r}"> <!-- if an object is related more once to this, this ensures that it is only 'see also'd once -->

                <c:if test="${! empty r}"><!-- trick to get comma's only between -->
                  <jsp:text>, </jsp:text>
                </c:if>
                <mm:node referid="related">
                  <mm:nodeinfo type="type">
                    <mm:compare value="blocks"><!-- don't link to the blocks, but to the texts containing them. blocks in blocks currently not supported. -->
                      <mm:relatednodes type="${t}" role="idrel" searchdir="source" id="r">
                        <mm:function name="url">
                          <a href="${_}${'#'}${anchor}">
                            <mm:nodeinfo type="gui" />
                          </a>
                        </mm:function>
                      </mm:relatednodes>
                    </mm:compare>
                    <mm:compare value="blocks" inverse="true">
                      <mm:node id="r" />
                      <mm:function name="url">
                        <a href="${_}${'#'}${anchor}">
                          <mm:nodeinfo type="gui" />
                        </a>
                      </mm:function>
                    </mm:compare>
                  </mm:nodeinfo>
                </mm:node>
              </c:if>
            </mm:listrelations>
          </p>
        </mm:isgreaterthan>
      </mm:size>
    </mm:listrelationscontainer>
  </fmt:bundle>
</jsp:root>




