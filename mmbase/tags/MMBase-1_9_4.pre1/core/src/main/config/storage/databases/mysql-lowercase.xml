<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE storage PUBLIC "-//MMBase//DTD storage config 1.0//EN" "http://www.mmbase.org/dtd/storage_1_0.dtd" >
<storage>
  <!-- MySQLdb configuration resource. -->
  <!--
    This storage definition is different from the MMbase mysql.xml definition
    1. it forces all storage identifiers to be lowercase (including the numbertable)
    2. it forces all tables to be created in utf8 even when the database is set to latin1
    3. it only defines disallowed fields which are not defined in the MMBASE STANDARD or driver keywords
   -->

  <storagemanagerfactory classname="org.mmbase.storage.implementation.database.DatabaseStorageManagerFactory" version="0.1" />

  <!-- use the manager for relational databases -->
  <storagemanager classname="org.mmbase.storage.implementation.database.RelationalDatabaseStorageManager" version="0.1" />

  <searchqueryhandler classname="org.mmbase.storage.search.implementation.database.MySqlSqlHandler" />

  <attributes>
    <!-- Automatically prefix reserved words with "m_" -->
    <attribute name="default-storage-identifier-prefix">m</attribute>

    <!-- all storage identifiers for builders and fieldnames are converted to lowercase  -->
    <attribute name="storage-identifier-case">lower</attribute>

    <!-- MySQL does not default support transactions, but it's Metadata object claims that it does
             So set support to false.
    -->
    <option name="database-supports-transactions" value="false" />

    <!-- Use Blobs  -->
    <option name="database-supports-blob" />

    <!-- uses different syntax for creating unique key constraints -->
    <scheme name="create-unique-key-scheme" >UNIQUE INDEX {2} ({2} ({4}))</scheme>
    <!-- MySQL does not properly support foreign keys, Still create a least an index -->
    <scheme name="create-foreign-key-scheme" >INDEX {2} ({2})</scheme>

    <!-- uses different syntax for composite keys -->
    <scheme name="create-unique-index-scheme" >ALTER TABLE {1} ADD UNIQUE INDEX {3} ({2})</scheme>
    <scheme name="delete-unique-index-scheme" >ALTER TABLE {1} DROP INDEX {2}</scheme>

    <!-- index -->
    <scheme name="create-index-scheme" >ALTER TABLE {1} ADD INDEX {3} ({2})</scheme>
    <scheme name="delete-index-scheme" >ALTER TABLE {1} DROP INDEX {2}</scheme>

    <!-- Add utf8 to all tables even when database is latin1. CMSc uses utf8 everywhere -->
    <scheme name="create-table-scheme">CREATE TABLE {1} ({2} {3} {5}) character set utf8</scheme>
    <scheme name="create-object-table-scheme">CREATE TABLE {1} ({2} {3} {5}) character set utf8</scheme>

    <scheme name="create-sequence-scheme">CREATE TABLE {0}_numbertable ({1})</scheme>
    <scheme name="init-sequence-scheme">INSERT INTO {0}_numbertable ({1}) VALUES ({2,number,##########})</scheme>
    <scheme name="update-sequence-scheme">UPDATE {0}_numbertable SET {1} = {1} + {2}</scheme>
    <scheme name="read-sequence-scheme">SELECT {1} FROM {0}_numbertable</scheme>
  </attributes>

  <!-- List of MMBase objects where the binary data should not be stored in the database but as a
  file. This option is only available if by default the database support BLOBs and the default
  configuration stores binary data in the database.
  Of the objects listed here, the binary data is stored as file rather than as BLOB in the database.
  The name used here is the name of the table in which the objects of this type are stored. For example
  'images' or 'icaches'.
  -->
  <!--
  <store-binary-as-file-objects>
      <store-binary-as-file-object name="icaches" />
  </store-binary-as-file-objects>
  -->

  <!-- MySQL type mappings    -->
  <type-mappings>
    <type-mapping name="DOUBLE" type="double" />
    <type-mapping name="LONG" type="bigint" />
    <type-mapping name="FLOAT" type="float" />
    <type-mapping name="INTEGER" type="integer" />
    <type-mapping name="NODE"   type="integer" />
    <type-mapping name="STRING" min-size="1" max-size="255" type="varchar({0})" />
    <type-mapping name="STRING" min-size="256" max-size="65535" type="text" />
    <type-mapping name="STRING" min-size="65536" max-size="16777216" type="mediumtext" />
    <type-mapping name="XML" min-size="1" max-size="255" type="varchar({0})" />
    <type-mapping name="XML" min-size="256" max-size="65535" type="text" />
    <type-mapping name="XML" min-size="65536" max-size="16777216" type="mediumtext" />
    <type-mapping name="BINARY" min-size="1" max-size="65535" type="blob" />
    <type-mapping name="BINARY" min-size="65536" max-size="16777216" type="mediumblob" />
    <type-mapping name="BINARY" min-size="16777217" max-size="4294967296" type="longblob" />
    <type-mapping name="DATETIME" type="DATETIME" />
    <type-mapping name="BOOLEAN"  type="BIT" />
    <type-mapping name="DECIMAL"  type="DECIMAL({0}, {1})" />
  </type-mappings>

  <!-- MySQL disallowed fields are retrieved from the database -->
  <disallowed-fields>
    <!-- These keywards are not in the STANDARD_SQL_KEYWORDS of mmbase and not returned by the driver  -->
    <disallowed-field name="columns" replacement="m_columns"/>
    <disallowed-field name="comment" replacement="m_comment"/>
    <disallowed-field name="decimal" replacement="m_decimal"/>
    <disallowed-field name="data" replacement="m_data"/>
    <disallowed-field name="fields" replacement="m_fields"/>
    <disallowed-field name="hosts" replacement="m_hosts"/>
    <disallowed-field name="parent" replacement="m_parent"/>
    <disallowed-field name="status" replacement="m_status"/>
    <disallowed-field name="type" replacement="m_type"/>
    <disallowed-field name="index" replacement="m_index"/>
  </disallowed-fields>

</storage>
