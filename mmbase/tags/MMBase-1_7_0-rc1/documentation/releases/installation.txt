b===================================================================
                     MMBase 1.7.0 - Installation
===================================================================  
  
MMBase is distributed as a webapplication, it's not packaged as a .war
file, but the structure is the same. In order to install and get
MMBase running, you must do the following:

1. Download and install a Java Development Kit.

2. Download and install a Servlet Engine or an Applicationserver
   (check if the Servlet Engine is up and running and if you can use
   the jsp-examples), see releasenotes for tested Servlet Engines.

3. Download and install ImageMagick. See note below if you're having
   problems with Imagemagick or don't want to use it.

4. Copy the subdir mmbase-webapp into the servlet-engine's webapps
   dir, you have to use it as your ROOT webapp if you'd like to use
   scan. MMBase in combination with jsp/taglib can run in another context
   than ROOT, the only thing that doesn't work is the gui-functions
   for images (because they produce a wrong link to
   img.db). MMBase-1.6 will have better support for this.

5. Edit <mmbase-webapp/WEB-INF/config/builders/images.xml> for the
   location of ImageMagick's convert tool. 

6. Start servlet-engine if you want to use the default MMBase-config
   (uses a hsqldb-database), or goto step 9 for changing default
   configuration. 

7. Check if mmbase is running using the following url:
   <http://localhost:port/version> 

8. If this is running, goto <http://localhost:port> to see an infopage
   about MMBase and links to editors, admin, examples, etc. Use
   admin/admin2k when you're asked to login (see notes below how to
   change this).`

9. Edit jdbc.xml and mmbaseroot.xml (both are in
   <mmbase-webapp/WEB-INF/config/modules>) for using a different
   database (see releasenotes for tested databases), or change other
   settings (servername, multicast, etc). 
   Other interesting settings can be found in
   <mmbase-webapp/WEB-INF/config/security/context/config.xml> (users, groups, and contextes),
   and in <mmbase-webapp/WEB-INF/config/log/log4j.xml> (logfile configuration and so on)

10. If you have any kind of problem goto:
   website: <http://www.mmbase.org/>
   irc: #mmbase at slashnet


Some final notes:
=================

Jikes:
If you'd like to develop jsp's and taglib's at a usable speed it is
recommended to install jikes for compiling jsp. See your
Servlet-engine's documentation about how to do this.

SECURITY ISSUES:
--------------------------------------------------------------------------------------------------
Check out the <mmbase-webapp/WEB-INF/config/security> dir, to customize the security settings. You
_SHOULD CHANGE THE ADMIN PASSWORD_, and also the other passwords, if your setup is more then just a
try-out.

If you are not going to use MMBase security, you should not leave jsp-editors and admin pages
unprotected (by e.g. tomcat or apache security). Remove them altogether if unsure (the /mmeditors
and /mmadmin directories).

The same goes for editwizards if you are going to install those.

The shipped mmexamples directory is DANGEROUS and you should NOT leave it in a production site. It
contains for the sake of _examples_ various editors and e.g. a generic jsp to show the source code
of other jsp's. Generally, for a production site, it is best to remove all jsp's which are shipped
with this distro, besides the ones you are planning to actually use.

If you're going to use the scan editors (which you are not) you need, besides turning on scan, to
deploy the BasicAuth-application (you can do this from the admin-pages). This will create some
relations. You have to change the property authtype from mmbaseroot.xml into basic and after this
restart MMBase. You can now create people and related editors to them. Every people you create needs
to have an account and password in the <mmbase-webapp/WEB-INF/config/accounts.properties>
file. These people can now use the editors.
---------------------------------------------------------------------------------------------------


ImageMagick:
Imagemagick does work with Windows 98/ME, but MMBase is not able to
use it. You have to use Jai (Java Advanced Imaging API). You can do
this by changing the properties in
<mmbase-webapp/WEB-INF/config/builders/images.xml> into:

<properties> 
  <property name="ImageConvertClass">org.mmbase.module.builders.ConvertJAI</property> 
  <property name="MaxConcurrentRequests">20</property> 
</properties>

Please keep in mind that the image builder is less powerfull when
using JAI instead of Imagemagick.
