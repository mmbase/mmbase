<?xml version="1.0"?>
<div
    class="mm_c c_editwizard b_advanced.example ${requestScope.componentClassName}"
    id="${requestScope.componentId}"
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:c="http://java.sun.com/jsp/jstl/core"
    xmlns:jsp="http://java.sun.com/JSP/Page"
    xmlns:mm="http://www.mmbase.org/mmbase-taglib-2.0">
  <jsp:output omit-xml-declaration="true" />
   <!--
       More complicated example.

       @since    MMBase-1.6
       @author   Michiel Meeuwissen
       @version  $Id: example.jspx,v 1.1 2008-08-06 16:17:13 michiel Exp $

       Showing:
       - use of taglib in this entrance page
       - xml-definitions in subdir of entrance page
       - javascript for search action
       - jump to create directly
   -->
   <script type="text/javascript">
     function openListImages(el) {
     var href = el.getAttribute("href");
     var zoek = document.forms["searchimage"].elements["imagedesc"].value.toUpperCase();
     if (zoek != '') {
     href += "&amp;amp;constraints=UCASE%28description%29%20LIKE%20%27%25" + zoek + "%25%27%20or%20UCASE%28title%29%20LIKE%20%27%25" + zoek + "%25%27";
     }
     document.location = href;
     return false;
     }
   </script>

   <mm:import id="jsps"><mm:setting name="location" />/jsp</mm:import>
   <mm:import id="templates">/mmbase/components/editwizard/advanced/</mm:import>
   <mm:import id="referrer"><mm:url absolute="context" /></mm:import>
   <mm:import id="pagelength">10</mm:import>
   <table class="body">
    <tr><td class="left" /><td>
    <table class="body" cellspacing="0" cellpadding="4" width="100%">
      <tr>
        <td class="mysteps_top" valign="top" width="575">
        <span class="title"><nobr><span class="titleprompt">Editwizard Examples</span></nobr></span></td>
        <td class="gutter" width="200"><br /></td>
      </tr>
    </table>
    </td></tr><tr><td class="left" />
    <td class="listcanvas">
      <table>
        <p>
          This example overrides some XSL's of the editwizard by placing
          variants in xsl/ relative to this file. It adds a stylesheet by
          overriding base.xsl.  Furthermore it uses it's private XML
          editwizard definitions, which are also placed relativily to this
          file in the 'tasks' directory.
        </p>
        <p>
          <mm:link page="view_source">
            <mm:frameworkparam name="component">core</mm:frameworkparam>
            <mm:param name="page">${templates}/xsl/list.xsl</mm:param>
            <a  href="${_}">view xsl/list.xsl</a>
          </mm:link>
          <br />
          <mm:link page="view_source">
            <mm:frameworkparam name="component">core</mm:frameworkparam>
            <mm:param name="page">${templates}/xsl/wizard.xsl</mm:param>
            <a  href="${_}">view xsl/wizard.xsl</a>
          </mm:link>
          <br />
          <mm:link page="view_source">
            <mm:frameworkparam name="component">core</mm:frameworkparam>
            <mm:param name="page">${templates}/xsl/base.xsl</mm:param>
            <a href="${_}">view xsl/base.xsl</a>
          </mm:link>
        </p>
        <table class="listcanvas">
          <tr>
            <td>
              <mm:link referids="referrer,pagelength,templates" page="$jsps/list.jsp">
               <mm:param name="wizard">tasks/people</mm:param>
               <mm:param name="nodepath">people</mm:param>
               <mm:param name="fields">number,firstname,lastname</mm:param>
               <mm:param name="orderby">number</mm:param>
               <mm:param name="directions">down</mm:param>
               <a href="${_}">Person test</a>
             </mm:link>
             <!-- show how to jump to wizard.jsp directly -->
             (
             <mm:link referids="referrer,templates,pagelength" page="$jsps/wizard.jsp">
               <mm:param name="wizard">tasks/people</mm:param>
               <mm:param name="objectnumber">new</mm:param>
               <a href="${_}">Create</a>
             </mm:link>
             )
           </td>
             <td>
               This is a '2 step' example. You can create/change the date for a
               person and relate a picture in the first step. In the second
               step, you can relate articles to the person. We also
               demonstrate here how you can jump directly to the wizard to create a
               new person (without having to go to the list first).
             </td>
             <td>
               <mm:link page="view_source">
                 <mm:frameworkparam name="component">core</mm:frameworkparam>
                 <mm:param name="page">${templates}/tasks/people.xml</mm:param>
                 <a href="${_}">See XML</a>
               </mm:link>
             </td>
           </tr>

           <tr><td>
             <mm:url id="form" write="false"  referids="referrer,pagelength,templates" page="$jsps/list.jsp" />
             <form action="${form}" method="post">
               <select name="searchfields">
                 <option value="firstname">First name</option>
                 <option value="lastname">Last name</option>
                 <option value="firstname,lastname">First or last name</option>
               </select>
               <input type="text" name="searchvalue" />
               <input type="submit" value="OK" />
               <input type="hidden" name="wizard" value="tasks/people" />
               <input type="hidden" name="nodepath" value="people" />
               <input type="hidden" name="fields" value="number,firstname,lastname" />
               <input type="hidden" name="orderby" value="number" />
               <input type="hidden" name="directions" value="down" />
             </form>
           </td>
             <td>
               This is the same example, however this version first uses a simple search form to search for
               persons whose name matches the given search term.
             </td>
             <td>
               <mm:link page="view_source">
                 <mm:frameworkparam name="component">core</mm:frameworkparam>
                 <mm:param name="page">${templates}/tasks/people.xml</mm:param>
                 <a href="${_}">See XML</a>
               </mm:link>
             </td>
           </tr>

           <tr>
             <td>
             <form id="searchimage">
               <mm:link referids="referrer,pagelength,templates" page="$jsps/list.jsp">
                 <mm:param name="wizard">tasks/imageupload</mm:param>
                 <mm:param name="nodepath">images</mm:param>
                 <mm:param name="fields">title,handle,owner</mm:param>
                 <mm:param name="orderby">title</mm:param>
                 <a href="${_}"
                    onClick="return openListImages(this);">Images</a>
               </mm:link>
               (search:
               <input type="text" name="imagedesc"	value="" style="width:200px;text-align:left;" />)
             </form>
             </td>
             <td>
               A very simple image uploader. We show here how you could add
               search criteria. We also see that the delete prompt is overridden.
             </td>
             <td>
               <mm:link page="view_source">
                 <mm:frameworkparam name="component">core</mm:frameworkparam>
                 <mm:param name="page">${templates}/tasks/imageupload.xml</mm:param>
                 <a href="${_}">See XML</a>
               </mm:link>
             </td>
           </tr>
           <tr>
             <td>
               <mm:link referids="referrer,pagelength,templates" page="$jsps/list.jsp">
                 <mm:param name="wizard">tasks/attachments</mm:param>
                 <mm:param name="nodepath">attachments</mm:param>
                 <mm:param name="fields">title</mm:param>
                 <mm:param name="orderby">title</mm:param>
               <a href="${_}" >Attachments</a>
               </mm:link>
               </td>
               <td>
                 Use the editwizards to upload and download attachments e.g. PDF files.
               </td>
               <td>
                 <mm:link page="view_source">
                   <mm:frameworkparam name="component">core</mm:frameworkparam>
                   <mm:param name="page">${templates}/tasks/attachments.xml</mm:param>
                   <a href="${_}">See XML</a>
                 </mm:link>
               </td>
           </tr>
           <tr><td>
             <mm:link referids="referrer,pagelength,templates" page="$jsps/list.jsp">
               <mm:param name="wizard">tasks/news</mm:param>
               <mm:param name="nodepath">news</mm:param>
               <mm:param name="fields">number,title,date</mm:param>
               <mm:param name="orderby">number</mm:param>
               <mm:param name="directions">down</mm:param>
               <a href="${_}">News</a>
             </mm:link>
             </td>
             <td>
               <ul>
                 <li> How to use editwizards 'libs'. These are pieces
                 of XML stored in the editwizard data directory which you can
                 include in you own wizards</li>
                 <li>'subwizards'</li>
                 <li>fieldset</li>
               </ul>
             </td>
             <td>
               <mm:link page="view_source">
                 <mm:frameworkparam name="component">core</mm:frameworkparam>
                 <mm:param name="page">${templates}/tasks/news.xml</mm:param>
                 <a href="${_}">See XML</a>
               </mm:link>
             </td>
           </tr>
           <tr>
             <td>
               <mm:link referids="referrer,pagelength,templates" page="$jsps/list.jsp">
                 <mm:param name="wizard">tasks/news_origin</mm:param>
                 <mm:param name="startnodes">default.mags</mm:param>
                 <mm:param name="origin">default.mags</mm:param>
                 <mm:param name="newfromlist">default.mags</mm:param>
                 <mm:param name="nodepath">mags,news</mm:param>
                 <mm:param name="fields">news.number,news.title,news.date</mm:param>
                 <mm:param name="orderby">news.number</mm:param>
                 <mm:param name="directions">down</mm:param>
                 <a href="${_}">News (with origin = default.mags)</a>
               </mm:link>
               </td>
               <td>
                 <ul>
                   <li> Similar to above, but demonstrates the use of 'origin'. A new article isa utomatically added to teh default magazin.</li>
                   <li>'subwizards'</li>
                   <li>fieldset</li>
                 </ul>
               </td>
               <td>
                 <mm:link page="view_source">
                   <mm:frameworkparam name="component">core</mm:frameworkparam>
                   <mm:param name="page">${templates}/tasks/news_origin.xml</mm:param>
                   <a href="${_}">See XML</a>
                 </mm:link>
               </td>
           </tr>
           <tr>
             <td>
               <mm:link referids="referrer,pagelength,templates" page="$jsps/list.jsp">
                 <mm:param name="title">MyNews Magazine news</mm:param>
                 <mm:param name="startnodes">default.mags</mm:param>
                 <mm:param name="wizard">tasks/news</mm:param>
                 <mm:param name="nodepath">mags,news</mm:param>
                 <mm:param name="fields">news.number,news.title</mm:param>
                 <mm:param name="orderby">news.number</mm:param>
                 <mm:param name="directions">down</mm:param>
                 <mm:param name="searchdirs">destination</mm:param>
                 <a href="${_}">News</a>
               </mm:link>
               </td>
               <td>
                 Only list news of default magazine (MyNews magazine).
               </td>
           </tr>
           <tr>
             <td>
               <mm:link referids="referrer,pagelength,templates" page="$jsps/list.jsp">
                 <mm:param name="wizard">tasks/mags</mm:param>
                 <mm:param name="nodepath">mags</mm:param>
                 <mm:param name="fields">number,title</mm:param>
                 <mm:param name="orderby">number</mm:param>
                 <mm:param name="directions">down</mm:param>
                 <a href="${_}">Magazines</a>
               </mm:link>
             </td>
             <td>
               Demonstrated is how to use 'posrel', and how to create 'optionlists'.
             </td>
             <td>
               <mm:link page="view_source">
                 <mm:frameworkparam name="component">core</mm:frameworkparam>
                 <mm:param name="page">${templates}/tasks/mags.xml</mm:param>
                 <a href="${_}">See XML</a>
               </mm:link>
             </td>
           </tr>

           <tr>
             <td>
               <mm:link referids="referrer,pagelength,templates" page="$jsps/list.jsp">
                 <mm:param name="wizard">tasks/people</mm:param>
                 <mm:param name="nodepath">news,people</mm:param>
                 <mm:param name="fields">people.number,news.title,people.firstname,people.lastname</mm:param>
                 <mm:param name="orderby">people.lastname</mm:param>
                 <mm:param name="searchfields">people.lastname</mm:param>
                 <a href="${_}">Authors</a>
               </mm:link>
               </td>
               <td>
                 Demo of multilevel search
               </td>
               <td>
               </td>
           </tr>
           <tr>
             <td>
               <mm:link referids="referrer,pagelength,templates" page="$jsps/list.jsp">
                 <mm:param name="wizard">tasks/jumpers</mm:param>
                 <mm:param name="nodepath">jumpers</mm:param>
                 <mm:param name="searchfields">name,url</mm:param>
                 <a href="${_}">Jumpers</a>
               </mm:link>
             </td>
             <td>Demo of Jumpers</td>
             <td></td>
           </tr>
         </table>
         <hr />
         <div class="link">
           <mm:link page="examples">
             <a href="${_}"><img alt="back" src="${mm:link('/mmbase/style/images/back.png')}" /></a>
           </mm:link>
         </div>
      </table>
    </td>
</tr>
   </table>
</div>
