<?xml version="1.0" encoding="UTF-8"?>
<!--
    Context configuration file for the mmbase example Web App
    Tomcat 5.5
-->
<Context debug="5" path="/example-webapp-1.9-servlet25-SNAPSHOT" reloadable="true">
  <!--  Mail settings
		mail.smtp.host			The SMTP server to connect to.
		mail.smtp.port			The SMTP server port to connect to, if the connect() method doesn't explicitly specify one. Defaults to 25.
		mail.smtp.localhost 	Local host name used in the SMTP HELO or EHLO command.
		Defaults to InetAddress.getLocalHost().getHostName().
		Should not normally need to be set if your JDK and your
		name service are configured properly.
		mail.debug				The initial debug mode. Default is false.
	-->
  <Resource auth="Container" mail.smtp.host="mailserver.yourdomain.com" name="mail/Session" type="javax.mail.Session"/>
  <!-- Database settings -->
  <!-- HsqlDB -->
  <!--
	 <Resource name="jdbc/MMBase"
			auth="Container"
			type="javax.sql.DataSource"
			removeAbandoned="true"
			removeAbandonedTimeout="60"
			logAbandoned="true"
			maxActive="10"
			maxIdle="1"
			maxWait="10000"
			username="sa"
			password=""
			driverClassName="org.hsqldb.jdbcDriver"
			url="jdbc:hsqldb:mmbase;shutdown=true"
		/>
 -->
  <!-- MySQL -->
  <!--
			username="mmbase"
			password="mmbase2k"
			driverClassName="com.mysql.jdbc.Driver"
			url="jdbc:mysql://localhost:3306/mmbase?autoReconnect=true"
	 -->
  <!-- useServerPrepStmts=false
		Server-side Prepared Statements - Connector/J 3.1 will automatically detect and use server-side prepared
		statements when they are available (MySQL server version 4.1.0 and newer).
		Starting with version 3.1.7, the driver scans SQL you are preparing via all variants of Connection.
		prepareStatement() to determine if it is a supported type of statement to prepare on the server side,
		and if it is not supported by the server, it instead prepares it as a client-side emulated prepared
		statement. You can disable this feature by passing 'emulateUnsupportedPstmts=false' in your JDBC URL.
		If your application encounters issues with server-side prepared statements, you can revert to the older
		client-side emulated prepared statement code that is still presently used for MySQL servers older
		than 4.1.0 with the following connection property: useServerPrepStmts=false

		MySql error: Incorrect arguments to mysql_stmt_execute
		MySql error: Duplicate entry '1234' for key 1 in query
	 -->
  <!--
	<Environment name="mmbase/mmbaseroot/datasource-context" value="java:comp/env" type="java.lang.String" />
	<Environment name="mmbase/mmbaseroot/datasource" value="jdbc/MMBase" type="java.lang.String" />
	<Environment name="mmbase/mmbaseroot/basename" value="mm" type="java.lang.String" />
 -->
  <!-- JDBC module -->
  <Environment name="mmbase/jdbc/url" type="java.lang.String" value="jdbc:hsqldb:mem:$DBM;shutdown=true"/>
  <Environment name="mmbase/jdbc/user" type="java.lang.String" value="sa"/>
  <Environment name="mmbase/jdbc/password" type="java.lang.String" value=""/>
  <Environment name="mmbase/jdbc/database" type="java.lang.String" value="mmbase"/>
  <Environment name="mmbase/jdbc/connections" type="java.lang.String" value="20"/>
  <Environment name="mmbase/jdbc/host" type="java.lang.String" value="localhost"/>
  <Environment name="mmbase/jdbc/driver" type="java.lang.String" value="org.hsqldb.jdbcDriver"/>
  <Environment name="mmbase/jdbc/port" type="java.lang.String" value="0"/>
  <Environment name="mmbase/jdbc/queries" type="java.lang.String" value="256"/>
  <Environment name="mmbase/jdbc/probetime" type="java.lang.String" value="30"/>
  <Environment name="mmbase/jdbc/maxlifetime" type="java.lang.String" value="120"/>
  <Environment name="mmbase/imaging/ImageConvertClass" type="java.lang.String" value="org.mmbase.module.builders.ConvertImageMagick"/>
  <Environment name="mmbase/imaging/ImageConvert.ConverterCommand" type="java.lang.String" value="convert"/>
  <Environment name="mmbase/imaging/ImageConvert.ConverterRoot" type="java.lang.String" value=""/>
</Context>
