<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE web-app PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN" "http://java.sun.com/dtd/web-app_2_3.dtd">
<web-app>

  <!-- uncomment this and fill in the right value, if your app-server
  does not succeed to determin this automaticly.
  <context-param>
    <param-name>mmbase.htmlrooturlpath</param-name>
    <param-value>/</param-value>
  </context-param>
  -->  

  <!-- Filter for jumpers
   Uncomment this code if you want to activate the jumpers filter.
   You need to install the jumpers builder first
  -->
  <!--
  <filter>
    <filter-name>Jumpers Filter</filter-name>
    <display-name>Jumpers Filter</display-name>
    <description>Filter used for jumpers</description>
    <filter-class>org.mmbase.servlet.JumpersFilter</filter-class>
  </filter>

  <filter-mapping>
    <filter-name>Jumpers Filter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
-->

	<!-- Overrides config/module/mmbaseroot.xml#encoding -->
  <!-- Filter Character Encoding
  <filter>
    <filter-name>Set Character Encoding</filter-name>
    <filter-class>org.mmbase.servlet.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
  </filter>

  <filter-mapping>
    <filter-name>Set Character Encoding</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  -->

  <!-- The base MMBase servlet informs about the current MMBase version -->
  <servlet>
    <servlet-name>version</servlet-name>
    <description>To get the version of MMBase</description>
    <servlet-class>org.mmbase.servlet.MMBaseServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>

  <!-- The MMBase image serving servlet. -->
  <servlet>
    <servlet-name>images</servlet-name>
    <description>To extract images from MMBase</description>
    <servlet-class>org.mmbase.servlet.ImageServlet</servlet-class>
    <init-param>
      <!-- Expire time of original images. Cached images never expire. -->
      <param-name>expire</param-name>
      <!-- 10 minutes (default is one hour)-->
      <param-value>600</param-value>
    </init-param>
    <load-on-startup>2</load-on-startup>
  </servlet>

  <!-- The MMBase attachment serving servlet. -->
  <servlet>
    <servlet-name>attachments</servlet-name>
    <description>To retrieve binary files from MMBase</description>
    <servlet-class>org.mmbase.servlet.AttachmentServlet</servlet-class>
    <init-param>
      <!-- Expire time of original images. Cached images never expire. -->
      <param-name>expire</param-name>
      <!-- 10 minutes (default is one hour)-->
      <param-value>600</param-value>
    </init-param>
    <load-on-startup>3</load-on-startup>
  </servlet>

  <!-- servdb, old servlet for downloading attachments, images, and xml files
  You should use the images and attachments servlets for downloading most data,
  and the dove servlet to retrieve a node as xml.
  However this info can also still be retrieved with servdb.
  Uncomment this code if you want to activate it. You also need to create
  mappings to use it. See example below.
  -->
  <!--
  <servlet>
    <servlet-name>servdb</servlet-name>
    <display-name>Serdb Servlet</display-name>
    <description>needed for some binary-stuff, like images</description>
    <servlet-class>org.mmbase.servlet.servdb</servlet-class>
    <load-on-startup>4</load-on-startup>
  </servlet>
  -->

  <!-- dove, servlet for Dove protocol.
  This is used for communication with  and passing commands to the MMBase 
  system using an xml format, akin to SOAP.
  This servlet is still experimental.
  Uncomment this code to turn it on.  Also turn on servlet mapping below.
  -->
  <!--
  <servlet>
    <servlet-name>dove</servlet-name>
    <display-name>Dove</display-name>
    <description>
       adds the Dove protocol, which is used for communication with,
       and passing commands to, the MMBase system using an xml format
    </description>
    <servlet-class>org.mmbase.applications.dove.servlet.DoveServlet</servlet-class>
    <load-on-startup>5</load-on-startup>
  </servlet>
  -->

  <!-- mapping for version-request -->
  <servlet-mapping>
    <servlet-name>version</servlet-name>
    <url-pattern>/version</url-pattern>
  </servlet-mapping>

  <!-- mapping for image-requests -->
  <servlet-mapping>
    <servlet-name>images</servlet-name>
    <url-pattern>/mmbase/images/*</url-pattern><!-- if done by servdb, it must be /img.db -->
  </servlet-mapping>

  <!-- mapping for attachment-requests -->
  <servlet-mapping>
    <servlet-name>attachments</servlet-name>
    <url-pattern>/mmbase/attachments/*</url-pattern><!-- if done by servdb, it must be /attachment.db -->
  </servlet-mapping>

  <!-- mappings for to servdb
  Uncomment this code if you activate the servdb servlet.
  -->
  <!--
  <servlet-mapping>
    <servlet-name>servdb</servlet-name>
    <url-pattern>/xml.db</url-pattern>
  </servlet-mapping>
  -->

  <!-- mapping for the dove servlet
  Uncomment this code if you activate the Dove servlet.
  -->
  <!--
  <servlet-mapping>
    <servlet-name>dove</servlet-name>
    <url-pattern>/xml/dove.xml</url-pattern>
  </servlet-mapping>
  -->

  <welcome-file-list>
    <!-- index.jsp is the default -->
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.jsp</welcome-file>
    <welcome-file>index.html</welcome-file>
  </welcome-file-list>

  <!-- mmbase-taglib, -->
  <taglib>
    <taglib-uri>http://www.mmbase.org/mmbase-taglib-1.0</taglib-uri>
    <taglib-location>/WEB-INF/lib/mmbase-taglib.jar</taglib-location>
  </taglib>

  <!-- mmbase-community-taglib,
  Only works when community-application has been activated, which can
  be done after activating the needed builders (community, channel, chatter, message,
  people). To use it you also need the communityprc module to be active.
  -->
  <taglib>
    <taglib-uri>http://www.mmbase.org/mmcommunity-taglib-1.0</taglib-uri>
    <taglib-location>/WEB-INF/lib/mmbase-community.jar</taglib-location>
  </taglib>

  <!-- for the org.mmbase.module.JMSendMail class (maybe in future more classes)-->
  <!--
  <resource-ref>
    <description>
      Mail resource for MMBase
    </description>
    <res-ref-name>mail/MMBase</res-ref-name>
    <res-type>javax.mail.Session</res-type>
    <res-auth>Container</res-auth>
  </resource-ref>
  -->

  <!-- for the org.mmbase.module.database.Naming class -->
  <!--
  <resource-ref>
    <description>
      Datasource for the MMBase Database
    </description>
    <res-ref-name>jdbc/MMBase</res-ref-name>
    <res-type>javax.sql.DataSource</res-type>
    <res-auth>Container</res-auth>
  </resource-ref>
  -->
</web-app>
