<project name="didactor-config" default="config" basedir=".">
  <!-- We need the 'foreach' and 'if' tasks, therefore we use ant-contrib -->
  <taskdef resource="net/sf/antcontrib/antcontrib.properties">
    <classpath>
      <pathelement location="lib/ant-contrib-1.0b1.jar"/>
    </classpath>
  </taskdef>

  <echo message="configuring..."/>
   <!--
       my.properties is supposed to be a symlink or copy of the actual
       property file to be used by default.

       note that any properties set here will override any properties set
       in build.properties and configure.properties.

       if you need to override this one, use the -propertyfile option to
       ant
    -->

  <property file="my.properties"/>
  <property file="build.properties"/>
  <property file="configure.properties"/>


  <target name="config" description="Configure the didactor instance with the values from the properties file">
    <tstamp>
      <format property="war.time" pattern="hh:mm aa, dd MMMM yyyy" locale="en"/>
    </tstamp>
    <replace file="${build.webapp.dir}/version.jsp"
             token="$${war.name}"
             value="${war.name}"/>
    <replace file="${build.webapp.dir}/version.jsp"
             token="$${components}"
             value="${components}"/>
    <replace file="${build.webapp.dir}/version.jsp"
             token="$${war.time}"
             value="${war.time}"/>

    <for list="${caches}"
         param="param">
      <sequential>
        <propertyregex
            override="yes"
            property="par.name"
            input="@{param}"
            regexp="(.*?)=(.*?)"
            select="\1"
            casesensitive="false" />
        <propertyregex
            override="yes"
            global="true"
            property="par.value"
            input="@{param}"
            regexp="(.*)=(.*)"
            select="\2"
            casesensitive="false" />
        <!--
        <echo message="@{param} ${par.name} == ${par.value}" />
        -->
        <xslt style="setcachesize.xslt"
              in="${build.webapp.dir}/WEB-INF/config/caches.xml"
              out="${build.webapp.dir}/WEB-INF/config/caches.help.xml">
          <param name="cache" expression="${par.name}" />
          <param name="size"  expression="${par.value}" />
        </xslt>
        <move file="${build.webapp.dir}/WEB-INF/config/caches.help.xml"
              tofile="${build.webapp.dir}/WEB-INF/config/caches.xml" />
      </sequential>
    </for>


    <!-- A dirty hack, if you ask me-->
    <replace dir="${build.wizards.dir}/data/config"
             token="$${wizards.pages.text.ftype}"
             value="${wizards.pages.text.ftype}"
             summary="true"
             includes="**/*.xml"
    />

  </target>
</project>
