##
##
## UML2MMBase module.
##
## The contents of this file are subject to the Mozilla Public License
##
## Version 1.0 (the "License"); you may not use this file except in
## compliance with the License. You may obtain a copy of the License at
## http://www.mozilla.org/MPL/
##
## Software distributed under the License is distributed on an "AS IS"
## basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
## License for the specific language governing rights and limitations
## under the License.
##
<?xml version="1.0" encoding="UTF-8"?>
## Velocity Template for de mmbase builder generation
## based on a UML class diagram with the MMBase sterotype
##
## @author  Rudie Ekkelenkamp
## @version $Revision: 1.1 $, $Date: 2006-06-12 13:08:34 $
##
#macro ( generateDocumentation $item $indent)
${indent} $transform.documentationHelper.getXML($transform.getJavaDoc($item))
#end
##
#set ($visibility = "protected")
##
## Now determine the maintainer.
##
#set ($packagename = $transform.findPackageName(${class.package}))
#if (!$packagename || $packagename=="")
#set ($maintainer = "mmbase.org")
#else
#set ($maintainer = $packagename)
#end
#set ($classnameLowercase = $transform.toLowerCase(${class.name}))
## This method will retun a list of VOs with all attribute info of the current class
## and of interfaces that are implemented by this class.
## bepaal alle attributen in zowel de class en interfaces, maar niet in de superclasses
#set ($attributes = $transform.getAllAttributes($class.id,"true","true","false",""))
#set ($extendedObject = $transform.getGeneralizationName($class.id))
#if (!$extendedObject || $extendedObject=="")
## If no object was extended, we use the object builder for extend.
#if ($transform.getStereotype($class)==$transform.profile.STEREOTYPE_CLASS_MMBASE)
#set ($extendedObject = $transform.profile.DEFAULT_OBJECT_BUILDER)
#end
## else if the model element is a Relation, the default will be insrel
#if ($transform.getStereotype($class)==$transform.profile.STEREOTYPE_CLASS_RELATION)
#set ($extendedObject = $transform.profile.DEFAULT_RELATION_BUILDER)
#end
#end
<builder
    xmlns="http://www.mmbase.org/xmlns/builder"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.mmbase.org/xmlns/builder 
                        http://www.mmbase.org/xmlns/builder.xsd"
	extends="${extendedObject}" maintainer="finalist.com" name="${class.name}" version="${transform.getVersion($class)}">
<!--
 
-->
   <status>active</status>
   <!--
   <class>$transform.toClassName($packagename,$class.name)</class>
   -->
   <searchage>70</searchage>
   <names>
      <singular xml:lang="nl">$class.name</singular>
      <singular xml:lang="en">$class.name</singular>
      <plural xml:lang="nl">${class.name}</plural>
      <plural xml:lang="en">${class.name}</plural>
   </names>
   <descriptions>
      <description xml:lang="nl">#generateDocumentation ($class "")</description>
      <description xml:lang="en">#generateDocumentation ($class "")</description>
   </descriptions>
	<properties>
## First test if there are html fields, if not skip the <property> element
#set ($test = false)
#foreach ( $att in $attributes )
	#set ($atttypename = $transform.getAttributeType($att))
	#if($atttypename == "html" || $atttypename == "HTML") #set ($test = true) #end
#end
#if($test)
		<property name="htmlFields">
	#foreach ( $att in $attributes )
	#set ($atttypename = $transform.getAttributeType($att))
	#if($atttypename == "html" || $atttypename == "HTML")$transform.toLowerCase($transform.getAttributeName($att)) #end
	#end
      </property>
#end
	</properties>
   <fieldlist>
#set ($i = 3)
#foreach ( $att in $attributes )
#set ($i = $i + 1)
      <field>
#set ($atttypename = $transform.getAttributeType($att))
#set ($notNullValue = false)
## Determine if the field has a Required stereotype. In that casse notNull will be set to true.
#if ($att.hasStereotype($transform.profile.STEREOTYPE_ATTRIBUTE_REQUIRED))
	#set ($notNullValue = true)
#end
         <descriptions>
            <description xml:lang="nl">$transform.documentationHelper.getXML($transform.getAttributeDocumentation($att))</description>
            <description xml:lang="en">$transform.documentationHelper.getXML($transform.getAttributeDocumentation($att))</description>
         </descriptions>
         <gui>
            <guiname xml:lang="nl">#if($att.prompt)$att.prompt#else$transform.getAttributeName($att)#end</guiname>
            <guiname xml:lang="en">$transform.toLowerCase($transform.getAttributeName($att))</guiname>
         </gui>
         <editor>
            <positions>
  #if (  ($visibility == "private") || ( ($visibility == "protected") && ( ($att.visibility == "public") || ($att.visibility == "protected") ) ) || ( ($visibility == "public") &&  ($att.visibility == "public") )  )
  #set ($position = $i)
  #else
  #set ($position = -1)
  #end
               <input>$i</input>
               <list>$position</list>
               <search>$position</search>
            </positions>
         </editor>
#if($att.databaseType == "STRING")			<datatype base="line" xmlns="http://www.mmbase.org/xmlns/datatypes" />
#end         <db>
            <name>$transform.toLowerCase($transform.getAttributeName($att))</name>
            <type key="false" notnull="${notNullValue}"#if($att.databaseType == "STRING" || $att.databaseType == "BYTE" ) size="$att.databaseSize"#end state="persistent">$att.databaseType</type>
         </db>
      </field>
#end
</fieldlist>
</builder>
