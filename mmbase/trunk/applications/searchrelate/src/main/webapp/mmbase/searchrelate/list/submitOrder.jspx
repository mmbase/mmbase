<mm:cloud
    method="asis"
    xmlns:c="http://java.sun.com/jsp/jstl/core"
    xmlns:jsp="http://java.sun.com/JSP/Page"
    xmlns:fn="http://java.sun.com/jsp/jstl/functions"
    xmlns:mm="http://www.mmbase.org/mmbase-taglib-2.0"
    >
  <jsp:output omit-xml-declaration="true" />
  <jsp:directive.page import="java.util.*,org.mmbase.*" />
  <jsp:directive.include file="parameters.jspf" />
  <!--
  <mm:import externid="order"     from="parameters" vartype="list" required="true" jspvar="order" />
  -->
  <mm:import externid="originalOrder" from="parameters" vartype="list" required="true" jspvar="origOrder" />

  <!--
      Because there can be new nodes, which received a new number after commit, the node number is not useable.
      We use the 'original position' here.
  -->
  <div class="saveresult">
    <query>${parameters.query.sql}</query>
    <jsp:scriptlet>
      // convert parameters to a list of integers
      List&lt;Integer&gt; iorigOrder = new ArrayList&lt;Integer&gt;();
      for (Object o : origOrder) {
        iorigOrder.add(org.mmbase.util.Casting.toInt(o));
      }
      List&lt;Integer&gt; iorder = new ArrayList&lt;Integer&gt;(origOrder); // the only reason for the copy is that it has the right length already then
    </jsp:scriptlet>
    <mm:relatednodescontainer clone="parameters.query">
      <mm:relatednodes usetransaction="true" jspvar="n">
        <mm:index offset="0" jspvar="i">
          <jsp:expression>iorder.set(iorigOrder.indexOf(i), n.getNumber())</jsp:expression>
        </mm:index>
      </mm:relatednodes>
    </mm:relatednodescontainer>
    <jsp:expression>org.mmbase.bridge.util.Queries.reorderResult(query, iorder)</jsp:expression>
    <mm:write session="${rid}_order" value="" />
  </div>
</mm:cloud>
