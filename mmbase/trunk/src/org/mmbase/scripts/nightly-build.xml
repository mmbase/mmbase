<?xml version="1.0" encoding="iso-8859-1"?>

<project name="project naam" default="full" basedir=".">
        <property name="version" value="0.0.1" />
        <property name="buildlocation.dir"      value="${basedir}/build"/>
        <property name="base.cvs.dir" value="${basedir}/cvs"/>
        <property name="download.dir" value="${basedir}/download" />
        <property name="destination.dir" value="${basedir}/dailybuid-${version}" />

        <!-- files that gonna be created -->
        <property name="sourcepackage.path" value="${destination.dir}/mmbase-src.zip"/>
        <property name="libpackage.path" value="${destination.dir}/mmbase-lib.zip"/>
        <property name="jarpackage.path" value="${destination.dir}/mmbase.zip"/>
        <property name="warpackage.file" value="${destination.dir}/mmbase.war"/>
        <property name="build.jar.log.path" value="${destination.dir}/mmbase-jar.log"/>
        <property name="build.web.log.path" value="${destination.dir}/mmbase-web.log"/>
        
        
        <!-- cvs stuff -->      
        <property name="base.cvs.config.dir" value="${base.cvs.dir}"/>
        <property name="cvs.config.module" value="config"/>     
        <property name="cvs.config.dir" value="${base.cvs.config.dir}/${cvs.config.module}"/>
        
        <property name="base.cvs.html.dir" value="${base.cvs.dir}"/>
        <property name="cvs.html.module" value="html"/>
        <property name="cvs.html.dir" value="${base.cvs.html.dir}/${cvs.html.module}"/>
        
        <property name="base.cvs.src.dir" value="${base.cvs.dir}/src/org"/>
        <property name="cvs.mmbase.module" value="mmbase"/>
        <property name="cvs.mmbase.dir" value="${base.cvs.src.dir}/${cvs.mmbase.module}"/>

        <target name="cvs" depends="clean">
                <!-- do a cvs login??? -->
                <echo>Do we have to do a CVS login?</echo>

                <!-- get config from cvs -->
                <mkdir dir="${base.cvs.config.dir}"/>
                <cvs cvsRoot=":pserver:guest@www.mmbase.org:/usr/local/cvs"
                package="${cvs.config.module}"
                dest="${base.cvs.config.dir}"
        />              
      
                <!-- get html from cvs -->
                <mkdir dir="${base.cvs.html.dir}"/>
                <cvs cvsRoot=":pserver:guest@www.mmbase.org:/usr/local/cvs"
                package="${cvs.html.module}"
                dest="${base.cvs.html.dir}"
        />                              

                <!-- get src from cvs -->
                <mkdir dir="${base.cvs.src.dir}"/>
                <cvs cvsRoot=":pserver:guest@www.mmbase.org:/usr/local/cvs"
                package="${cvs.mmbase.module}"
                dest="${base.cvs.src.dir}"
                />                              
        </target>
                
        <!-- mirror stuff -->
        <target name="mirror" depends="cvs">
                <!-- first copy our cvs to the dir so, our source stays intact.. -->
                <copy todir="${buildlocation.dir}">
                        <fileset dir="${base.cvs.dir}"/>
                </copy>
        </target>
        
        <!-- store / zip the current sources--> 
        <target name="storesource" depends="mirror">
                <mkdir dir="${destination.dir}"/>
                <zip zipfile="${sourcepackage.path}"
                        basedir="${buildlocation.dir}"
                />
		
                <copy todir="${destination.dir}/dtd">
                        <fileset dir="${base.cvs.config.dir}/config/default/dtd"/>
                </copy>
 
        </target>       
        
        <!-- build stuff -->
        <property name="buildscript.dir" value="src/org/mmbase/scripts"/>
        <property name="buildlocation.buildscript.dir" value="${buildlocation.dir}/${buildscript.dir}"/>
        <property name="buildfile" value="build.xml"/>
        <property name="buildlocation.buildfile.path" value="${buildlocation.buildscript.dir}/${buildfile}"/>   
        <property name="build.compiler" value="jikes" />	
        <property name="optimize" value="off" /><!-- line numbers ?-->
        <property name="debug" value="on" /> <!-- for nightly builds it is more or less logical to compile with debug = on -->	
                
        <target name="build" depends="storesource">             
                <ant antfile="${buildlocation.buildfile.path}" dir="${buildlocation.buildscript.dir}" target="war" />
                <ant antfile="${buildlocation.buildfile.path}" dir="${buildlocation.buildscript.dir}" target="javadocs" />	
	</target>

        <!-- package / copy  all interesting stuff -->
        <property name="mmbase.lib.dir" value="${buildlocation.dir}/build/mmbase/mmbase-webapp/WEB-INF/lib"/> 
        <property name="mmbase.jar.file" value="mmbase.jar"/>
        <property name="mmbase.web.dir" value="${buildlocation.dir}/build/webroot"/> 
        
        <target name="storebuild" depends="build">
                <!-- our build thingies -->
                <zip zipfile="${jarpackage.path}">              
                        <fileset dir="${mmbase.lib.dir}" includes="${mmbase.jar.file}" />
                        <fileset dir="${mmbase.web.dir}" />
                </zip>
                                
                <!-- the libs we used -->
                <zip zipfile="${libpackage.path}" basedir="${mmbase.lib.dir}">
                <exclude name="${mmbase.jar.file}"/>
                        <include name="*.jar"/>
                </zip>         
		
		<!-- the war... -->
       		<copy file="${buildlocation.dir}/build/mmbase/mmbase.war" tofile="${warpackage.file}"/>
		<!-- the java docs -->
		<copy todir="${destination.dir}">
			<fileset dir="${buildlocation.dir}/build/mmbase-src/docs"/>
                </copy>
	</target>       
        
        
        <!-- remove all our crap -->
        <target name="clean">
		<delete dir="${buildlocation.dir}"/>
        </target>
        
        <target name="full" depends="storebuild,clean">    
        </target>
</project>
