<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE storage PUBLIC "-//MMBase//DTD storage config 1.0//EN" "http://www.mmbase.org/dtd/storage_1_0.dtd" >
<storage>
	<!-- HSQLdb configuration resource.
			 Note: a number of options used here may be incompatible with older configurations, especially
			 Specifically, this configuration will replace all SQL reserved words (for fieldnames).
			 If you use HSQLdb as a production database, and you encounter problems when accessing fields,
			 you migth be using 'reserved' words that were not captured in odler versions.
			 In that case, you migth want to supply your own resource.
	-->
	<storagemanagerfactory classname="org.mmbase.storage.implementation.database.DatabaseStorageManagerFactory" version="0.1" />

	<!-- use the manager for relational databases -->
	<storagemanager classname="org.mmbase.storage.implementation.database.RelationalDatabaseStorageManager" version="0.1" />

	<searchqueryhandler classname="org.mmbase.storage.search.implementation.database.HSqlSqlHandler" />

	<attributes>
		<!-- Automatically prefix reserved words with "m_" -->
		<attribute name="default-storage-identifier-prefix">m</attribute>

		<!-- HSQLdb expects table and field names to be uppercase -->
		<attribute name="storage-identifier-case">upper</attribute>

		<!-- Not sure about this option, so turned it off -->
		<option name="database-supports-blob" value="false" />

		<!-- Support composite (unique) indexes -->
		<option name="database-supports-composite-index" value="true" />

		<!-- Unique index declaration -->
		<scheme name="create-unique-key-scheme">UNIQUE ({2})</scheme>

		<!-- Unique index declaration -->
		<scheme name="create-foreign-key-scheme">FOREIGN KEY ({2}) REFERENCES {4} ({5})</scheme>

		<!-- HSQLdb wants to have index declarations at the end of a CREATE TABLE statement  -->
		<scheme name="create-table-scheme">CREATE TABLE {1} ({2} {3} {5})</scheme>
		<scheme name="create-object-table-scheme">CREATE TABLE {1} ({2} {3} {5})</scheme>

	</attributes>

	<!-- HSQLdb type mappings -->
	<type-mappings>
		<type-mapping name="DOUBLE" type="DOUBLE" />
		<type-mapping name="LONG" type="BIGINT" />
		<type-mapping name="FLOAT" type="FLOAT" />
		<type-mapping name="INTEGER" type="INTEGER" />
		<type-mapping name="NODE" type="INTEGER" />
		<type-mapping name="STRING" min-size="1" max-size="16777216" type="VARCHAR({0})" />
		<type-mapping name="XML" min-size="1" max-size="16777216" type="VARCHAR({0})" />
		<type-mapping name="BYTE" min-size="1" max-size="16777216" type="BINARY" />
	</type-mappings>

	<!-- HSQLdb disallowed fields are retrieved from the database -->
	<disallowed-fields />

</storage>
