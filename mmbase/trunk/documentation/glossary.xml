<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
"http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<article>
  <title>MMBase Glossary</title>

  <articleinfo>
    <copyright>
      <year>This document is created under the Mozilla Public License</year>
    </copyright>

    <authorgroup>
      <author>
        <firstname>Henk</firstname>
        <surname>Hangyi</surname>
      </author>
      <author>
        <firstname>Michiel</firstname>
        <surname>Meeuwissen</surname>
      </author>
    </authorgroup>

    <revhistory>
      <revision>
        <revnumber>0.0</revnumber>
        <date>June 2003</date>
        <revremark>First draft</revremark>
      </revision>
    </revhistory>
    <abstract>
      <para>This glossary tries to provide an overview of the terms used in
      MMBase and their meaning. As MMBase has evolved during the last years,
      its language evolved with it. This means that sometimes one term refers
      to two concepts, whereas in other occasions two terms are synonyms for
      one and the same thing. Therefore this document tries to describe the
      meaning of the terms used in MMBase in the different contexts. Next to
      this, the glossary tries to provide a list preferred terms.</para>
    </abstract>
  </articleinfo>

  <section>
    <title>Introduction</title>

    <para>Below you see how a term is explained in this glossary. First an
    example of the term MMBase is given and then the different elements in the
    definition of a term are described.</para>

    <glosslist>
      <glossentry>
        <glossterm>Multi Media Base</glossterm>

        <acronym>MMB</acronym>

        <abbrev>MMBase</abbrev>

        <glossdef>
					<orderedlist>
						<listitem>
							<para>for managers: 
								open source content management system, with strong multi-media features
							</para>
						</listitem>
						<listitem>
							<para>for dummies: 
								a tool by which you can build intelligent websites
							</para>
						</listitem>
						<listitem>
							<para>for techies: 
								java based webapplication, which acts as an object oriented
								interface to relational databases
							</para>
						</listitem>
						<listitem>
							<para>for information analysts: 
								content management system by which text, images
								and other content can be managed in an object oriented way
							</para>
						</listitem>
					</orderedlist>
					<remark>
						It is not clear whether MMBase really stands for Multi Media Base.
						<emphasis>The prefered term is MMBase</emphasis>
					</remark>
				</glossdef>
				<glossseealso>open source</glossseealso>
				<glossseealso>content management</glossseealso>
						
      </glossentry>

      <glossentry>
        <glossterm>headword and inflected forms, like plurals</glossterm>

        <acronym>acronym of the term</acronym>

        <abbrev>abbreviation of the term</abbrev>

        <glossdef><orderedlist><listitem><para>first definition with
        information about who uses the term or expression, and in what
        situation</para></listitem><listitem><para>second definition with
        information about who uses the term or expression, and in what
        situation</para></listitem></orderedlist><example><title>title of
        example</title><para>an example of use of the term</para></example><remark>A
        remark or background story about the term.<emphasis>Preferred use or
        whether the term is deprecated.</emphasis></remark>
				</glossdef>
				<glossseealso>cross-reference</glossseealso>
      </glossentry>
    </glosslist>
  </section>

  <section>
    <title>MMBase Glossary</title>

    <glosslist>
      <glossentry id="builder">
        <glossterm>builder</glossterm>

        <glossdef><orderedlist><listitem><para>The xml configuration file
        which defines an object type in the MMBase object cloud.</para></listitem><listitem><para>The
        xml configuration file used by MMBase to create a table in the
        database.</para></listitem></orderedlist><example><title>Example of a
        builder with only one field, named title.</title><para>
							<programlisting><![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE builder PUBLIC "-//MMBase//DTD builder config 1.1//EN" "http://www.mmbase.org/dtd/builder_1_1.dtd">
<builder extends="object" maintainer="mmbase.org" name="news" version="0">
  <searchage>14</searchage>
  <names>
    <singular xml:lang="en">NewsItem</singular>
    <singular xml:lang="nl">NieuwsItem</singular>
    <plural xml:lang="en">NewsItems</plural>
    <plural xml:lang="nl">NieuwsItems</plural>
  </names>

  <descriptions>
    <description xml:lang="en">News item</description>
    <description xml:lang="nl">Nieuws item</description>
  </descriptions>

  <fieldlist>
    <field>
      <descriptions>
        <description xml:lang="en">Title of the news item</description>
        <description xml:lang="nl">Titel (hoofd kop) van het nieuwsitem</description>
      </descriptions>
      <gui>
        <guiname xml:lang="en">Title</guiname>
        <guiname xml:lang="nl">Titel</guiname>
      </gui>
      <editor>
        <positions>
          <list>1</list>
        </positions>
      </editor>
      <db>
        <name>title</name>
        <type key="false" notnull="true" size="255" state="persistent">STRING</type>
      </db>
    </field>
  </fieldlist>
</builder>
]]>
</programlisting></para></example>
					<remark>The
						term builder is used when one speaks about the object cloud and its
						representation in the database.
					</remark>
					<glossseealso otherterm="nodemanager" />
					<glossseealso otherterm="object type" />
				</glossdef>
      </glossentry>

      <glossentry id="nodemanager">
        <glossterm>node manager</glossterm>

        <glossdef>
					<orderedlist>
						<listitem>
							<para>
								This bridge concept represents the object which describes meta information (which
								fields are availabe and so on) about node types, and serves to create new nodes and
								so on.
							</para>
						</listitem>
						<listitem>
							<para>
								A synonym for 'builder'.
							</para>
						</listitem>
						<listitem>
							<para>...</para>
						</listitem>
					</orderedlist>
					<example>
						<title>Example of use in spoken language</title>
						<para>
							The nodemanager of an image makes it possible to scale images dynamically.
						</para>
					</example>
					<remark>The term nodemanager is used in when one speaks about the functionality of the bridge.</remark>
					<glossseealso otherterm="builder" />
					<glossseealso otherterm="object type" />
					<glossseealso otherterm="bridge" />
				</glossdef>
      </glossentry>

      <glossentry id="object type">
        <glossterm>object type</glossterm>
        <glossdef>
					<orderedlist>
						<listitem>
							<para>
								An object type defines an object in the object cloud
							</para>
						</listitem>
						<listitem>
							<para>...</para>
						</listitem>
					</orderedlist>
					<example>
						<title>In spoken language</title>
						<para>
							The object type of the employee object only contains fields which describe the
							employee, but are not related to its position in departments and
							projects.
						</para>
					</example>
					<remark>
						The term is used when one speaks about information analyses.
					</remark>
					<glossseealso otherterm="builder" />
					<glossseealso otherterm="nodemanager" />
				</glossdef>
      </glossentry>

      <glossentry id="role">
        <glossterm>role</glossterm>
				<glossdef>
					<para>
						The name of an reldef object.
					</para>
					<glossseealso otherterm="reldef" />
				</glossdef>
      </glossentry>

      <glossentry id="reldef">
        <glossterm>reldef</glossterm>
				<glossdef>
					<para>
						The builder defining relation roles.						
					</para>
					<glossseealso otherterm="role" />
				</glossdef>
      </glossentry>

      <glossentry id="insrel">
        <glossterm>insrel</glossterm>
        <glossdef>
					<para>
						A relation instance. This is special kind of object type which contains relation objects.
					</para>
					<glossseealso otherterm="builder" />
					<glossseealso otherterm="object type" />
				</glossdef>
      </glossentry>

      <glossentry id="typerel">
        <glossterm>typerel</glossterm>
        <glossdef>
					<para>
						Typerel is the MMBase builder which defines the allowed relations. If for example you
						want to create a certain relation from news node to an url node, then a corresponding
						typerel record, which allows that must exist.					
					</para>
					<para>
						Inheritance is taken into consideration, so if you allow from object to object (with a
						certain role), then every kind of relation (with that certain role) should be allowed
						(because all node types extends object).
					</para>
					<glossseealso otherterm="inheritance" />
					<glossseealso otherterm="relation" />
				</glossdef>
      </glossentry>



      <glossentry id="relation">
        <glossterm>relation</glossterm>
        <glossdef>
					<orderedlist>
						<listitem>
							<para>
								An MMBase Node defining a link between to other MMBase Nodes. A relation can contain
								other data. A relation instance.
							</para>
						</listitem>
						<listitem>
							<para>
								An allowed relation. Sometimes also 'typerel' entries are referred to as simply
								'relations'. It would perhaps be clearer to call these 'allowed relations'
							</para>
						</listitem>
						<listitem>
							<para>
								A relation definition or reldef instance. 
							</para>
						</listitem>
					</orderedlist>
					<glossseealso otherterm="insrel" />
					<glossseealso otherterm="reldef" />
					<glossseealso otherterm="typerel" />
				</glossdef>
      </glossentry>


      <glossentry id="typedef">
        <glossterm>typedef</glossterm>
        <glossdef>
					<para>
						In MMBase object types are objects too. These nodes are stored in the 'typedef'
						builder. It generates a small chicken/egg problem because the typedef type itself is
						also present a a node of itself. (Normally the typedef node will have to have number 1)
					</para>
				</glossdef>
      </glossentry>


      <glossentry id="object">
        <glossterm>object</glossterm>
        <glossdef>					
					<orderedlist>
						<listitem>
							<para>
								The base builder, from which every other builder extends.
							</para>
						</listitem>
						<listitem>
							<para>
								General term for 'node'.
							</para>
						</listitem>
						<listitem>
							<para>
								An instance of a Java class.
							</para>
						</listitem>
					</orderedlist>
				</glossdef>
      </glossentry>


      <glossentry id="inheritance">
        <glossterm>inheritance</glossterm>
        <glossdef>					
					<para>
						MMBase supports inheritance. This means that every 'news' node is also an 'object'
						node. You can also extend your 'mynews' builder from the 'news' builder. All fields from
						news are then inherited to mynews, and mynews nodes can be treated as (because they are)
						news nodes.
					</para>
					<glossseealso otherterm="builder" />
				</glossdef>
      </glossentry>

      <glossentry id="node">
        <glossterm>node</glossterm>
        <glossdef>
					<para>
						MMBase objects are generally referred to as 'node', especially in the bridge. A normal
						MMBase node corresponds to one record in the database (in the table(s) associated with
						the builder). We recognize also 'cluster nodes' and 'virtual nodes'.
					</para>
					<glossseealso otherterm="clusternode" />
					<glossseealso otherterm="virtualnode" />
					<glossseealso otherterm="bridge" />
				</glossdef>
      </glossentry>


      <glossentry id="clusternode">
        <glossterm>cluster node</glossterm>
        <glossdef>
					<para>
						Complicated database queries do not give back simple nodes, but fields from several
						tables. A record from such a table join is represented by a 'cluster node'. A cluster
						node is a special kind of virtual node.				
					</para>
					<glossseealso otherterm="virtualnode" />
				</glossdef>
      </glossentry>


      <glossentry id="virtualnode">
        <glossterm>virtual node</glossterm>
        <glossdef>
					<para>
						A node to which no builder xml is associated. 
					</para>
					<glossseealso otherterm="clusternode" />
				</glossdef>
      </glossentry>

      <glossentry id="cloud">
        <glossterm>cloud</glossterm>
        <glossdef>
					<orderedlist>
						<listitem>
							<para>
								A bunch of interrelated nodes viewed as a unity.
							</para>
						</listitem>
						<listitem>
							<para>
								All nodes from one MMBase instance.
							</para>
						</listitem>
						<listitem>
							<para>
								All nodes inside an MMBase transaction.
							</para>
						</listitem>
					</orderedlist>
					<glossseealso otherterm="node" />
				</glossdef>
      </glossentry>


      <glossentry id="plusone">
        <glossterm>+1</glossterm>
        <glossdef>										
					<orderedlist>
						<listitem>
							<para>
								An geeky synonym for 'I agree'.
							</para>
						</listitem>
						<listitem>
							<para>
								One of the elections in a vote
							</para>
						</listitem>
					</orderedlist>
					<glossseealso otherterm="vote" />
				</glossdef>
      </glossentry>


      <glossentry id="vote">
        <glossterm>vote</glossterm>
        <glossdef>										
					<para>
						Major decisions on MMBase implementation are done by voting by commitors on the
						developers list.
					</para>
					<glossseealso otherterm="plusone" />
					<glossseealso otherterm="commitor" />
				</glossdef>
      </glossentry>



      <glossentry id="commitor">
        <glossterm>commmitor</glossterm>
        <glossdef>										
					<para>
						An MMBase developer with CVS commiting access.
					</para>
					<glossseealso otherterm="vote" />
					<glossseealso otherterm="cvs" />
				</glossdef>
      </glossentry>


      <glossentry id="cvs">
        <glossterm>Concurrent Versions System</glossterm>
				<acronym>CVS</acronym>
        <glossdef>										
					<para>
						Open Source version system, which is used to administrate MMBase source codes. Typical
						for CVS is that it is possible to use it withouth acquiring locks on files (which is the
						way it is used for MMBase). This means that files can be edited simultaneously by
						different people, but also that the risc for 'conflicts' arises (if a patch cannot be
						made automaticly). 
					</para>
					<para>
						The MMBase CVS repository is hosted on the mmbase.org server.
					</para>
					<glossseealso otherterm="vote" />
					<glossseealso otherterm="module" />
				</glossdef>
      </glossentry>

      <glossentry id="mmbase">
        <glossterm>MMBase</glossterm>
        <glossdef>
					<para>
						Very object oriented open source content managment system based (a.o) on java servlet
						technology. 
					</para>				
					<glossseealso>Everywhere else</glossseealso>
				</glossdef>
      </glossentry>

      <glossentry id="bridge">
        <glossterm>bridge</glossterm>
        <glossdef>
					<para>
						The bridge is the set of Java interfaces which are to be used to talk to MMBase. In
						contradiction to the core of MMBase all actions are authorized by the security
						system. Templating language should communicate through the bridge, and for example the
						MMBase Taglib is doing this.
					</para>					
					<para>
						There is currently one 'basic' implementation of the bridge, and also one alternative
						implementation which makes it possible to talk to a 'remote' MMBase by remote method
						invocations.
					</para>
					<glossseealso otherterm="rmmci" />
					<glossseealso otherterm="mmci" />
					<glossseealso otherterm="core" />
				</glossdef>				
      </glossentry>


      <glossentry id="core">
        <glossterm>core</glossterm>
        <glossdef>
					<orderedlist>
						<listitem>
							<para>
								The java classes of MMBase which are 'under' the bridge, and should be invisible for
								casual users. They provide the data persistency and other basic MMBase concepts like
								relations. The MMBase core is not protected by MMBase security.
							</para>
						</listitem>
						<listitem>
							<para>
								All java classes from the 'src' CVS module which are present in mmbase.jar, so
								everything which is not an MMBase application, is MMBase 'core'.
							</para>
						</listitem>
						<listitem>
							<para>
								MMObjectBuilder/MMObjectNode vs NodeManager/Node. When you want to define a new
								'object type' with extra functionality then it is currently not possible to extend
								NodeManagers or Nodes, but you need to extend the core's MMObjectBuilder. 
							</para>
						</listitem>
					</orderedlist>
					<glossseealso otherterm="bridge" />
				</glossdef>				
      </glossentry>

      <glossentry id="mmci">
        <glossterm>MMBase Cloud Interfaces</glossterm>
        <acronym>MMCI</acronym>
				<glosssee otherterm="bridge" />
      </glossentry>

      <glossentry id="rmmci">
        <glossterm>Remote MMBase Cloud Interfaces</glossterm>
        <acronym>RMMCI</acronym>
        <glossdef>
					<para>
						An alternative implementation of the bridge. Can be used to implement life/staging MMBase's, but can
						also be useful to inspect/test a running MMBase.
					</para>
					<glossseealso otherterm="bridge" />
					<glossseealso otherterm="wiab" />
        </glossdef>
      </glossentry>

      <glossentry id="wiab">
        <glossterm>Web in a Box</glossterm>
        <acronym>WIAB</acronym>
        <glossdef>
					<para>
						A packaged content managment system based on MMBase. Typical for WIAB is a fixed object
						model and a distinction between life and staging environments. It was developed for the
						Amsterdam municipal by Framfab but is maintained by Finalist now.
					</para>
					<glossseealso otherterm="rmmci" />
        </glossdef>
      </glossentry>

      <glossentry id="mmc">
        <glossterm>MMBase Managment Committee</glossterm>
        <acronym>MMC</acronym>
        <glossdef>
					<para>
						High status MMBase commitors who are supposed to meet every thursday to talk about it.
          </para>
				</glossdef>
      </glossentry>

      <glossentry id="xmlimporter">
        <glossterm>temporary cloud project</glossterm>
        <acronym>TCP</acronym>
        <glossdef>
					<para>
						An XML way to add content to an MMBase cloud. It is hardly used anymore.
          </para>
					<glossseealso otherterm="xmlimporter" />
					<glossseealso otherterm="scan" />
				</glossdef>
      </glossentry>


      <glossentry id="scan">
        <glossterm>SCAN</glossterm>
        <glossdef>
					<para>
						The original MMBase template language. An interpreted language charactarized by several
						parse stages of the source. Commands, parameters and variables are recognized by
						$-symbols. SCAN HTML pages use to be mapped to '.shtml'.
          </para>
					<para>
						Use of SCAN is nowadays discouraged in favour of more modern and standardized scripting
						manner like JSP and (MMBase) taglib.
					</para>
					<para>
						Because the long history of SCAN, SCAN-specific legacy code can still be found on a lot
						of place in the MMBase core code. Even the bridge way to handle with 'MMBase modules' is
						influenced by SCAN.
					</para>						
					<glossseealso otherterm="mmbasetaglib" />
					<glossseealso otherterm="core" />
				</glossdef>
      </glossentry>


      <glossentry id="xmlimporter">
        <glossterm>XML importer</glossterm>
        <glossdef>
					<para>
						A way to synchronize data from another source with MMBase data. This happens in a fuzzy
						way, to avoid duplications because of minor inconsistencies in the source data.
          </para>
				</glossdef>
      </glossentry>

      <glossentry id="context">
        <glossterm>context</glossterm>
        <glossdef>
					<orderedlist>
						<listitem>
							<para>
								In several security implementations the concept 'security context' is stored in
								the owner field, to attribute rights to objects.
							</para>
						</listitem>
						<listitem>
							<para>
								In a J2EE environment the web-application is associated with a 'context', which is
								basicly the first parth of the path. Often it will be '/', but this is not required
								for MMBase.
							</para>
						</listitem>
						<listitem>
							<para>
								In MMBase taglib a 'context' is a container for Taglib variables. It is also
								asociated with every page, the 'context' tag, and list tags.
							</para>
						</listitem>
						<listitem>
							<para>
								A 'Cloud Context' is the bridge object which provides clouds, modules, and empty
								lists.
							</para>
						</listitem>
					</orderedlist>
				</glossdef>


      </glossentry>


      <glossentry id="module">
        <glossterm>module</glossterm>
        <glossdef>
					<orderedlist>
						<listitem>
							<para>
								An piece of (MMBase) functionality which is configured by a XML file in
								&lt;config&gt;/modules/. MMBase itself can be seen as a group of such modules.
							</para>
						</listitem>
						<listitem>
							<para>
								When talking about CVS, a 'module' is a kind of main entry of the repository. The
								MMBase CVS repository currently has the following modules: src (core java classes),
								documentation (docbook sources), html (general content for the mmbase distro),
								config (example configuration) and applications (components supported by the
								community).								
							</para>
						</listitem>
						<listitem>
							<para>
								An independent piece of software which
								forms part of one or more larger programs.  Different
								languages have different concepts of a module but there are
								several common ideas.
							</para>
							<para>
								Modules are usually compiled seperately (in compiled
								languages) and provide an abstraction or information hiding
								mechanism so that a module's implementation can be changed
								without requiring any change to other modules.  In this
								respect they are similar to objects in an object-oriented
								language, though a module may contain many procedures
								and/or functions which would correspond to many objects.
							</para>
							<remark>
								Definition copied from The Free On-line Dictionary of Computing (09 FEB 02) [foldoc]
							</remark>
						</listitem>
					</orderedlist>
					<glossseealso otherterm="cvs" />
				</glossdef>
      </glossentry>

      <glossentry id="unidir">
        <glossterm>unidirectional</glossterm>
        <glossdef>
					<para>
						A value for the 'dir' attribute of reldef and insrel nodes. It only sais something about
						the visibility of the relation. A unidirection relation is not visible from the
						destination node.
          </para>
					<glossseealso otherterm="bidir" />
					<glossseealso otherterm="reldef" />
					<glossseealso otherterm="insrel" />
				</glossdef>
      </glossentry>

      <glossentry id="bidir">
        <glossterm>bidirectional</glossterm>
        <glossdef>
					<para>
						A value for the 'dir' attribute of reldef and insrel nodes. It only sais something about
						the visibility of the relation. Every MMBase relation is bidirectional in the sense that
						it has a clearly defined source and destination.
          </para>
					<glossseealso otherterm="unidir" />
					<glossseealso otherterm="reldef" />
					<glossseealso otherterm="insrel" />
				</glossdef>
      </glossentry>

      <glossentry id="taglib">
        <glossterm>tag libary</glossterm>
        <abbrev>taglib</abbrev>
				<glossdef>
					<para>
						A Tag Library is a SUN defined way to define extra XML-like tags. A tag libraray is
						implemented in Java and currently only available in mixture with JSP-pages.
          </para>
					<glossseealso otherterm="mmbasetaglib" />
        </glossdef>
      </glossentry>

      <glossentry id="mmbasetaglib">
        <glossterm>MMBase tag libary</glossterm>
        <abbrev>MMBase taglib</abbrev>
				<glossdef>
					<para>
						A taglib implementation for MMBase. Tags to access MMBase data, but also more general
						tags. It consists more or less a complete (however simple) language.
          </para>
					<glossseealso otherterm="taglib" />
        </glossdef>
      </glossentry>
    </glosslist>
		
  </section>
</article>