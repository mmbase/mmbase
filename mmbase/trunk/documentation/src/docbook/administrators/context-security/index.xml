<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
"http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<article id="administrators_context_security">
  <articleinfo>
    <title>Context Security Configuration</title>

    <date>2003-02-12</date>

    <edition>$Id: context-security.xml,v 1.12 2006/06/21 05:24:39 michiel Exp
    $</edition>

    <authorgroup>
      <author>
        <firstname>Eduard</firstname>

        <surname>Witteveen</surname>
      </author>

      <author>
        <firstname>Sjoerd</firstname>

        <surname>de Heer</surname>
      </author>

      <author>
        <firstname>Henk</firstname>

        <surname>Hangyi</surname>
      </author>

      <author>
        <firstname>Pierre</firstname>

        <surname>van Rooden</surname>
      </author>
    </authorgroup>

    <legalnotice>
      <para>This software is OSI Certified Open Source Software. OSI Certified
      is a certification mark of the Open Source Initiative.</para>

      <para>The license (Mozilla version 1.0) can be read at the MMBase site.
      See <ulink
      url="http://www.mmbase.org/license">http://www.mmbase.org/license</ulink></para>
    </legalnotice>

    <revhistory>
      <revision>
        <revnumber>0.1</revnumber>

        <date>Undated</date>

        <authorinitials>EW</authorinitials>
      </revision>

      <revision>
        <revnumber>0.2</revnumber>

        <date>2002-10-25</date>

        <authorinitials>SdH</authorinitials>
      </revision>

      <revision>
        <revnumber>0.3</revnumber>

        <date>2003-01-30</date>

        <authorinitials>HH</authorinitials>
      </revision>

      <revision>
        <revnumber>0.4</revnumber>

        <date>2003-02-07</date>

        <authorinitials>PvR</authorinitials>

        <revremark>Placed security framework and xml how-to in separate
        documents</revremark>
      </revision>
    </revhistory>
  </articleinfo>

  <section id="introduction">
    <title>Introduction</title>

    <section id="context_security">
      <title>A security implementation with contexts</title>

      <para>A context exists of a set of rights which describe what you can do
      within this context with an object of MMBase. For example you define
      read access to a the context which is used by anonymous visitors of your
      site and you can define a context with edit rights for registered users
      of your site. The main parts of the security framework are:</para>

      <itemizedlist>
        <listitem>
          <para>Single users (users)</para>
        </listitem>

        <listitem>
          <para>Groups (users)</para>
        </listitem>

        <listitem>
          <para>Contexts</para>
        </listitem>
      </itemizedlist>
    </section>

    <section id="users">
      <title>Users</title>

      <para>The users of MMBase can have different levels anonymous or
      registered users. The anonymous users are the normal page viewers. There
      rights are being served through the anonymous module of MMBase.
      Registered users are being served through the user/password module, this
      are the users that can alter data within MMBase.</para>

      <para>For registered users there is also an extra level called rank. The
      default ranks are 'Basic user' and 'Administrator'. These ranks can
      denote extra rights within MMBase. The anonymous users can only have the
      rank 'Anonymous'.</para>
    </section>

    <section id="groups">
      <title>Groups</title>

      <para>A Group can exist of users and/ or groups. In this way you can
      define a structure which inherits rights from lower levels. For example
      the office-sweeper group may read the newspaper. The office-clerk group
      is member of the office-sweeper group but may also use the toilet. So a
      member of the office-clerk may read the newspaper and go to the toilet,
      even at the same time. While a office-sweeper can only read the paper
      and work fast to get home in time to use the bathroom. As you probably
      noticed a stupid example which might help to understand the
      framework.</para>

      <para>A user can be member of more than one group within MMBase.</para>
    </section>

    <section id="contexts">
      <title>Contexts</title>

      <para>Each object within MMBase has a context. Which context is
      associated with an object can be seen in the owner field of that object.
      The name found there is the name first used as context before fallback
      on the default context. In the context is defined which rights are
      granted to a user or group. The following rights are available.</para>

      <itemizedlist>
        <listitem>
          <para>read, read the content of an object.</para>
        </listitem>

        <listitem>
          <para>write, write content to an object.</para>
        </listitem>

        <listitem>
          <para>link, making a relation between two objects.</para>
        </listitem>

        <listitem>
          <para>delete, remove an object.</para>
        </listitem>

        <listitem>
          <para>create, create a new object of the type typedef. The so called
          editors.</para>
        </listitem>

        <listitem>
          <para>change, changing of context.</para>
        </listitem>
      </itemizedlist>

      <para>Of each context is also know to which context it may change. An
      admin may change to a user but a user may not change to an admin.</para>
    </section>
  </section>

  <section id="explanation">
    <title>Central notions in the context security model</title>

    <section id="contexts_groups_users">
      <title>Contexts, Groups and Users</title>

      <section id="reference_field">
        <title>Reference field</title>

        <para>Within MMBase each object has a field called 'owner'. The value
        of this field is used by the security system to specify the context of
        an object. If an object is accessed and the name of its context does
        not exist a warning will be issued in the logs and the default context
        will be selected.</para>
      </section>

      <section id="expl_contexts">
        <title>Contexts</title>

        <para>A context defines which rights a group has on a object. Also is
        defined within this context to which contexts you can change to assume
        there rights.</para>
      </section>

      <section id="groupss">
        <title>Groups</title>

        <para>A group is a collection of users and groups. In this way you can
        represent your organization in the security system. If used properly
        in combination with contexts for each group.</para>
      </section>

      <section id="userss">
        <title>Users</title>

        <para>Anonymous users: These users get there rights from the module
        called anonymous. They are considered the normal page viewers. There
        rank will always be 'ANONYMOUS'.</para>

        <para>Logged in users: These users are validated through the
        user/password module of the context security. They are the users which
        can change your data in MMBase. The rank of these users is normally
        'Basic users' but can also be 'Administrator' which is a rank that
        grants more rights within MMBase.</para>
      </section>

      <section id="overview">
        <title>Overview picture of the security model</title>

        <screenshot>
          <graphic fileref="media/contextSecurity.png" />
        </screenshot>

        <para>Note that the context to which a user belongs, is stored in the
        owner field of the user.</para>
      </section>
    </section>

    <section id="operations">
      <title>Operations on objects</title>

      <section id="rwd">
        <title>Read, Write and Delete</title>

        <para>To be able to read or write or delete an object in MMBase a user
        needs the right 'read' or 'write' or 'delete' for this object.</para>
      </section>

      <section id="making_reference">
        <title>Making a reference to.</title>

        <para>The right 'link' give a user the possibility to create relations
        between objects in MMBase. The user needs create rights on the
        relation builder for this to work!</para>
      </section>

      <section id="create">
        <title>Create</title>

        <para>The right 'create' is only used for builders. It gives the
        specified user the right to create objects in this selected
        builder.</para>
      </section>

      <section id="change">
        <title>Change</title>

        <para>The right 'change context' gives a users the right to alter the
        rights defined in the selected context.</para>
      </section>
    </section>

    <section id="rights">
      <title>Rights</title>

      <section id="create_object">
        <title>Create a new object</title>

        <para>To be able to create an object the user needs 'create' rights on
        the node that represents the node-type within MMBase, see the typedef
        table.</para>
      </section>

      <section id="create_relation">
        <title>Creating a new relation</title>

        <para>To create a new relation your users needs 'create' rights on the
        insrel table and 'link' rights between the objects where he or she
        wants to create a relation in-between.</para>
      </section>

      <section id="alter">
        <title>Altering an object</title>

        <para>To be able to change an object the user needs the 'change' right
        for that object.</para>
      </section>

      <section id="change_rights">
        <title>Changing rights in contexts</title>

        <para>When you want a user to be able to change the rights of a
        context then that user needs 'change context' rights for that selected
        context.</para>
      </section>

      <section id="delete_right">
        <title>Deleting objects</title>

        <para>To remove an object the user needs 'delete' rights.</para>
      </section>
    </section>
  </section>

  <section id="extended_example">
    <title>An extended example</title>

    <para>The following XML will be used to provide some explanation on the
    context security configuration</para>

    <programlisting>
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;!DOCTYPE contextconfig PUBLIC "//MMBase - contextconfig//" "http://www.mmbase.org/dtd/securitycontextconfig.dtd"&gt;
&lt;contextconfig&gt;
  &lt;loginmodules&gt;
    &lt;module name="anonymous" class="org.mmbase.security.implementation.context.AnonymousLogin" /&gt;
    &lt;module name="name/password" class="org.mmbase.security.implementation.context.PasswordLogin" /&gt;
  &lt;/loginmodules&gt;
  &lt;accounts&gt;
    &lt;user name="anonymous" context="default" /&gt;
    &lt;user name="admin" context="admin"&gt;
      &lt;identify type="name/password" rank="administrator"&gt;admin2k&lt;/identify&gt;
    &lt;/user&gt;
    &lt;user name="foo" context="default" &gt;
      &lt;identify type="name/password" rank="basic user"&gt;bar&lt;/identify&gt;
    &lt;/user&gt;
  &lt;/accounts&gt;
  &lt;groups&gt;
    &lt;group name="everyone"&gt;
      &lt;contains type="group" named="users" /&gt;
      &lt;contains type="user" named="anonymous" /&gt;
    &lt;/group&gt;
    &lt;group name="users"&gt;
      &lt;contains type="user" named="foo" /&gt;
      &lt;contains type="group" named="administrators" /&gt;
    &lt;/group&gt;
    &lt;group name="administrators"&gt;
      &lt;contains type="user" named="admin" /&gt;
    &lt;/group&gt;
  &lt;/groups&gt;
  &lt;contexts default="default"&gt;
    &lt;context name="default"&gt;
      &lt;operation type="create"&gt;
        &lt;grant group="users" /&gt;
      &lt;/operation&gt;
      &lt;operation type="read"&gt;
        &lt;grant group="everyone" /&gt;
      &lt;/operation&gt;
      &lt;operation type="write"&gt;
        &lt;grant group="users" /&gt;
      &lt;/operation&gt;
      &lt;operation type="link"&gt;
        &lt;grant group="users" /&gt;
      &lt;/operation&gt;
      &lt;operation type="delete"&gt;
        &lt;grant group="users" /&gt;
      &lt;/operation&gt;
      &lt;operation type="change context"&gt;
        &lt;grant group="administrators" /&gt;
      &lt;/operation&gt;
      &lt;possible context="default" /&gt;
    &lt;/context&gt;
  &lt;/contexts&gt;
&lt;/contextconfig&gt;
    </programlisting>

    <section id="loginmodule">
      <title>&lt;loginmodules /&gt;</title>

      <para>This is the module that takes care of the login process within
      MMBase. There are no changes needed to this field so it will not be
      described any further.</para>
    </section>

    <section id="accounts">
      <title>&lt;accounts /&gt;</title>

      <para>This are the accounts of the users which are know to the system.
      It is advised to also create a user called anonymous since it does not
      exists anywhere else.</para>
    </section>

    <section id="user_tag">
      <title>&lt;user&gt; &lt;identify /&gt; &lt;/user&gt;</title>

      <para>The following values can be given to the elements of user.</para>

      <itemizedlist>
        <listitem>
          <para>name="..." : The name of the user</para>
        </listitem>

        <listitem>
          <para>context="..." : The context that objects get when created
          through this user</para>
        </listitem>

        <listitem>
          <para>&lt;identify type="..." &gt; : The login type refers to
          /contextconfig/loginmodules/module[@name] , this shall always be
          "name/password"</para>
        </listitem>

        <listitem>
          <para>&lt;identify rank="..." &gt; : This is the rank of the user
          after login. The default is 'basic user' unless a person is
          administrator then the rank will be 'administrator'. Anonymous users
          always get the rank 'anonymous'</para>
        </listitem>

        <listitem>
          <para>&lt;identify &gt; ... &lt;/identify &gt; : The password for
          this user</para>
        </listitem>
      </itemizedlist>
    </section>

    <section id="group_tag">
      <title>&lt;group&gt; &lt;contains /&gt; &lt;/group&gt;</title>

      <para>This defines groups within the context security. The following
      structure applies:</para>

      <programlisting>
&lt;group name="%name%"&gt;
  &lt;contains type="user" named="%username%" /&gt;
  &lt;contains type="user" named="%username%" /&gt;
  &lt;contains type="group" named="%groupname%" /&gt;
  &lt;contains type="group" named="%groupname%" /&gt;
&lt;/group&gt;
      </programlisting>

      <para>The following values can be given to the elements of group:</para>

      <itemizedlist>
        <listitem>
          <para>name="..." : The name of the group.</para>
        </listitem>

        <listitem>
          <para>&lt;contains type="..." &gt; : The type of of the element
          'named' valid values are 'user' and 'group'.</para>
        </listitem>

        <listitem>
          <para>&lt;contains named="..." &gt; : The group or user that is
          member of this group. The element 'type' determines of this is a
          user or a group member. If you specify the wrong type then the
          correct entry cannot be found.</para>
        </listitem>
      </itemizedlist>
    </section>

    <section id="contexts_tag">
      <title>&lt;contexts&gt; &lt;context /&gt; &lt;/contexts&gt;</title>

      <para>The following values can be given to the elements of
      contexts.</para>

      <itemizedlist>
        <listitem>
          <para>&lt;contexts&gt; ... &lt;/contexts&gt; : This is a list of
          contexts that can be used within the context system.</para>
        </listitem>

        <listitem>
          <para>&lt;contexts default="..." &gt; : This field refers to a
          context that should be used when the owner field of an object refers
          to an context that cannot be found. So the value should be named in
          one of the &lt;contexts&gt; &lt;context name="..." &gt;
          &lt;/contexts&gt; elements.</para>

          <para>Within these &lt;contexts&gt; ... &lt;/contexts&gt; is it
          possible to create new contexts which use the following
          structure:</para>

          <programlisting>
&lt;context name="%contextname%"&gt;
  &lt;operation type="%operation%" /&gt;
  &lt;operation type="%operation%"&gt;
    &lt;grant group="%groupname%" /&gt;
    &lt;grant group="%groupname%" /&gt;
  &lt;/operation&gt;
  &lt;possible context="%contextname%" /&gt;
  &lt;possible context="%contextname%" /&gt;
&lt;/context&gt;
          </programlisting>

          <para>The following values can be given to the elements:</para>

          <itemizedlist>
            <listitem>
              <para>&lt;context name="..." &gt; : The name of the
              context.</para>
            </listitem>

            <listitem>
              <para>&lt;context&gt; &lt;operation type="..." /&gt;
              &lt;/context&gt; : The type of operation where rights are
              granted to. Valid values are 'read', 'write', 'link', 'delete'
              and 'change context'</para>
            </listitem>

            <listitem>
              <para>&lt;context&gt; &lt;operation &gt; &lt;grant group="..."
              /&gt; &lt;/operation&gt; &lt;/context&gt; : The group which
              receives the rights within this context. Off course the group
              should be found in a &lt;groups&gt; &lt;group name="..." /&gt;
              &lt;/groups&gt; element.</para>
            </listitem>

            <listitem>
              <para>&lt;context&gt; &lt;possible context="..." /&gt;
              &lt;/context&gt; context/possible[@context] : When the context
              of object van be changed, it can only be changed into the values
              specified in this element. Which should be found in an element
              called &lt;contexts&gt; &lt;context name="..." /&gt;
              &lt;/contexts&gt;.</para>
            </listitem>
          </itemizedlist>
        </listitem>
      </itemizedlist>
    </section>

    <section id="dtd">
      <title>The DTD of context.xml</title>

      <para>For completeness this is the full DTD used for context.xml:</para>

      <programlisting>
&lt;!ELEMENT contextconfig ( loginmodules, accounts, groups, contexts ) &gt;

&lt;!ELEMENT loginmodules ( module+ ) &gt;

&lt;!ELEMENT module ( property* ) &gt;
&lt;!ATTLIST module class NMTOKEN #REQUIRED &gt;
&lt;!ATTLIST module name CDATA #REQUIRED &gt;

&lt;!ELEMENT property ( #PCDATA ) &gt;
&lt;!ATTLIST property name NMTOKEN #REQUIRED &gt;

&lt;!ELEMENT accounts ( user+ ) &gt;

&lt;!ELEMENT user ( identify* ) &gt;
&lt;!ATTLIST user context NMTOKEN #REQUIRED &gt;
&lt;!ATTLIST user name NMTOKEN #REQUIRED &gt;

&lt;!ELEMENT identify ( #PCDATA ) &gt;
&lt;!ATTLIST identify rank (administrator | basic user) #REQUIRED &gt;
&lt;!ATTLIST identify type CDATA #REQUIRED &gt;

&lt;!ELEMENT groups ( group+ ) &gt;

&lt;!ELEMENT group ( contains+ ) &gt;
&lt;!ATTLIST group name NMTOKEN #REQUIRED &gt;

&lt;!ELEMENT contains EMPTY &gt;
&lt;!ATTLIST contains named NMTOKEN #REQUIRED &gt;
&lt;!ATTLIST contains type NMTOKEN #REQUIRED &gt;

&lt;!ELEMENT contexts ( context+ ) &gt;
&lt;!ATTLIST contexts default NMTOKEN #REQUIRED &gt;

&lt;!ELEMENT context ( operation*, possible* ) &gt;
&lt;!ATTLIST context name NMTOKEN #REQUIRED &gt;

&lt;!ELEMENT operation ( grant* ) &gt;
&lt;!ATTLIST operation type (read | write | link | delete | change context) #REQUIRED &gt;

&lt;!ELEMENT grant EMPTY &gt;
&lt;!ATTLIST grant group NMTOKEN #REQUIRED &gt;

&lt;!ELEMENT possible EMPTY &gt;
&lt;!ATTLIST possible context NMTOKEN #REQUIRED &gt;
      </programlisting>
    </section>
  </section>
</article>
