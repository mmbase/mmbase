<!-- ===========================================================================

MMBase Build File. See <http://jakarta.apache.org/> for more information
about the Ant build tool.

============================================================================ -->

<project name="MMBase" default="compile" basedir=".">

  <!-- =================================================================== -->
  <!-- Initialization target                                               -->
  <!-- =================================================================== -->
  <target name="init">
    <tstamp/>
    <property name="name"    value="mmbase"/>
    <property name="version" value="${DSTAMP}"/>
   
    <!-- Change this to modern for JDK1.3 or to jikes for Jikes --> 
    <property name="build.compiler" value="classic"/>
    <property name="optimize"       value="on"/>
    <property name="deprecation"    value="off"/>

    <!-- Toplevel-dir -->
    <property name="top.dir" value=".."/>

    <!-- Location of MMBase's config, needed for config-test -->
    <property name="mmbase.config" value="${top.dir}/config/default"/>
    <!-- Location of MMBase's html-files, needed for config-test -->
    <property name="mmbase.htmlroot" value="${top.dir}/html"/>
    <!-- Location of MMBase's log, needed for config-test -->
    <property name="mmbase.outputfile" value="${top.dir}/log"/>
    <!-- Location of MMBase's mode, needed for config-test -->
    <property name="mmbase.mode" value="mmbase"/>

    <!-- Classpath settings, needed for config-test -->
    <property name="servlet.classpath" value="/usr/local/lib/java/servlet.jar"/>
    <property name="jdbc.classpath" value="/usr/local/lib/java/mysql.jar"/>   
    <property name="classpath" value="
        ${top.dir}/lib/mmbase.jar:
        ${top.dir}/lib/xerces.jar:
        ${top.dir}/lib/xalan.jar:
        ${top.dir}/lib/ant.jar:
        ${servlet.classpath}:
        ${jdbc.classpath}"/>

    <!-- Source directory -->
    <property name="src.dir"     value="${top.dir}/src"/>
    <!-- Packages, needed for javadocs -->
    <property name="packages"    value="org.mmbase.*"/>

    <!-- build dirs -->
    <property name="build.dir"     value="${top.dir}/build"/>
    <property name="build.dest"     value="${build.dir}/classes"/>
    <property name="build.javadocs" value="${build.dir}/javadocs"/>

    <!-- distribution dirs -->
    <property name="dist.root" value="${top.dir}/dist"/>
    <property name="dist.version" value="${dist.root}/${name}-${version}"/>
    <property name="dist.dir" value="${dist.version}/mmbase"/>
    <property name="dist.lib" value="${dist.dir}/lib"/>
    <property name="dist.src" value="${dist.dir}/src"/>
    <property name="dist.log" value="${dist.dir}/log"/>
    <property name="dist.config" value="${dist.dir}/config"/>
    <property name="dist.docs" value="${dist.dir}/docs"/>
    <property name="dist.scripts" value="${dist.dir}/scripts"/>
    <property name="dist.html" value="${dist.dir}/html"/>

    <!-- needed packages -->
    <available property="xerces.present"
               classname="org.apache.xerces.parsers.DOMParser"/>
    <available property="servlet.present"
               classname="javax.servlet.http.HttpServlet"/>

    <!-- optional packages -->
    <available property="xalan.present"
               classname="org.apache.xalan.xslt.XSLTProcessorFactory"/>
    <available property="jai.present"
               classname="javax.media.jai.JAI"/>

    <!-- only needed for runnning MMBase with Apache Tomcat -->
    <available property="tomcat.present" 
               classname="org.apache.tomcat.startup.Tomcat" />
   
    <!-- check directory structure -->
    <available property="dir.src.present"
               file="${top.dir}/src" />
    <available property="dir.org.present"
               file="${top.dir}/src/org" />
    <available property="dir.mmbase.present"
               file="${top.dir}/src/org/mmbase" />
  </target>

  <!-- =================================================================== -->
  <!-- Help on usage                                                       -->
  <!-- =================================================================== -->
  <target name="usage">
    <echo message=""/>
    <echo message="MMBase Build file"/>
    <echo message="*************************************************************"/>
    <echo message=""/>
    <echo message=" available targets are:"/>
    <echo message=""/>
    <echo message="   jar          --> generates the mmbase.jar file"/>
    <echo message="   compile      --> compiles the source code (default)"/>
    <echo message="   javadocs     --> generates the API documentation"/>
    <echo message="   dist         --> generates the MMBase-distribution"/>
    <echo message="   config-test  --> test the MMBase configuration"/>
    <echo message="   clean        --> cleans up the directory after building"/>
    <echo message=""/>
    <echo message="*************************************************************"/>
    <echo message=""/>
  </target>


  <!-- =================================================================== -->
  <!-- Check the needed packages                                           -->
  <!-- =================================================================== -->
  <target name="check.needed.xerces" unless="xerces.present">
    <echo message=""/>
    <echo message="Error: Missing needed package Xerces."/>
    <echo message="You first need to install Xerces (http://xml.apache.org/xerces-j/)"/>
    <echo message="and add it to your classpath, before you can compile and use MMBase."/>
    <echo message=""/>
  </target>

  <target name="check.needed.servlet" unless="servlet.present">
    <echo message=""/>
    <echo message="Error: Missing needed package javax.servlet."/>
    <echo message="You first need to add javax.servlet to your classpath,"/>
    <echo message="before you can compile and use MMBase."/>
    <echo message="You'll probably find it somewhere in your servlet-engine dir."/>
    <echo message=""/>
  </target>

  <!-- =================================================================== -->
  <!-- Check the optional packages                                         -->
  <!-- =================================================================== -->
  <target name="check.optional.xalan" unless="xalan.present">
    <echo message=""/>
    <echo message="Warning: Missing optional package Xalan."/>
    <echo message="You first need to install Xalan (http://xml.apache.org/xalan/)"/>
    <echo message="and add it to your classpath, before you can use all the features of MMBase."/>
	<echo message="MMBase will compile and run without this package,"/> 
    <echo message="if you remove the xslconvert module from your modules.xml."/>
    <echo message=""/>
  </target>

  <target name="check.optional.jai" unless="jai.present">
    <echo message=""/>
    <echo message="Warning: Missing optional package javax.jai."/>
    <echo message="You can't use the java based Image-Converter without this package,"/> 
    <echo message="you've got to use ImageMagick."/>
    <echo message="JAI can be downloaded from http://www.javasoft.com/products/java-media/jai/"/>
	<echo message="MMBase will compile and run without this package."/>
    <echo message=""/>
  </target>

  <!-- =================================================================== -->
  <!-- Check packages needed by a specific servlet-engine                  -->
  <!-- =================================================================== -->
  <target name="check.needed.for.tomcat" unless="tomcat.present">
    <echo message=""/>
    <echo message="Message: Missing package Tomcat."/>
    <echo message="If you're running MMBase with Apache Tomcat, "/>
    <echo message="you'll need this package for the Jumpers."/>
    <echo message="Add the webserver.jar from tomcat/lib to your classpath "/>
    <echo message="and compile again."/>
    <echo message="MMBase will compile and run without this package."/>
    <echo message=""/>
  </target>

  <target name="check.package.all" depends="check.needed.xerces,check.needed.servlet,
                                    check.optional.xalan,check.optional.jai, 
                                    check.needed.for.tomcat">
    <!-- Dummy target, only  to make sure all the packages are checked -->
  </target> 

  <!-- =================================================================== -->
  <!-- Check the directory structure                                       -->
  <!-- =================================================================== -->
  <target name="check.dir.src" unless="dir.src.present">
    <echo message=""/>
    <echo message="Warning: Ant expects the following directory structure:"/>
    <echo message="mmbase --> src --> org --> mmbase"/>
    <echo message="Without this structure MMBase may or may not compile"/> 
    <echo message=""/>
  </target>

  <target name="check.dir.org" unless="dir.org.present">
    <echo message=""/>
    <echo message="Warning: Ant expects the following directory structure:"/>
    <echo message="mmbase --> src --> org --> mmbase"/>
    <echo message="Without this structure MMBase may or may not compile"/> 
    <echo message=""/>
  </target>

  <target name="check.dir.mmbase" unless="dir.mmbase.present">
    <echo message=""/>
    <echo message="Warning: Ant expects the following directory structure:"/>
    <echo message="mmbase --> src --> org --> mmbase"/>
    <echo message="Without this structure MMBase may or may not compile"/> 
    <echo message=""/>
  </target>

  <target name="check.dir.all" depends="check.dir.src,check.dir.org,check.dir.mmbase">
    <!-- Dummy target, only  to make sure the whole directory structure is checked -->
  </target>

  <!-- =================================================================== -->
  <!-- Prepares the build directory                                        -->
  <!-- =================================================================== -->
  <target name="prepare" depends="init,check.dir.all">
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${build.dest}"/>
  </target>

  <!-- =================================================================== -->
  <!-- Compiles the source directory                                       -->
  <!-- =================================================================== -->
  <target name="compile" depends="check.package.all,prepare"> 

    <copydir src="${src.dir}" dest="${build.dest}">
      <include name="**/scripts/**" />
      <include name="**/platform/**" />
      <include name="**/*.properties" />
      <include name="**/*.sh" />
      <include name="**/LICENSE" />
    </copydir>

    <javac srcdir="${src.dir}"
           destdir="${build.dest}"
           debug="${debug}"
           optimize="${optimize}"
           deprecation="${deprecation}">
      <exclude name="**/jumpersInterceptor.java" unless="tomcat.present" />
      <exclude name="**/ConvertJAI.java" unless="jai.present" />
      <exclude name="**/hitlisted/**" />
      <exclude name="**/scripts/**" />
      <exclude name="**/*.properties" />
      <exclude name="**/*.sh" />
      <exclude name="**/LICENSE" />
    </javac>
  </target>

  <!-- =================================================================== -->
  <!-- Creates the jar file                                                -->
  <!-- =================================================================== -->
  <target name="jar" depends="compile">
    <jar jarfile="${build.dir}/${name}.jar"
         basedir="${build.dest}"
         includes="org/**"/>
  </target>

  <!-- =================================================================== -->
  <!-- Creates the API documentation                                       -->
  <!-- =================================================================== -->
  <target name="javadocs" depends="prepare">
    <mkdir dir="${build.javadocs}"/>
    <javadoc packagenames="${packages}"
             sourcepath="${src.dir}"
             destdir="${build.javadocs}"
             author="true"
             version="true"
             use="false"
             noindex="true"
             windowtitle="MMBase API"
             doctitle="MMBase"
             bottom="MMBase 2000"
    />
  </target>

  <!-- =================================================================== -->
  <!-- Creates the distribution                                            -->
  <!-- =================================================================== -->

  <target name="dist" depends="compile,jar,javadocs">

    <mkdir dir="${dist.root}"/>
    <mkdir dir="${dist.version}"/>
    <mkdir dir="${dist.dir}"/>
    <mkdir dir="${dist.lib}"/>
    <mkdir dir="${dist.src}"/>
    <mkdir dir="${dist.log}"/>
    <mkdir dir="${dist.config}"/>
    <mkdir dir="${dist.docs}"/>
    <mkdir dir="${dist.scripts}"/>
    <mkdir dir="${dist.html}"/>

    <!-- copy the java-sources -->
    <copydir src="${src.dir}" dest="${dist.src}">
      <exclude name="**/scripts/**" />
    </copydir> 

    <!-- copy the scripts -->
    <copydir src="${top.dir}/scripts" dest="${dist.scripts}"/>

    <!-- make scripts executable -->
    <chmod perm="ugo+x" file="${dist.scripts}/compile"/>
    <chmod perm="ugo+x" file="${dist.scripts}/compile2"/>
    <chmod perm="ugo+x" file="${dist.scripts}/createjar"/>
    <chmod perm="ugo+x" file="${dist.scripts}/oriondoc"/>
    <chmod perm="ugo+x" file="${dist.scripts}/startorion"/>
    <chmod perm="ugo+x" file="${dist.scripts}/tomcat_mmbase.sh"/>
    <chmod perm="ugo+x" file="${dist.scripts}/startup_tomcat_mmbase.sh"/>
    <chmod perm="ugo+x" file="${dist.scripts}/shutdown_tomcat_mmbase.sh"/>

    <!-- copy the javadocs -->
    <copydir src="${build.javadocs}" dest="${dist.docs}/api"/>
    
    <!-- copy a readme from somewhere -->
    <copyfile src="${top.dir}/docs/readme.txt" dest="${dist.docs}/readme.txt"/>
    <!-- copy the config -->
    <copydir src="${top.dir}/config" dest="${dist.config}"/>

    <!-- copy the html -->
    <copydir src="${top.dir}/html" dest="${dist.html}"/>

    <!-- copy the libs from somewhere -->
    <copydir src="${top.dir}/lib" dest="${dist.lib}">
      <exclude name="mmbase.jar"/>
    </copydir>

    <copyfile src="${build.dir}/${name}.jar" dest="${dist.lib}/${name}.jar"/>

    <!-- zip -->
    <zip zipfile="${dist.root}/${name}-${version}.zip" basedir="${dist.version}" includes="**"/>

  </target>

  <!-- =================================================================== -->
  <!-- Test Configuration target                                           -->
  <!-- =================================================================== -->
  <target name="config-test" depends="init">
    <java classname="org.mmbase.config.Test" 
          fork="yes" 
          jvmargs="-Dmmbase.config=${mmbase.config} -Dmmbase.htmlroot=${mmbase.htmlroot} -Dmmbase.outputlog=${mmbase.outputfile} -Dmmbase.mode=${mmbase.mode}">
      <classpath>
        <pathelement path="${classpath}" />
      </classpath>
    </java>
  </target>
 
  <!-- =================================================================== -->
  <!-- Clean target                                                        -->
  <!-- =================================================================== -->
  <target name="clean" depends="init">
    <deltree dir="${build.dir}"/>
    <deltree dir="${dist.root}"/>
  </target>

</project>
