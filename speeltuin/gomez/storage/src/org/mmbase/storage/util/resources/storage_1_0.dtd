<!--
	storage.dtd - DTD for configuring the storage manager factory
-->

<!--
	The main tag. You can specify a name and version for administration purposes.  
-->
<!ELEMENT storage (storagemanagerfactory?,storagemanager?,searchqueryhandler?,attributes?,type-mappings?,disallowed-fields?)>
<!ATTLIST storage name CDATA #IMPLIED>
<!ATTLIST storage version CDATA #IMPLIED>

<!--
	The class of the storagemanagerfactory.
	You may specify a classname and version, thus enforcing this storage configuration to be loaded 
	by the proper	factory.
	If the configuration is loaded by the wrong factory, it should abort the operation.
-->
<!ELEMENT storagemanagerfactory EMPTY>
<!ATTLIST storagemanagerfactory classname CDATA #IMPLIED>
<!ATTLIST storagemanagerfactory version CDATA #IMPLIED>

<!--
	The class to use for instantiation of the storagemanager
	Factories may not use this, or have default values, but in general; you should fill in a valid classname 
	If you specify a version, the factory will abort the operation if the class instantiated if of a lower version.
-->
<!ELEMENT storagemanager EMPTY>
<!ATTLIST storagemanager classname CDATA #REQUIRED>
<!ATTLIST storagemanager version CDATA #REQUIRED>

<!--
	The class to use for instantiation of the searchqueryhandler
-->
<!ELEMENT searchqueryhandler EMPTY>
<!ATTLIST searchqueryhandler classname CDATA #REQUIRED>

<!--
	Tag that holds all attributes, options, schemes, and maps
-->
<!ELEMENT attributes (attribute*,option*,scheme*)>

<!--
	Specifies one attribute. The value is in the tag body
-->
<!ELEMENT attribute (#PCDATA)>
<!ATTLIST attribute name CDATA #REQUIRED>

<!-- 
	Specifies one option. The value is in the set attribute. 
  The default value is true
-->
<!ELEMENT option EMPTY>
<!ATTLIST option name CDATA #REQUIRED>
<!ATTLIST option value (true|false) #IMPLIED>

<!--
	Specifies one scheme. The value is in the tag body
-->
<!ELEMENT scheme (#PCDATA)>
<!ATTLIST scheme name CDATA #REQUIRED>


<!-- 
	Contains the type mappings for MMBase
	These map the MMBase types to expressions that the storage manager can use.
-->
<!ELEMENT type-mappings (type-mapping*)>

<!--
	Map a MMBase type to a en expression that the storage manager can handle (such as a database field type).
	It is similar to the database-schema type-mapping tag in orion, but it limits itself to MMBase types rather than java classnames.
	The name attribute contains the name of the MMBase type (i.e. STRING)  
	The type attribute contains an expression the NodeManager can handle (i.e. 'varchar').
	The min-size and max-size attributes allow you to assign different expressions to MMBase types of varying length.
-->
<!ELEMENT type-mapping EMPTY>
<!ATTLIST type-mapping name (INTEGER|LONG|FLOAT|DOUBLE|STRING|BYTE|XML|NODE) #REQUIRED>
<!ATTLIST type-mapping type CDATA #REQUIRED>
<!ATTLIST type-mapping min-size CDATA #IMPLIED>
<!ATTLIST type-mapping max-size CDATA #IMPLIED>

<!--
	Contains a list of disallowed fieldnames, and possible replacements for these names.
	The case-sensitive attribute determines whether the fieldnames given are case-sensitive (default false).
-->
<!ELEMENT disallowed-fields (disallowed-field*)>
<!ATTLIST disallowed-fields case-sensitive (true|false) #IMPLIED>

<!-- 
	Describe a disallowed fieldname. the name attribute contains the fieldname to disallow.
	It is similar to the database-schema disallowed-field tag in orion.
	If 'replacement' is given, a storage manager will replace the fieldname with the given value.
	Otherwise, it will abort the action when it encounters the disallowed name.
-->
<!ELEMENT disallowed-field EMPTY>
<!ATTLIST disallowed-field name CDATA #REQUIRED>
<!ATTLIST disallowed-field replacement CDATA #IMPLIED>

