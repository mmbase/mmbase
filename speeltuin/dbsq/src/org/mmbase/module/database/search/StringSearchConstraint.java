/* Generated by Together */

package org.mmbase.module.database.search;

/**
 * A constraint specifically for advanced types of  text searches.
 */
public interface StringSearchConstraint extends FieldConstraint {
    /**
     * Gets the search type, this specifies how the search is performed. Must be one of:
     * <ul>
     * <li>SEARCH_TYPE_WORD_ORIENTED
     *  - searches for the most occurrences of the words in the search term. Order and proximity of words is not significant.
     * <li>SEARCH_TYPE_PHRASE_ORIENTED
     *  - searches for occurrence of the sequence of words in the search term.
     * <li>SEARCH_TYPE_PROXIMITY_ORIENTED
     *  - searches for the most occurrences of the words within a given word distance. Order of words is not important.
     * </ul>
     */
    int getSearchType();

    /**
     * Gets value of additional parameter. Depending on searchtype and searchmode, the following parameters will be set:
     * <ul>
     * <li>PARAM_FUZZINESS  - Float, specifies maximum allowed number of typo's per word, expressed as fraction of word length. (E.g. 0,2 means: maximim 2 typo's for 10 letter words.).<br>
     * This parameter is only relevant when used with MATCH_TYPE_FUZZY.
     * <li>PARAM_PROXIMITY_LIMIT - Integer, specifies maximum distance between searched words.<br>
     * This parameter is only relevant when used with SEARCH_TYPE_PROXIMITY_ORIENTED.
     * </ul>
     */
    Object getParameter(String name);

    /**
     * Gets the match type, this specifies how individual words in the search term are matched with words in the searched text. This is one of:
     * <ul>
     * <li>SEARCH_MODE_LITERAL
     * - exact match only
     * <li>SEARCH_MODE_FUZZY
     * - fuzzy match: matches words within the specified number of typo's as well (specified by parameter PARAM_FUZZINESS)
     * <li>SEARCH_MODE_SYNONYM
     * - match synonyms as well
     * </ul>
     */
    int getMatchType();

    int SEARCH_TYPE_WORD_ORIENTED = 0;
    int SEARCH_TYPE_PHRASE_ORIENTED = 0;
    int SEARCH_TYPE_PROXIMITY_ORIENTED = 0;
    int MATCH_TYPE_LITERAL = 0;
    int MATCH_TYPE_FUZZY = 0;
    int MATCH_TYPE_SYNONYM = 0;
    int PARAM_FUZZYNESS = 0;
    int PARAM_PROXIMITY_LIMIT = 0;
}
