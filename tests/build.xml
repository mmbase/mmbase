<project name="MMBaseTest" default="run.all" basedir=".">

  <assertions>
    <enable/>
  </assertions>


  <!-- =================================================================== -->
  <!-- Init                                                                -->
  <!-- =================================================================== -->
  <!-- Read customized values if available -->
  <property file="build.properties" />


  <property name="target.dir"            location="target" />
  <property name="tests.source.dir"        location="." />
  <property name="tests.work.dir"           location="work" />
  <property name="tests.database.dir"    value="${tests.work.dir}/data" />
  <property name="version"                value="1.9-SNAPSHOT" />

  <property name="ui.class" value="junit.textui.TestRunner" />


  <target name="clean.database">
    <mkdir dir="${tests.database.dir}"/>
    <delete dir="${tests.database.dir}"/>
    <delete dir="${tests.source.dir}/config/builders/applications"/>
    <mkdir dir="${tests.source.dir}/config/builders/applications"/>
  </target>

  <target name="start.database" depends="init">
    <java classname="org.hsqldb.Server" fork="true" >
      <arg value="-database.0" />
      <arg value ="${tests.database.dir}/test" />
      <arg value="-dbname.0" />
      <arg value="test" />
      <classpath>
        <fileset dir="target/dependency">
          <include name="hsqldb*.jar" />
        </fileset>
      </classpath>
    </java>
  </target>

  <target name="stop.database" depends="init">
    <echo message="Stopping database" />
    <java
        classname="org.mmbase.tests.ShutdownHsql"
        fork="true"
        classpathref="run.classpath"
      >
    </java>
  </target>



  <target name="vpro-wizards">
    <mkdir dir="__temp"/> <!-- wtf ? -->
    <antcall target="install.module">
      <param name="dest" value="__temp" />
      <param name="name" value="vpro-wizards" />
    </antcall>
    <copy todir="lib" >
      <fileset dir="__temp/WEB-INF/lib"/>
    </copy>
    <delete dir="__temp"/>
  </target>




  <target name="init">
    <echo message="Initing. Testing mmbase with java ${java.version}" />
    <path id="run.classpath">
      <fileset dir="target">
        <include name="mmbase-tests-1.jar" />
      </fileset>
      <fileset dir="target/dependency">
        <include name="junit*.jar" />
        <include name="hsqldb*.jar" />
        <include name="log4j*.jar" />
        <include name="servlet-api*.jar" />
        <include name="commons-fileupload*.jar" />
        <include name="mmbase-resources*.jar" />
        <include name="mmbase-richtext*.jar" />
        <include name="mmbase-${version}*.jar" />
      </fileset>
    </path>
    <path id="run.classpath.vpro-wizards">
      <path refid="run.classpath" />
      <fileset dir="target/dependency">
        <include name="mmbase-vpro-wizards*.jar" />
        <include name="spring*.jar" />
        <include name="servlet-api*.jar" />
        <include name="commons-*.jar" />
        <include name="collections-generic*.jar" />
      </fileset>
    </path>
    <path id="run.classpath.rmmci">
      <path refid="run.classpath"/>
      <fileset dir="target/dependency">
        <include name="mmbase-rmmci-${version}.jar" />
      </fileset>
    </path>
    <path id="run.classpath.clustering">
      <path refid="run.classpath.rmmci"/>
      <fileset dir="target/dependency">
        <include name="mmbase-clustering-*.jar" />
      </fileset>
    </path>
    <path id="run.classpath.cloudcontext">
      <path refid="run.classpath"/>
      <fileset dir="target/dependency">
        <include name="mmbase-cloudcontext-*.jar" />
      </fileset>
    </path>
    <path id="run.rmmci.client">
      <fileset dir="target">
        <include name="mmbase-tests-1.jar" />
      </fileset>
      <fileset dir="target/dependency">
        <include name="junit*.jar" />
        <include name="log4j*.jar" />
        <include name="servlet-api*.jar" />
        <include name="commons-fileupload*.jar" />
        <include name="commons-io*.jar" />
        <include name="mmbase-${version}-tests.jar" />
        <include name="mmbase-rmmci-${version}-client.jar" />
        <include name="mmbase-richtext-${version}-classes.jar" />
      </fileset>
    </path>

    <echo  message="${run.rmmci.client}" />

  </target>


  <!-- =================================================================== -->
  <!-- Clean the JUnit test environment                                    -->
  <!-- =================================================================== -->
  <target name="clean" description="Clean the test environment">
    <delete dir="${tests.work.dir}"/>
  </target>



  <target name="run.typerel" depends="init" description="Allowed Relations tests">
    <antcall target="clean.database" inheritRefs="true" />
    <java
        classname="${ui.class}"
        fork="true"
        classpathref="run.classpath"
        >
      <arg value="org.mmbase.module.corebuilders.TypeRelTest" />
      <jvmarg value="-Dmmbase.config=${tests.source.dir}/config" />
      <jvmarg value="-Duser.dir=${tests.work.dir}" />
      <assertions><enable /></assertions>
    </java>
  </target>

  <target name="run.releasestrategy" depends="init" description="Query Result Release Strategy tests">
    <antcall target="clean.database" />
    <java
        classname="${ui.class}"
        fork="true"
        classpathref="run.classpath"
        >
      <arg value="org.mmbase.cache.AllTests" />
      <jvmarg value="-Dmmbase.config=${tests.source.dir}/config" />
      <jvmarg value="-Duser.dir=${tests.work.dir}" />
      <assertions><enable /></assertions>
    </java>
  </target>


  <target name="run.bridge" depends="init" description="Bridge tests">
    <antcall target="clean.database" />
    <property name="myclasspath" refid="run.classpath"/>
    <echo message="Starting ${ui.class}:  with ${myclasspath}" />
    <java
        classname="${ui.class}"
        fork="true"
        classpathref="run.classpath"
        >
      <arg value="org.mmbase.bridge.AllTests" />
      <jvmarg value="-Dmmbase.config=${tests.source.dir}/config" />
      <jvmarg value="-Duser.dir=${tests.work.dir}" />
      <assertions><enable /></assertions>
    </java>
  </target>

  <target name="run.bridge.rmmci" depends="init,clean.database" description="Bridge tests (through RMMCI)">
    <parallel>
      <daemons>
        <echo message="starting mmbase server" />
        <java
            classname="org.mmbase.tests.MMBaseTest"
            fork="true"
            timeout="1000000"
            classpathref="run.classpath.rmmci"
            >
          <jvmarg value="-Dmmbase.config=${tests.source.dir}/config" />
          <jvmarg value="-Drmmci.port=1221" />
          <jvmarg value="-Drmmci.bindname=remotecontext" />
          <jvmarg value="-Drmmci.RMIRegistryServer=localhost" />
          <jvmarg value="-Duser.dir=${tests.work.dir}" />
        </java>
      </daemons>
      <echo message="starting client ${run.rmmci.client}  " />
      <java
          classname="${ui.class}"
          fork="true"
          timeout="1000000"
          classpathref="run.rmmci.client"
          >
        <arg value="org.mmbase.bridge.AllTests" />
        <jvmarg value="-Dnostartmmbase=" />
        <jvmarg value="-Dmmbase.defaultcloudcontext=rmi://localhost:1221/remotecontext" />
        <assertions><enable /></assertions>
      </java>
    </parallel>
    <antcall target="stop.database" inheritRefs="true" />
  </target>


  <target name="run.convertimage" depends="init" description="Image conversion tests">
    <antcall target="clean.database" />
    <java
        classname="${ui.class}"
        fork="true"
        timeout="1000000"
        classpathref="run.classpath"
        >
      <arg value="org.mmbase.bridge.tests.ConvertImageTest" />
      <jvmarg value="-Duser.dir=${tests.work.dir}" />
      <jvmarg value="-Dmmbase.config=${tests.source.dir}/config" />
      <assertions><enable /></assertions>
    </java>
  </target>


  <target name="run.dbsq" depends="init" description="SearchQuery tests">
    <antcall target="clean.database" inheritRefs="true"/>
    <java
        classname="${ui.class}"
        fork="true"
        timeout="1000000"
        classpathref="run.classpath"
        >
      <arg value="BaseSuite" />
      <jvmarg value="-Dmmbase.config=${tests.source.dir}/config" />
      <jvmarg value="-Duser.dir=${tests.work.dir}" />
      <assertions><enable /></assertions>
    </java>
  </target>



  <target name="run.richtext" depends="init" description="Richtext tests">
    <antcall target="clean.database" />
    <echo message="Starting ${ui.class}: " />
    <java
        classname="${ui.class}"
        fork="true"
        classpathref="run.classpath"
        >
      <arg value="org.mmbase.richtext.AllTests" />
      <jvmarg value="-Dmmbase.config=${tests.source.dir}/config" />
      <jvmarg value="-Duser.dir=${tests.work.dir}" />
      <assertions><enable /></assertions>
    </java>
  </target>

  <target name="run.clustering" depends="init" description="Clustering test-cases (Starts 2 mmbases, communicates with RMMCI)">
    <antcall target="clean.database" inheritRefs="true"/>
    <parallel>
      <echo message="${tests.source.dir}/config" />
      <daemons>
        <antcall target="start.database" inheritRefs="true"/>
        <java
            classname="org.mmbase.tests.MMBaseTest"
            fork="true"
            timeout="300000"
            classpathref="run.classpath.clustering"
            >
          <jvmarg value="-Dnostartdb=" />
          <jvmarg value="-Dmmbase.config=${tests.source.dir}/config" />
          <jvmarg value="-Dmmbaseroot.machinename=mmbase1" />
          <jvmarg value="-Drmmci.port=1221" />
          <jvmarg value="-Drmmci.bindname=remotecontext" />
          <jvmarg value="-Drmmci.RMIRegistryServer=localhost" />
          <jvmarg value="-Duser.dir=${tests.work.dir}" />
          <assertions><enable /></assertions>
        </java>
        <sequential>
          <!-- this should not be necessary, but MMBase's get a bit confused if they both at same time start to make the same tables -->
          <sleep seconds="20" />
          <java
              classname="org.mmbase.tests.MMBaseTest"
              fork="true"
              timeout="300000"
              classpathref="run.classpath.clustering"
              >
            <jvmarg value="-Dnostartdb=" />
            <jvmarg value="-Dmmbase.config=${tests.source.dir}/config" />
            <jvmarg value="-Dmmbaseroot.machinename=mmbase2" />
            <jvmarg value="-Drmmci.port=1222" />
            <jvmarg value="-Drmmci.bindname=remotecontext" />
            <jvmarg value="-Drmmci.RMIRegistryServer=localhost" />
            <jvmarg value="-Duser.dir=${tests.work.dir}" />
            <assertions><enable /></assertions>
          </java>
        </sequential>
      </daemons>
      <sequential>
        <sleep seconds="40" />
        <java
            classname="${ui.class}"
            fork="true"
            classpathref="run.rmmci.client">
          <arg value="org.mmbase.tests.Clustering" />
        </java>
        <!-- how to decently shutdown the running mmbase's ?-->
        <antcall target="stop.database" inheritRefs="true"/>
      </sequential>
    </parallel>
  </target>

  <target name="run.cloudcontext" depends="init" description="Cloudcontext test-cases">
    <antcall target="clean.database" />
    <echo message="Starting ${ui.class}: " />
    <java
        classname="${ui.class}"
        fork="true"
        classpathref="run.classpath.cloudcontext"
        >
      <arg value="org.mmbase.security.implementation.cloudcontext.CloudContext" />
      <jvmarg value="-Dmmbase.config=${tests.source.dir}/config" />
      <jvmarg value="-Duser.dir=${tests.work.dir}" />
      <assertions><enable /></assertions>
    </java>
  </target>

  <target name="run.transactions" depends="init" description="Transactions test-cases">
    <antcall target="clean.database" />
    <echo message="Starting ${ui.class}: " />
    <java
        classname="${ui.class}"
        fork="true"
        classpathref="run.classpath"
        >
      <arg value="org.mmbase.module.core.AllTests" />
      <jvmarg value="-Dmmbase.config=${tests.source.dir}/config" />
      <jvmarg value="-Duser.dir=${tests.work.dir}" />
      <assertions><enable /></assertions>
    </java>
  </target>


  <target name="run.vpro.wizards" depends="init" description="VPRO MMBase wizards tests">
     <antcall target="clean.database" inheritRefs="true" />
     <java classname="${ui.class}" fork="true" classpathref="run.classpath.vpro-wizards">
       <arg value="org.mmbase.applications.vprowizards.AllTests" />
       <jvmarg value="-Dmmbase.config=${tests.source.dir}/config" />
       <jvmarg value="-Duser.dir=${tests.work.dir}" />
       <assertions>
         <enable />
       </assertions>
     </java>
   </target>


  <!-- ================================================================== -->

  <target name="standalone" depends="init" description="Start a stand-alone MMBase instantion">
    <java
        classname="org.mmbase.tests.MMBaseTest"
        fork="true"
        classpathref="run.classpath"
        >
      <jvmarg value="-Dmmbase.config=${tests.source.dir}/config" />
      <jvmarg value="-Dmmbase.machinename=remotecontext" />
      <jvmarg value="-Duser.dir=${tests.work.dir}" />
    </java>
  </target>

  <!-- =================================================================== -->
  <!-- Run the tests -->
  <!-- =================================================================== -->
  <target name="run.all" description="Run all tests">
    <echo message="========================================DBSQ========================================" />
    <antcall target="run.dbsq" inheritRefs="true"/>
    <echo message="sleeping.." />
    <sleep seconds="10" />
    <echo message="========================================TYPEREL========================================" />
    <antcall target="run.typerel" inheritRefs="true"/>
    <echo message="sleeping.." />
    <sleep seconds="10" />

    <antcall target="run.all.bridge" inheritRefs="true"/>
    <echo message="sleeping.." />
    <sleep seconds="10" />

    <echo message="========================================CLUSTERING========================================" />
    <antcall target="run.clustering" inheritRefs="true"/>
    <sleep seconds="10" />
    <echo message="========================================RELEASESTRATEGY========================================" />
    <antcall target="run.releasestrategy" inheritRefs="true"/>
    <sleep seconds="10" />
    <echo message="========================================CONVERTIMAGE========================================" />
    <antcall target="run.convertimage" inheritRefs="true"/>
    <echo message="========================================CLOUD CONTEXT SECURITY========================= ====" />
    <antcall target="run.cloudcontext" inheritRefs="true" />
  </target>

  <target name="run.all.bridge">
    <echo message="========================================BRIDGE========================================" />
    <antcall target="run.bridge" inheritRefs="true" />
    <echo message="sleeping.." />
    <sleep seconds="10" />
    <echo message="========================================RMMCI========================================" />
    <antcall target="run.bridge.rmmci" inheritRefs="true" />
  </target>

  <target name="run.all.rmmci">
    <echo message="========================================RMMCI========================================" />
    <antcall target="run.bridge.rmmci" inheritRefs="true"/>
    <echo message="========================================CLUSTERING========================================" />
    <echo message="sleeping.." />
    <sleep seconds="10" />
    <antcall target="run.clustering" inheritRefs="true"/>
  </target>

  <target name="run.database">
    <parallel>
      <echo message="${tests.source.dir}/config" />
      <daemons>
        <java
            classname="org.mmbase.tests.MMBaseTest"
            fork="true"
            classpathref="run.classpath.rmmci"
            >
          <jvmarg value="-Dmmbase.config=${tests.source.dir}/config" />
          <jvmarg value="-Drmmci.port=1221" />
          <jvmarg value="-Drmmci.bindname=remotecontext" />
          <jvmarg value="-Drmmci.RMIRegistryServer=localhost" />
          <jvmarg value="-Duser.dir=${tests.work.dir}" />
        </java>
      </daemons>
    </parallel>
    <sleep seconds="10" />
    <antcall target="stop.database" inheritRefs="true"/>
    <sleep seconds="10" />
  </target>


</project>
