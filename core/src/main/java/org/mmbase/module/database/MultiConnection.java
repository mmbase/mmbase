/*

This software is OSI Certified Open Source Software.
OSI Certified is a certification mark of the Open Source Initiative.

The license (Mozilla version 1.0) can be read at the MMBase site.
See http://www.MMBase.org/license

 */
package org.mmbase.module.database;

import java.sql.*;
import java.util.*;

/**
 * MMBase wraps java.sql.Connection. This interface is more or less that plus java.sql.Connection of
 * java 1.5. (See also MMB-1409).
 *
 */
public interface MultiConnection { // extends java.sql.Wrapper


    public void setLastSQL(String sql);
    public String getLastSQL();
    public Exception getStackTrace();

    public String getStateString();

    public void resetUsage();
    public void claim();
    public MultiPool getParent();

    public Statement createStatement() throws SQLException;
    public Statement createStatement(int resultSetType, int resultSetConcurrency) throws SQLException;
    public Statement createStatement(int type, int concurrency, int holdability) throws SQLException;
    public PreparedStatement prepareStatement(String sql);
    public PreparedStatement prepareStatement(String sql, int autoGeneratedKeys);
    public PreparedStatement prepareStatement(String sql, int[] columnIndexes);
    public PreparedStatement prepareStatement(String sql, String[] columnNames);
    public PreparedStatement prepareStatement(String sql, int type, int concurrency, int holdability);
    public CallableStatement prepareCall(String sql);
    public String nativeSQL(String query);
    public void setAutoCommit(boolean enableAutoCommit) throws SQLException;
    public boolean getAutoCommit();
    public void commit();
    public void rollback();
    public void close() throws SQLException;
    public boolean isClosed();
    public DatabaseMetaData getMetaData();
    public void setReadOnly(boolean readOnly);
    public boolean isReadOnly();
    public void setCatalog(String catalog);
    public String getCatalog();
    public void setTransactionIsolation(int level);
    public int getTransactionIsolation();
    public SQLWarning getWarnings();
    public void clearWarnings();
    public CallableStatement prepareCall(String sql, int i, int y);
    public void setTypeMap(Map<String,Class<?>> mp);
    public Map<String,Class<?>> getTypeMap();
    public PreparedStatement prepareStatement(String sql,int i, int y);
    public void setHoldability(int holdability);
    public int getHoldability();
    public Savepoint setSavepoint();
    public Savepoint setSavepoint(String name);
    public void rollback(Savepoint savepoint);
    public void releaseSavepoint(Savepoint savepoint);
    public CallableStatement prepareCall(String sql, int type, int concurrency, int holdability);
    public boolean checkAfterException() throws SQLException;
    public void realclose() throws SQLException;
    public void release();
    public int getUsage();
    public int getStartTime();
    public long getStartTimeMillis();
    public <T> T unwrap(Class<T> iface);
    public void wrap(Connection con);


}


