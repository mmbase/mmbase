===================================================================
                       MMBase 2.0 - Installation
===================================================================  
 
MMBase is distributed as a webapplication and it's packaged as a WAR 
(a .war file), for both the structure is the same. In order to install 
and get MMBase running, you must do the following:

1. Download and install a Java Development Kit (j2sdk-1.5.x or newer).

2. Download and install a Servlet Engine or an Applicationserver.
   MMBase runs on various Servlet Engines, see our release notes for tested 
   Servlet Engines. Apache Tomcat > version 5.5 is mostly used to run MMBase and
   tests are often performed with Jetty.
   Check if the Servlet Engine is up and running and if you can use its
   jsp-examples 
   On default MMBase needs web-app 2.4. If your application server does not support
   that (f.e. Tomcat 4.x or Orion). then you need to replace 'web.xml' with 
   'web-2.3.xml' and 'mmbase-taglib-2.jar' with 'mmbase-taglib.jar'.

3. Download and install ImageMagick. See note below if you're having
   problems with ImageMagick or don't want to use it.

4. Download the MMBase example-webapp WAR:
   <http://www.mmbase.org/maven2/org/mmbase/example-webapp/2.0/example-webapp-2.0.war>
   Copy the WAR into the Servlet Engine's webapps directory and rename it to something 
   shorter and easier to remember, like f.e. 'example.war'.

5. Start your servlet engine to have it unpack the WAR, most servlet engines are configured 
   to do so. It unpacks the WAR and places a context configuration file with the same name
   as the WAR in <[catalina-home]/conf/Catalina/localhost/example.xml>.
   This file contains MMBase's default configuration, it uses a HSQLDB-database.

6. Check if MMBase is running using the following url:
   <http://localhost:8080/example/version> 

7. If it is running, goto <http://localhost:8080/example/> to see an information page about
   MMBase and links to editors, admin, examples etc. The administrator username is 'admin', 
   the password is 'admin2k' (see notes below how to change this).

8. MMBase stores it configuration in several xml files in </WEB-INF/config/>. Which is virtually
   empty since all configuration files are packaged with their appropriate appllications and
   modules in JAR's in </WEB-INF/lib/>. Their default settings can be overriden in context.xml
   - in this example in <[catalina-home]/conf/Catalina/localhost/example.xml>, which is easiest.
   
   Or by unpacking the config files from their JAR's and placing them in their appropiate 
   directories in </WEB-INF/config/>. You can f.e. unpack, edit 'jdbc.xml' and place it in 
   <example/WEB-INF/config/modules> to use a different database (see release notes for tested
   databases). 
   
   Other interesting settings can be found in:
   <example/WEB-INF/config/modules/mmbaseroot.xml> (language, timezone, basename etc.), 
   <example/WEB-INF/config/security/context/config.xml> (users, groups, and contextes), and
   <example/WEB-INF/config/log/log4j.xml> (logfile configuration and so on).

9. You may want to replace the security implementation by e.g. cloud context security. 
   Remove the entire 'config/security' and place 'mmbase-cloudcontextsecurity.jar' in 
   'WEB-INF/lib' to do that.

10. For more information about installation en configuration see:
    <http://www.mmbase.org/mmdocs/administrators/install-tomcat.html>
    <http://www.mmbase.org/mmdocs/administrators/configuration.html>

11. If ImageMagick's convert isn't in your path, edit
    <example/WEB-INF/config/applications/Resources/builders/images.xml>
    (if you haven't installed the Resources application) or 
    <example/WEB-INF/config/builders/applications/builders/images.xml>
    (if you already installed the Resources applications) for the
    location of this tool.

12. If you have any kind of problem goto:
    website: <http://www.mmbase.org/>
    irc: <irc://irc.slashnet.org/#mmbase> (#mmbase at slashnet)
    Or send an e-mail to our Users of Developers mailing list.


===================================================================
                    Additional Installation Notes
===================================================================  

MMBASE SECURITY
----------------------------------------------------------------------------------
Check out the <example/WEB-INF/config/security> dir, to
customize the security settings. You _SHOULD CHANGE THE ADMIN
PASSWORD_, and also the other passwords, if your setup is more then
just a try-out.

If you are not going to use MMBase security, you should not leave
jsp-editors and admin pages unprotected (by e.g. tomcat or apache
security). Remove them altogether if unsure (the /mmbase/edit/ and
/mmbase/admin directories).

The same goes for editwizards if you are going to install those.

The shipped mmexamples directory is DANGEROUS and you should NOT leave
it in a production site. It contains for the sake of _examples_
various editors and e.g. a generic jsp to show the source code of
other jsp's. Generally, for a production site, it is best to remove
all jsp's which are shipped with this distro, besides the ones you are
planning to actually use. 


WEB-APPLICATION POLICY ISSUES
----------------------------------------------------------------------------------
Some application servers, such as the Sun Java System Application Server, put restrictions on 
what web-applications can do. 
To run MMBase in such web-application servers, you need to give the
application a number of permissions, including the use of
Classloaders for the MMBase web-applications, or they won't run.
In the Sun Java System Application Server you configure this in the
server.policy configuration file. Add:

// permissions needed for MMBase
grant {
	// org.mmbase.util.ResourceLoader is a ClassLoader
        permission java.lang.RuntimePermission  "createClassLoader";
	// org.mmbase.util.ResourceLoader specified stream handlers
        permission java.net.NetPermission       "specifyStreamHandler";

	// org.mmbase.security.MMBaseCop is a SecurityManager
        permission java.lang.RuntimePermission  "createSecurityManager";


	// for RMMCI
        permission java.util.PropertyPermission "java.rmi.server.hostname", "write";

	// for documentation rendering in the admin pages:
        permission java.io.FilePermission "${catalina.base}${file.separator}work${file.separator}-", "read,write,delete";
        permission java.net.SocketPermission "scm.mmbase.org:80", "connect";
        permission java.net.SocketPermission "*.oasis-open.org:80", "connect";

};

You may want to limit this permission to specific applications.
Consult your server documentation and the java documentation for the various
Permission classes for more information.


IMAGE MAGICK:
-----------------------------------------------------------------------------------
Imagemagick does work with Windows 98/ME, but MMBase is not able to
use it. You have to use Jai (Java Advanced Imaging API). You can do
this by changing the properties in
<example/WEB-INF/config/builders/applications/images.xml> (if
you've already installed the Resources application) or 
<example/WEB-INF/config/applications/Resources/builders/images.xml>
(if you haven't installed the Resources applications) into:

<properties> 
  <property name="ImageConvertClass">org.mmbase.module.builders.ConvertJAI</property> 
  <property name="MaxConcurrentRequests">20</property> 
</properties>

Please keep in mind that the image builder is less powerfull when
using JAI instead of Imagemagick.

When using ImageMagick in JVM with substantial amount of the total memory of a UNIX system, you may
want to use the 'command server' to avoid errors because of the 'fork' required by a Runtime.exec.
