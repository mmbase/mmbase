<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<article
><articleinfo
><date
>2003-01-30</date
><title
>Context Security Configuration</title
><authorgroup
><author
><firstname
>Eduard</firstname
><surname
>Witteveen</surname
></author
><author
><firstname
>Sjoerd</firstname
><surname
>de Heer</surname
></author
><author
><firstname
>Henk</firstname
><surname
>Hangyi</surname
></author
></authorgroup
><revhistory
><revision
><revnumber
>0.1</revnumber
><date
>??</date
><revremark
>Eduard Witteveen</revremark
></revision
><revision
><revnumber
>0.2</revnumber
><date
>October 25th 2002</date
><revremark
>Sjoerd de Heer, s.a.deheer@student.utwente.nl</revremark
></revision
><revision
><revnumber
>0.3</revnumber
><date
>January 30th, 2003</date
><revremark
>Henk Hangyi, hangyi@xs4all.nl</revremark
></revision
></revhistory
></articleinfo
><section
id="introduction"
><title
>Introduction</title
><section
id="requirements"
><title
>Security framework within MMBase</title
><para
>Within MMBase is a security framework, in which different security implementations can be used. In this way it is possible to adapt MMBase to the needs of the environment in which it runs. Currently there are a few different implementations ready. The context security and the cloud security are the most advanced schemes available.</para
></section
><section
id="context_security"
><title
>A security implementation with contexts</title
><para
>The NOS ( a Dutch broadcasting company) choose an implementation with contexts. A context exists of a set of rights which describe what you can do within this context with an object of MMBase. For example you define read access to a the context which is used by anonymous visitors of your site and you can define a context with edit rights for registered users of your site. The main parts of the security framework are:</para
><itemizedlist
><listitem
><para
>Single users (users)</para
></listitem
><listitem
><para
>Groups (users)</para
></listitem
><listitem
><para
>Contexts</para
></listitem
></itemizedlist
></section
><section
id="users"
><title
>Users</title
><para
>The users of MMBase can have different levels anonymous or registered users. The anonymous users are the normal page viewers. There rights are being served through the anonymous module of MMBase. Registered users are being served through the user/password module, this are the users that can alter data within MMBase.</para
><para
>For registered users there is also an extra level called rank. The default ranks are &#39;Basic user&#39; and &#39;Administrator&#39;. These ranks can denote extra rights within MMBase. The anonymous users can only have the rank &#39;Anonymous&#39;.</para
></section
><section
id="groups"
><title
>Groups</title
><para
>A Group can exist of users and/ or groups. In this way you can define a structure which inherits rights from lower levels. For example the office-sweeper group may read the newspaper. The office-clerk group is member of the office-sweeper group but may also use the toilet. So a member of the office-clerk may read the newspaper and go to the toilet, even at the same time. While a office-sweeper can only read the paper and work fast to get home in time to use the bathroom. As you probably noticed a stupid example which might help to understand the framework.</para
><para
>A user van be member of more than one group within MMBase.</para
></section
><section
id="contexts"
><title
>Contexts</title
><para
>Each object within MMBase has a context. Which context is associated with an object can be seen in the owner field of that object. The name found there is the name first used as context before fallback on the default context. In the context is defined which rights are granted to a user or group. The following rights are available.</para
><itemizedlist
><listitem
><para
>read, read the content of an object.</para
></listitem
><listitem
><para
>write, write content to an object.</para
></listitem
><listitem
><para
>link, making a relation between two objects.</para
></listitem
><listitem
><para
>delete, remove an object.</para
></listitem
><listitem
><para
>create, create a new object of the type typedef. The so called editors.</para
></listitem
><listitem
><para
>change, changing of context.</para
></listitem
></itemizedlist
><para
>Of each context is also know to which context it may change. An admin may change to a user but a user may not change to an admin.</para
></section
></section
><section
id="configuration"
><title
>How to configure the security-framework</title
><tip
><para
>When you alter one of the xml files related to the security implementation the whole security implementation shall be reloaded within a minute. If there are errors within the configuration file a message shall be given and the old configuration will be kept active.</para
></tip
><section
id="general"
><title
>General</title
><para
>The security framework makes it possible to use different implementations for security within MMBase. The implementation that will be used depends on the configuration file which can be found in your configuration directory and then in the sub-dir called security. The file security.xml is the file you are looking for. The file security.xml should look like this (All comment lines have been left out)</para
><programlisting
>&#60;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34; ?&#62;&#60;!DOCTYPE security PUBLIC &#34;//MMBase - security//&#34; &#34;http://www.mmbase.org/dtd/security.dtd&#34;&#62;&#60;security active=&#34;true&#34;&#62;&#60;authentication class=&#34;org.mmbase.security.implementation.context.ContextAuthentication&#34; url=&#34;context/config.xml&#34; /&#62;&#60;authorization class=&#34;org.mmbase.security.implementation.context.ContextAuthorization&#34; url=&#34;context/config.xml&#34; /&#62;&#60;sharedsecret&#62;appelmoes&#60;/sharedsecret&#62;&#60;/security&#62;</programlisting
><para
>Within this document you can alter the following items:</para
><itemizedlist
><listitem
><para
>/security[@active] : Valid values are &#39;true&#39; and &#39;false&#39;. If the value is set to true then the selected security shall be loaded. If the value is &#39;false&#39; then there will be no security implementation loaded, but the document will also not be checked for changes so no reloads will occur. [to do: what means the last part of the sentence]</para
></listitem
><listitem
><para
>/security/authentication[@class] : This denotes which implementation will be loaded as security. Setting this parameter to org.mmbase.security.NoAuthentication will disable authentication.</para
></listitem
><listitem
><para
>/security/authentication[@url] : In this element you can give parameter for the security implementation like a configuration file for that security type.</para
></listitem
><listitem
><para
>/security/authorization[@class] : The implementation that will check if the requested operation is valid for this user in MMBase. Setting this parameter to org.mmbase.security.NoAuthorization will disable authorization.</para
></listitem
><listitem
><para
>/security/authorization[@url] : Same as with authentication, you can give additional parameters here. Like the location of a configuration file.</para
></listitem
><listitem
><para
>/security/sharedsecret : It is possible to run more than one MMBase on the same data source if that is true then they will use this password to communicate.</para
></listitem
></itemizedlist
><para
>The security.xml shown above thus states that:</para
><itemizedlist
><listitem
><para
>&#60;security active=&#34;true&#34;&#62;: the selected security systems shall be loaded</para
></listitem
><listitem
><para
>&#60;authentication class=&#34;org.mmbase.security.implementation.context.ContextAuthentication&#34; url=&#34;context/config.xml&#34; /&#62;: Context security is used to implementate the login procedure. The file config.xml defines the rights for users, groups and ranks.</para
></listitem
><listitem
><para
>&#60;authorization class=&#34;org.mmbase.security.implementation.context.ContextAuthorization&#34; url=&#34;context/config.xml&#34; /&#62;: Context security is used to for checking which operations a user is allowed to carry out inside MMBase. The file config.xml defines the rights for users, groups and ranks.</para
></listitem
><listitem
><para
>&#60;sharedsecret&#62;appelmoes&#60;/sharedsecret&#62;: When there are more MMBase installations running on this data source, they can communicate with each other if they also have &#34;appelmoes &#34; as their shared secret.</para
></listitem
></itemizedlist
></section
></section
><section
id="xml"
><title
>Intermezzo: some background information on XML</title
><para
>XML stands for &#34;EXtensible Markup Language&#34;</para
><itemizedlist
><listitem
><para
>XML is a mark-up language</para
></listitem
><listitem
><para
>XML describes data</para
></listitem
><listitem
><para
>XML uses a DTD(Document Type Definition) for describing the data-structure within the document.</para
></listitem
><listitem
><para
>XML is developed with a DTD, so it should be self explaining.</para
></listitem
><listitem
><para
>XML Layout [todo: what is meant with this]</para
></listitem
></itemizedlist
><section
id="simple_xml"
><title
>A very simple XML could be the following</title
><para
>Within MMBase is a security framework, in which different security implementations can be used. In this way it is possible to adapt MMBase to the needs of the environment in which it runs. Currently there are a few different implementations ready. The context security and the cloud security are the most advanced schemes available.</para
><programlisting
>&#60;?xml version=&#34;1.0&#34; encoding=&#34;utf-8&#34;?&#62; &#60;!DOCTYPE root SYSTEM &#34;definition.dtd&#34;&#62; &#60;root&#62; &#60;/root&#62;</programlisting
><para
>This XML uses &#34;utf-8&#34; as encoding and uses definition.dtd to validate the XML file for correctness.</para
></section
><section
id="dtd_layout"
><title
>DTD Layout</title
><para
>The simple XML document which is shown above, could be described by a DTD like:</para
><programlisting
>&#60;!ELEMENT root #PCDATA)&#62;</programlisting
><para
>The element allows only the use of &#60;root&#62; tags in the document. The PCDATA indicates that text may be entered within the &#60;root&#62; tag. [todo: There should be more text here but it seems to be missing. The DTD needs some more work. ]</para
></section
><section
id="xpath"
><title
>XPath</title
><para
>With the use of XPath is it possible to denote a certain location in a xml file. The location can be enclosed in an element or a field of an element. For XPath / counts as the root of the document. To separate elements you should use a &#39;/&#39; between those elements. In the case that you point to a field inside an element you should use &#39;element[@fieldname]&#39;</para
></section
><section
id="context_dtd"
><title
>Framework DTD for security XML</title
><para
>This is the DTD om which the previous XML is based:</para
><programlisting
>&#60;!ATTLIST security active (true|false) #REQUIRED &#62; &#60;!ELEMENT security ( authentication, authorization, sharedsecret ) &#62; &#60;!ELEMENT authentication EMPTY &#62; &#60;!ATTLIST authentication class NMTOKEN #REQUIRED &#62; &#60;!ATTLIST authentication url CDATA #REQUIRED &#62; &#60;!ELEMENT authorization EMPTY &#62; &#60;!ATTLIST authorization class NMTOKEN #REQUIRED &#62; &#60;!ATTLIST authorization url CDATA #REQUIRED &#62; &#60;!ELEMENT sharedsecret ( #PCDATA ) &#62;</programlisting
></section
><section
id="more_info"
><title
>More information</title
><para
>XML is a W3C standard, a beginners course can be found at: http://www.w3schools.com/xml/</para
><para
>An explanation of XPath can be found at the following point: http://www.zvon.org/xxl/XPathTutorial/General/examples.html</para
></section
></section
><section
id="explanation"
><title
>Central notions in the context security model</title
><section
><title
>Contexts, Groups and Users </title
><section
><title
>Reference field [to do: what does this mean?]</title
><para
>Within MMBase has each object a field called &#39;owner&#39;. The value of this field is used by the security system to select the rights of a user on this object. If the name of this context [todo: it is not clear where this contect refers to] does not exist a warning will be issued in the logs and the default context will be selected.</para
></section
><section
><title
>Contexts</title
><para
>A context defines which rights a group has on a object. Also is defined within this context to which contexts you can change to assume there rights.</para
></section
><section
><title
>Groups</title
><para
>A group is a collection of users and groups. In this way you can represent your organisation in the security system. If used properly in combination with contexts for each group.</para
></section
><section
><title
>Users</title
><para
>Anonymous users: These users get there rights from the module called anonymous. They are considered the normal page viewers. There rank will always be &#39;ANONYMOUS&#39;.</para
><para
>Logged in users: These users are validated through the user/password module of the context security. They are the users which can change your data in MMBase. The rank of these users is normally &#39;Basic users&#39; but can also be &#39;Administrator&#39; which is a rank that grants more rights within MMBase.</para
></section
><section
><title
>Overview picture of the security model</title
><screenshot
><graphic
fileref="media/contextSecurity.png"
></graphic
></screenshot
><para
>[todo: the element rank in the user box  is missing in this picture]</para
></section
></section
><section
><title
>Operations on objects</title
><section
><title
>Read, Write and Delete</title
><para
>To be able to read or write or delete an object in MMBase a user needs the right &#39;read&#39; or &#39;write&#39; or &#39;delete&#39; for this object.</para
></section
><section
><title
>Making a reference to.</title
><para
>The right &#39;link&#39; give a user the possibility to create relations between objects in MMBase. The user needs create rights on the relation builder for this to work!</para
></section
><section
><title
>Create</title
><para
>The right &#39;create&#39; is only used for builders. It gives the specified user the right to create objects in this selected builder.</para
></section
><section
><title
>Change</title
><para
>The right &#39;change context&#39; gives a users the right to alter the rights defined in the selected context.</para
></section
></section
><section
><title
>Rights</title
><section
><title
>Create a new object</title
><para
>To be able to create an object the user needs &#39;create&#39; rights on the node that represents the node-type within MMBase, see the typedef table.</para
></section
><section
><title
>Creating a new relation</title
><para
>To create a new relation your users needs &#39;create&#39; rights on the insrel table and &#39;link&#39; rights between the objects where he or she wants to create a relation in-between.</para
></section
><section
><title
>Altering an object</title
><para
>To be able to change an object the user needs the &#39;change&#39; right for that object.</para
></section
><section
><title
>Changing rights in contexts</title
><para
>When you want a user to be able to change the rights of a context then that user needs &#39;change context&#39; rights for that selected context.</para
></section
><section
><title
>Deleting objects</title
><para
>To remove an object the user needs &#39;delete&#39; rights.</para
></section
></section
></section
><section
><title
>An extended example</title
><para
>The following XML will be used to provide some explanation on the context security configuration</para
><programlisting
>&#60;?xml version=&#34;1.0&#34; encoding=&#34;utf-8&#34;?&#62; &#60;!DOCTYPE contextconfig PUBLIC &#34;//MMBase - contextconfig//&#34; &#34;http://www.mmbase.org/dtd/securitycontextconfig.dtd&#34;&#62; &#60;contextconfig&#62; &#60;loginmodules&#62; &#60;module name=&#34;anonymous&#34; class=&#34;org.mmbase.security.implementation.context.AnonymousLogin&#34; /&#62; &#60;module name=&#34;name/password&#34; class=&#34;org.mmbase.security.implementation.context.PasswordLogin&#34; /&#62; &#60;/loginmodules&#62; &#60;accounts&#62; &#60;user name=&#34;anonymous&#34; context=&#34;default&#34; /&#62; &#60;user name=&#34;admin&#34; context=&#34;admin&#34;&#62; &#60;identify type=&#34;name/password&#34; rank=&#34;administrator&#34;&#62;admin2k&#60;/identify&#62; &#60;/user&#62; &#60;user name=&#34;foo&#34; context=&#34;default&#34; &#62; &#60;identify type=&#34;name/password&#34; rank=&#34;basic user&#34;&#62;bar&#60;/identify&#62; &#60;/user&#62; &#60;/accounts&#62; &#60;groups&#62; &#60;group name=&#34;everyone&#34;&#62; &#60;contains type=&#34;group&#34; named=&#34;users&#34; /&#62; &#60;contains type=&#34;user&#34; named=&#34;anonymous&#34; /&#62; &#60;/group&#62; &#60;group name=&#34;users&#34;&#62; &#60;contains type=&#34;user&#34; named=&#34;foo&#34; /&#62; &#60;contains type=&#34;group&#34; named=&#34;administrators&#34; /&#62; &#60;/group&#62; &#60;group name=&#34;administrators&#34;&#62; &#60;contains type=&#34;user&#34; named=&#34;admin&#34; /&#62; &#60;/group&#62; &#60;/groups&#62; &#60;contexts default=&#34;default&#34;&#62; &#60;context name=&#34;default&#34;&#62; &#60;operation type=&#34;create&#34;&#62; &#60;grant group=&#34;users&#34; /&#62; &#60;/operation&#62; &#60;operation type=&#34;read&#34;&#62; &#60;grant group=&#34;everyone&#34; /&#62; &#60;/operation&#62; &#60;operation type=&#34;write&#34;&#62; &#60;grant group=&#34;users&#34; /&#62; &#60;/operation&#62; &#60;operation type=&#34;link&#34;&#62; &#60;grant group=&#34;users&#34; /&#62; &#60;/operation&#62; &#60;operation type=&#34;delete&#34;&#62; &#60;grant group=&#34;users&#34; /&#62; &#60;/operation&#62; &#60;operation type=&#34;change context&#34;&#62; &#60;grant group=&#34;administrators&#34; /&#62; &#60;/operation&#62; &#60;possible context=&#34;default&#34; /&#62; &#60;/context&#62; &#60;/contexts&#62; &#60;/contextconfig&#62;</programlisting
><section
><title
>&#60;loginmodules /&#62;</title
><para
>This is the module that takes care of the login process within MMBase. There are no changes needed to this field so it will not be described any further.</para
></section
><section
><title
>&#60;accounts /&#62;</title
><para
>This are the accounts of the users which are know to the system. It is advised to also create a user called anonymous since it does not exists any ware else.</para
></section
><section
><title
>&#60;user &#62; &#60;identify /&#62; &#60;/user&#62;</title
><para
>The following values can be given to the elements.</para
><itemizedlist
><listitem
><para
>user[@name] : The name of the user</para
></listitem
><listitem
><para
>user[@context] : The context that object get when created through this user</para
></listitem
><listitem
><para
>user/identify[type] : The login type refers to /contextconfig/loginmodules/module[@name] , this shall always be &#34;name/password&#34;</para
></listitem
><listitem
><para
>user/identify[rank] : This is the rank of the user after login. The default is &#39;basis user&#39; unless a person is administrator then the rank will be &#39;administrator&#39;. Anonymous users always get the rank &#39;anonymous&#39;</para
></listitem
><listitem
><para
>user/identify : The password for this user</para
></listitem
></itemizedlist
></section
><section
><title
>&#60;group &#62; &#60;contains /&#62; &#60;/group&#62;</title
><para
>This defines groups within the context security. The following structure applies:</para
><programlisting
>&#60;group name=&#34;%name%&#34;&#62; &#60;contains type=&#34;user&#34; named=&#34;%username%&#34; /&#62; &#60;contains type=&#34;user&#34; named=&#34;%username%&#34; /&#62; &#60;contains type=&#34;group&#34; named=&#34;%groupname%&#34; /&#62; &#60;contains type=&#34;group&#34; named=&#34;%groupname%&#34; /&#62;&#60;/group&#62;</programlisting
><para
>The following values can be given to the elements:</para
><itemizedlist
><listitem
><para
>group[@name] : The name of the group.</para
></listitem
><listitem
><para
>group/contains[@type] : The type of of the element &#39;named&#39; valid values are &#39;user&#39; and &#39;group&#39;.</para
></listitem
><listitem
><para
>group/contains[@named] : The group or user that is member of this group. The element &#39;type&#39; determines of this is a user or a group member. If you specify the wrong type then the correct entry cannot be found.</para
></listitem
><listitem
><para
>/contextconfig/contexts : This is a list of context that can be used within the context system.</para
></listitem
><listitem
><para
>/contextconfig/contexts[@default] : This field refers to a context that should be used when the owner field of an object refers to an context that cannot be found. So the value should be named in one of the /contextconfig/contexts/context[@name] elements.</para
><para
>Within these /contextconfig/contexts is it possible to create new contexts which use the following structure:</para
><programlisting
>&#60;context name=&#34;%contextname%&#34;&#62;&#60;operation type=&#34;%operation%&#34; /&#62;&#60;operation type=&#34;%operation%&#34;&#62;&#60;grant group=&#34;%groupname%&#34; /&#62;&#60;grant group=&#34;%groupname%&#34; /&#62;&#60;/operation&#62;&#60;possible context=&#34;%contextname%&#34; /&#62;&#60;possible context=&#34;%contextname%&#34; /&#62;&#60;/context&#62;</programlisting
><para
>The following values can be given to the elements:</para
><itemizedlist
><listitem
><para
>context[@name] : The name of the context.</para
></listitem
><listitem
><para
>context/operation[@type] : The type of operation where rights are granted to. Valid values are &#39;read&#39;, &#39;write&#39;, &#39;link&#39;, &#39;delete&#39; and &#39;change context&#39;</para
></listitem
><listitem
><para
>context/operation/grant[@group] : The group which receives the rights within this context. Off course the group should be found in a /contextconfig/groups/group[@name=&#39;%groupname%&#39;] element.</para
></listitem
><listitem
><para
>context/possible[@context] : When the context of object van be changed, it can only be changed into the values specified in this element. Which should be found in an element called /contextconfig/contexts/context[@name=%contextname%].</para
></listitem
></itemizedlist
></listitem
></itemizedlist
></section
><section
><title
>The DTD of context.xml</title
><para
>For completeness this is the full DTD used for context.xml:</para
><programlisting
>&#60;!ELEMENT contextconfig ( loginmodules, accounts, groups, contexts ) &#62; &#60;!ELEMENT loginmodules ( module+ ) &#62; &#60;!ELEMENT module ( property* ) &#62; &#60;!ATTLIST module class NMTOKEN #REQUIRED &#62; &#60;!ATTLIST module name CDATA #REQUIRED &#62; &#60;!ELEMENT property ( #PCDATA ) &#62; &#60;!ATTLIST property name NMTOKEN #REQUIRED &#62; &#60;!ELEMENT accounts ( user+ ) &#62; &#60;!ELEMENT user ( identify* ) &#62; &#60;!ATTLIST user context NMTOKEN #REQUIRED &#62; &#60;!ATTLIST user name NMTOKEN #REQUIRED &#62; &#60;!ELEMENT identify ( #PCDATA ) &#62; &#60;!ATTLIST identify rank (administrator | basic user) #REQUIRED &#62; &#60;!ATTLIST identify type CDATA #REQUIRED &#62; &#60;!ELEMENT groups ( group+ ) &#62; &#60;!ELEMENT group ( contains+ ) &#62; &#60;!ATTLIST group name NMTOKEN #REQUIRED &#62; &#60;!ELEMENT contains EMPTY &#62; &#60;!ATTLIST contains named NMTOKEN #REQUIRED &#62; &#60;!ATTLIST contains type NMTOKEN #REQUIRED &#62; &#60;!ELEMENT contexts ( context+ ) &#62; &#60;!ATTLIST contexts default NMTOKEN #REQUIRED &#62; &#60;!ELEMENT context ( operation*, possible* ) &#62; &#60;!ATTLIST context name NMTOKEN #REQUIRED &#62; &#60;!ELEMENT operation ( grant* ) &#62; &#60;!ATTLIST operation type (read | write | link | delete | change context) #REQUIRED &#62; &#60;!ELEMENT grant EMPTY &#62; &#60;!ATTLIST grant group NMTOKEN #REQUIRED &#62; &#60;!ELEMENT possible EMPTY &#62; &#60;!ATTLIST possible context NMTOKEN #REQUIRED &#62;</programlisting
></section
></section
></article
>
