<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
"http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<article>
  <title>MMBase Glossary</title>

  <articleinfo>
    <copyright>
      <year>This document is created under the Mozilla Public License</year>
    </copyright>

    <authorgroup>
      <author>
        <firstname>Henk</firstname>

        <surname>Hangyi</surname>
      </author>

      <author>
        <firstname>Michiel</firstname>

        <surname>Meeuwissen</surname>
      </author>
    </authorgroup>

    <revhistory>
      <revision>
        <revnumber>0.0</revnumber>

        <date>June 2003</date>

        <revremark>First draft</revremark>
      </revision>
    </revhistory>

    <abstract>
      <para>This glossary tries to provide an overview of the terms used in
      MMBase and their meaning. As MMBase has evolved during the last years,
      its language evolved with it. This means that sometimes one term refers
      to two concepts, whereas in other occasions two terms are synonyms for
      one and the same thing. Therefore this document tries to describe the
      meaning of the terms used in MMBase in the different contexts. Next to
      this, the glossary tries to provide a list preferred terms.</para>
    </abstract>
  </articleinfo>

  <section>
    <title>Introduction</title>

    <para>Below you see how a term is explained in this glossary. First an
    example of the term MMBase is given.</para>

    <glosslist>
      <glossentry>
        <glossterm>Multi Media Base</glossterm>

        <abbrev>MMBase</abbrev>

        <glossdef><orderedlist><listitem><para>for managers: open source
        content management system, with strong multi-media features </para></listitem><listitem><para>for
        dummies: a tool by which you can build intelligent web sites </para></listitem><listitem><para>for
        techies: java based web-application, which acts as an object oriented
        interface to relational databases </para></listitem><listitem><para>for
        information analysts: content management system by which text, images
        and other content can be managed in an object oriented way </para></listitem></orderedlist><remark>
        It is not clear whether MMBase really stands for Multi Media Base.
        <emphasis>The preferred term is MMBase</emphasis></remark></glossdef>

        <glossseealso>open source</glossseealso>

        <glossseealso>content management</glossseealso>
      </glossentry>
    </glosslist>

    <para>The different elements in the definition of a term are described
    below.</para>

    <glosslist>
      <glossentry>
        <glossterm>headword and inflected forms, like plurals</glossterm>

        <acronym>acronym of the term</acronym>

        <abbrev>abbreviation of the term</abbrev>

        <glossdef><orderedlist><listitem><para>first definition with
        information about who uses the term or expression, and in what
        situation</para></listitem><listitem><para>second definition with
        information about who uses the term or expression, and in what
        situation</para></listitem></orderedlist><example><title>title of
        example</title><para>an example of use of the term</para></example><remark>A
        remark or background story about the term.<emphasis>Preferred use or
        whether the term is deprecated.</emphasis></remark></glossdef>

        <glossseealso>cross-reference</glossseealso>
      </glossentry>
    </glosslist>
  </section>

  <section>
    <title>MMBase Glossary</title>

    <glosslist>
      <glossentry id="builder">
        <glossterm>builder</glossterm>

        <glossdef>
          <orderedlist>
            <listitem>
              <para>The xml configuration file which defines an object type in
              the MMBase object cloud.</para>
            </listitem>

            <listitem>
              <para>The xml configuration file used by MMBase to create a
              table in the database.</para>
            </listitem>
          </orderedlist>

          <example>
            <title>Example of a builder with only one field, named title.</title>

            <para><programlisting>
&#60;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&#62;
&#60;!DOCTYPE builder PUBLIC &#34;-//MMBase//DTD builder config 1.1//EN&#34; &#34;http://www.mmbase.org/dtd/builder_1_1.dtd&#34;&#62;
&#60;builder extends=&#34;object&#34; maintainer=&#34;mmbase.org&#34; name=&#34;news&#34; version=&#34;0&#34;&#62;
  &#60;searchage&#62;14&#60;/searchage&#62;
  &#60;names&#62;
    &#60;singular xml:lang=&#34;en&#34;&#62;NewsItem&#60;/singular&#62;
    &#60;singular xml:lang=&#34;nl&#34;&#62;NieuwsItem&#60;/singular&#62;
    &#60;plural xml:lang=&#34;en&#34;&#62;NewsItems&#60;/plural&#62;
    &#60;plural xml:lang=&#34;nl&#34;&#62;NieuwsItems&#60;/plural&#62;
  &#60;/names&#62;

  &#60;descriptions&#62;
    &#60;description xml:lang=&#34;en&#34;&#62;News item&#60;/description&#62;
    &#60;description xml:lang=&#34;nl&#34;&#62;Nieuws item&#60;/description&#62;
  &#60;/descriptions&#62;

  &#60;fieldlist&#62;
    &#60;field&#62;
      &#60;descriptions&#62;
        &#60;description xml:lang=&#34;en&#34;&#62;Title of the news item&#60;/description&#62;
        &#60;description xml:lang=&#34;nl&#34;&#62;Titel (hoofd kop) van het nieuwsitem&#60;/description&#62;
      &#60;/descriptions&#62;
      &#60;gui&#62;
        &#60;guiname xml:lang=&#34;en&#34;&#62;Title&#60;/guiname&#62;
        &#60;guiname xml:lang=&#34;nl&#34;&#62;Titel&#60;/guiname&#62;
      &#60;/gui&#62;
      &#60;editor&#62;
        &#60;positions&#62;
          &#60;list&#62;1&#60;/list&#62;
        &#60;/positions&#62;
      &#60;/editor&#62;
      &#60;db&#62;
        &#60;name&#62;title&#60;/name&#62;
        &#60;type key=&#34;false&#34; notnull=&#34;true&#34; size=&#34;255&#34; state=&#34;persistent&#34;&#62;STRING&#60;/type&#62;
      &#60;/db&#62;
    &#60;/field&#62;
  &#60;/fieldlist&#62;
&#60;/builder&#62;

</programlisting></para>
          </example>

          <remark>The term builder is used when one speaks about the object
          cloud and its representation in the database.</remark>

          <glossseealso otherterm="nodemanager"></glossseealso>

          <glossseealso otherterm="object type"></glossseealso>
        </glossdef>
      </glossentry>

      <glossentry id="nodemanager">
        <glossterm>node manager</glossterm>

        <glossdef>
          <orderedlist>
            <listitem>
              <para>This bridge concept represents the object which describes
              meta information (which fields are available and so on) about
              node types, and serves to create new nodes and so on.</para>
            </listitem>

            <listitem>
              <para>A synonym for &#39;builder&#39;.</para>
            </listitem>

            <listitem>
              <para>...</para>
            </listitem>
          </orderedlist>

          <example>
            <title>Example of use in spoken language</title>

            <para>The nodemanager of an image makes it possible to scale
            images dynamically.</para>
          </example>

          <remark>The term nodemanager is used in when one speaks about the
          functionality of the bridge.</remark>

          <glossseealso otherterm="builder"></glossseealso>

          <glossseealso otherterm="object type"></glossseealso>

          <glossseealso otherterm="bridge"></glossseealso>
        </glossdef>
      </glossentry>

      <glossentry id="object type">
        <glossterm>object type</glossterm>

        <glossdef>
          <orderedlist>
            <listitem>
              <para>An object type defines an object in the object cloud</para>
            </listitem>

            <listitem>
              <para>...</para>
            </listitem>
          </orderedlist>

          <example>
            <title>In spoken language</title>

            <para>The object type of the employee object only contains fields
            which describe the employee, but are not related to its position
            in departments and projects.</para>
          </example>

          <remark>The term is used when one speaks about information analysis.</remark>

          <glossseealso otherterm="builder"></glossseealso>

          <glossseealso otherterm="nodemanager"></glossseealso>
        </glossdef>
      </glossentry>

      <glossentry id="role">
        <glossterm>role</glossterm>

        <glossdef>
          <para>The name of an reldef object.</para>

          <glossseealso otherterm="reldef"></glossseealso>
        </glossdef>
      </glossentry>

      <glossentry id="reldef">
        <glossterm>reldef</glossterm>

        <glossdef>
          <para>The builder defining relation roles.</para>

          <glossseealso otherterm="role"></glossseealso>
        </glossdef>
      </glossentry>

      <glossentry id="insrel">
        <glossterm>insrel</glossterm>

        <glossdef>
          <para>A relation instance. This is special kind of object type which
          contains relation objects.</para>

          <glossseealso otherterm="builder"></glossseealso>

          <glossseealso otherterm="object type"></glossseealso>
        </glossdef>
      </glossentry>

      <glossentry id="typerel">
        <glossterm>typerel</glossterm>

        <glossdef>
          <para>Typerel is the MMBase builder which defines the allowed
          relations. If for example you want to create a certain relation from
          news node to an URL node, then a corresponding typerel record, which
          allows that must exist.</para>

          <para>Inheritance is taken into consideration, so if you allow from
          object to object (with a certain role), then every kind of relation
          (with that certain role) should be allowed (because all node types
          extends object).</para>

          <glossseealso otherterm="inheritance"></glossseealso>

          <glossseealso otherterm="relation"></glossseealso>
        </glossdef>
      </glossentry>

      <glossentry id="relation">
        <glossterm>relation</glossterm>

        <glossdef>
          <orderedlist>
            <listitem>
              <para>An MMBase Node defining a link between to other MMBase
              Nodes. A relation can contain other data. A relation instance.</para>
            </listitem>

            <listitem>
              <para>An allowed relation. Sometimes also &#39;typerel&#39;
              entries are referred to as simply &#39;relations&#39;. It would
              perhaps be clearer to call these &#39;allowed relations&#39;</para>
            </listitem>

            <listitem>
              <para>A relation definition or reldef instance.</para>
            </listitem>
          </orderedlist>

          <glossseealso otherterm="insrel"></glossseealso>

          <glossseealso otherterm="reldef"></glossseealso>

          <glossseealso otherterm="typerel"></glossseealso>
        </glossdef>
      </glossentry>

      <glossentry id="typedef">
        <glossterm>typedef</glossterm>

        <glossdef>
          <para>In MMBase object types are objects too. These nodes are stored
          in the &#39;typedef&#39; builder. It generates a small chicken/egg
          problem because the typedef type itself is also present a a node of
          itself. (Normally the typedef node will have to have number 1)</para>
        </glossdef>
      </glossentry>

      <glossentry id="object">
        <glossterm>object</glossterm>

        <glossdef>
          <orderedlist>
            <listitem>
              <para>The base builder, from which every other builder extends.</para>
            </listitem>

            <listitem>
              <para>More general term for &#39;node&#39;.</para>
            </listitem>

            <listitem>
              <para>An instance of a Java class.</para>
            </listitem>
          </orderedlist>

          <glossseealso otherterm="node"></glossseealso>

          <glossseealso otherterm="builder"></glossseealso>

          <glossseealso otherterm="inheritance"></glossseealso>
        </glossdef>
      </glossentry>

      <glossentry id="inheritance">
        <glossterm>inheritance</glossterm>

        <glossdef>
          <para>MMBase supports inheritance. This means that every
          &#39;news&#39; node is also an &#39;object&#39; node. You can also
          extend your &#39;mynews&#39; builder from the &#39;news&#39;
          builder. All fields from news are then inherited to mynews, and
          mynews nodes can be treated as (because they are) news nodes.</para>

          <glossseealso otherterm="builder"></glossseealso>
        </glossdef>
      </glossentry>

      <glossentry id="node">
        <glossterm>node</glossterm>

        <glossdef>
          <para>MMBase objects are generally referred to as &#39;node&#39;,
          especially in the bridge. A normal MMBase node corresponds to one
          record in the database (in the table(s) associated with the
          builder). We recognize also &#39;cluster nodes&#39; and &#39;virtual
          nodes&#39;.</para>

          <para>Every Node is uniquely (inside the MMBase instance) identified
          by a node number. In editors this number field is sometimes even be
          indicated with &#39;Object&#39;.</para>

          <glossseealso otherterm="clusternode"></glossseealso>

          <glossseealso otherterm="virtualnode"></glossseealso>

          <glossseealso otherterm="bridge"></glossseealso>

          <glossseealso otherterm="object"></glossseealso>
        </glossdef>
      </glossentry>

      <glossentry id="clusternode">
        <glossterm>cluster node</glossterm>

        <glossdef>
          <para>Complicated database queries do not give back simple nodes,
          but fields from several tables. A record from such a table join is
          represented by a &#39;cluster node&#39;. A cluster node is a special
          kind of virtual node.</para>

          <glossseealso otherterm="virtualnode"></glossseealso>
        </glossdef>
      </glossentry>

      <glossentry id="virtualnode">
        <glossterm>virtual node</glossterm>

        <glossdef>
          <para>A node to which no builder xml is associated.</para>

          <glossseealso otherterm="clusternode"></glossseealso>
        </glossdef>
      </glossentry>

      <glossentry id="cloud">
        <glossterm>cloud</glossterm>

        <glossdef>
          <orderedlist>
            <listitem>
              <para>A bunch of interrelated nodes viewed as a unity.</para>
            </listitem>

            <listitem>
              <para>All nodes from one MMBase instance.</para>
            </listitem>

            <listitem>
              <para>All nodes inside an MMBase transaction.</para>
            </listitem>
          </orderedlist>

          <glossseealso otherterm="node"></glossseealso>
        </glossdef>
      </glossentry>

      <glossentry>
        <glossterm>object cloud</glossterm>

        <glosssee otherterm="cloud"></glosssee>
      </glossentry>

      <glossentry id="plusone">
        <glossterm>+1</glossterm>

        <glossdef>
          <orderedlist>
            <listitem>
              <para>A geeky synonym for &#39;I agree&#39;.</para>
            </listitem>

            <listitem>
              <para>One of the elections in a vote</para>
            </listitem>
          </orderedlist>

          <glossseealso otherterm="vote"></glossseealso>
        </glossdef>
      </glossentry>

      <glossentry id="vote">
        <glossterm>vote</glossterm>

        <glossdef>
          <para>Major decisions on MMBase implementation are done by voting by
          committer on the developers list.</para>

          <glossseealso otherterm="plusone"></glossseealso>

          <glossseealso otherterm="committer"></glossseealso>
        </glossdef>
      </glossentry>

      <glossentry id="committer">
        <glossterm>committer</glossterm>

        <glossdef>
          <para>An MMBase developer with CVS committing access.</para>

          <glossseealso otherterm="vote"></glossseealso>

          <glossseealso otherterm="cvs"></glossseealso>
        </glossdef>
      </glossentry>

      <glossentry id="cvs">
        <glossterm>Concurrent Versions System</glossterm>

        <acronym>CVS</acronym>

        <glossdef>
          <para>Open Source version system, which is used to administrate
          MMBase source codes. Typical for CVS is that it is possible to use
          it without acquiring locks on files (which is the way it is used for
          MMBase). This means that files can be edited simultaneously by
          different people, but also that the risk for &#39;conflicts&#39;
          arises (if a patch cannot be made automatically).</para>

          <para>The MMBase CVS repository is hosted on the mmbase.org server.</para>

          <glossseealso otherterm="vote"></glossseealso>

          <glossseealso otherterm="module"></glossseealso>
        </glossdef>
      </glossentry>

      <glossentry id="mmbase">
        <glossterm>MMBase</glossterm>

        <glossdef>
          <para>Very object oriented open source content management system
          based (a.o) on java servlet technology.</para>

          <glossseealso>Everywhere else</glossseealso>
        </glossdef>
      </glossentry>

      <glossentry id="bridge">
        <glossterm>bridge</glossterm>

        <glossdef>
          <para>The bridge is the set of Java interfaces which are to be used
          to talk to MMBase. In contradiction to the core of MMBase all
          actions are authorized by the security system. Templating language
          should communicate through the bridge, and for example the MMBase
          Taglib is doing this.</para>

          <para>There is currently one &#39;basic&#39; implementation of the
          bridge, and also one alternative implementation which makes it
          possible to talk to a &#39;remote&#39; MMBase by remote method
          invocations.</para>

          <glossseealso otherterm="rmmci"></glossseealso>

          <glossseealso otherterm="mmci"></glossseealso>

          <glossseealso otherterm="core"></glossseealso>
        </glossdef>
      </glossentry>

      <glossentry id="core">
        <glossterm>core</glossterm>

        <glossdef>
          <orderedlist>
            <listitem>
              <para>The java classes of MMBase which are &#39;under&#39; the
              bridge, and should be invisible for casual users. They provide
              the data persistence and other basic MMBase concepts like
              relations. The MMBase core is not protected by MMBase security.</para>
            </listitem>

            <listitem>
              <para>All java classes from the &#39;src&#39; CVS module which
              are present in mmbase.jar, so everything which is not an MMBase
              application, is MMBase &#39;core&#39;.</para>
            </listitem>

            <listitem>
              <para>MMObjectBuilder/MMObjectNode vs NodeManager/Node. When you
              want to define a new &#39;object type&#39; with extra
              functionality then it is currently not possible to extend
              NodeManagers or Nodes, but you need to extend the core&#39;s
              MMObjectBuilder.</para>
            </listitem>
          </orderedlist>

          <glossseealso otherterm="bridge"></glossseealso>
        </glossdef>
      </glossentry>

      <glossentry id="mmci">
        <glossterm>MMBase Cloud Interfaces</glossterm>

        <acronym>MMCI</acronym>

        <glosssee otherterm="bridge"></glosssee>
      </glossentry>

      <glossentry id="rmmci">
        <glossterm>Remote MMBase Cloud Interfaces</glossterm>

        <acronym>RMMCI</acronym>

        <glossdef>
          <para>An alternative implementation of the bridge. Can be used to
          implement life/staging MMBase&#39;s, but can also be useful to
          inspect/test a running MMBase.</para>

          <glossseealso otherterm="bridge"></glossseealso>

          <glossseealso otherterm="wiab"></glossseealso>
        </glossdef>
      </glossentry>

      <glossentry id="wiab">
        <glossterm>Web in a Box</glossterm>

        <acronym>WIAB</acronym>

        <glossdef>
          <para>A packaged content management system based on MMBase. Typical
          for WIAB is a fixed object model and a distinction between life and
          staging environments in two seperate object clouds. It was developed
          for the Amsterdam municipal by Framfab but is maintained by Finalist
          now.</para>

          <glossseealso otherterm="rmmci"></glossseealso>
        </glossdef>
      </glossentry>

      <glossentry id="mmc">
        <glossterm>MMBase Management Committee</glossterm>

        <acronym>MMC</acronym>

        <glossdef>
          <para>MMBase committers who are supposed to meet every Thursday to
          talk about MMBase.</para>
        </glossdef>
      </glossentry>

      <glossentry id="foundation">
        <glossterm>MMBase Foundation</glossterm>

        <glossdef>
          <para>The MMBase foundation covers the non-technical issues with
          regard to MMBase. The tasks of the foundation include organizing the
          MMBase Event, facilitating communication between MMBase users,
          providing management information about MMBase in presentations and
          brochures, etc. etc.</para>
        </glossdef>
      </glossentry>

      <glossentry id="tcp">
        <glossterm>temporary cloud project</glossterm>

        <acronym>TCP</acronym>

        <glossdef>
          <para>An XML way to add content to an MMBase cloud. It is hardly
          used anymore.</para>

          <glossseealso otherterm="xmlimporter"></glossseealso>

          <glossseealso otherterm="scan"></glossseealso>
        </glossdef>
      </glossentry>

      <glossentry id="scan">
        <glossterm>SCAN</glossterm>

        <glossdef>
          <para>The original MMBase template language. An interpreted language
          characterized by several parse stages of the source. Commands,
          parameters and variables are recognized by $-symbols. SCAN HTML
          pages use to be mapped to &#39;.shtml&#39;.</para>

          <para>Use of SCAN is nowadays discouraged in favor of more modern
          and standardized scripting manner like JSP and (MMBase) taglib.</para>

          <para>Because the long history of SCAN, SCAN-specific legacy code
          can still be found on a lot of places in the MMBase core code. Even
          the bridge way to handle with &#39;MMBase modules&#39; is influenced
          by SCAN.</para>

          <glossseealso otherterm="mmbasetaglib"></glossseealso>

          <glossseealso otherterm="core"></glossseealso>
        </glossdef>
      </glossentry>

      <glossentry id="xmlimporter">
        <glossterm>XML importer</glossterm>

        <glossdef>
          <para>A way to synchronize data from another source with MMBase
          data. This happens in a fuzzy way, to avoid duplications because of
          minor inconsistencies in the source data.</para>
        </glossdef>
      </glossentry>

      <glossentry id="context">
        <glossterm>context</glossterm>

        <glossdef>
          <orderedlist>
            <listitem>
              <para>In several MMBase security implementations the concept
              &#39;security context&#39; is stored in the owner field, to
              attribute rights to objects.</para>
            </listitem>

            <listitem>
              <para>A &#39;User Context&#39; is the MMBase security object
              which provides the essential identity information for a user: an
              identifier, an &#39;owner&#39; abstraction (sometimes also
              called &#39;context&#39;) and a rank. It is provided by the
              <emphasis>authentication</emphasis> implementation and is used
              by the <emphasis>authorization</emphasis> implementation.</para>
            </listitem>

            <listitem>
              <para>A &#39;Cloud Context&#39; is the bridge object which
              provides clouds, modules, and empty lists.</para>
            </listitem>

            <listitem>
              <para>In MMBase taglib a &#39;context&#39; is a container for
              Taglib variables. It is also associated with every page, the
              &#39;context&#39; tag, and (in MMBase &#62;= 1.7) list tags.</para>
            </listitem>

            <listitem>
              <para>In a J2EE environment the web-application is associated
              with a &#39;context&#39;, which is basically the first part of
              the path. Often it will be &#39;/&#39;, but this is not required
              for MMBase.</para>
            </listitem>
          </orderedlist>
        </glossdef>
      </glossentry>

      <glossentry id="module">
        <glossterm>module</glossterm>

        <glossdef>
          <orderedlist>
            <listitem>
              <para>An piece of (MMBase) functionality which is configured by
              a XML file in &#60;config&#62;/modules/. MMBase itself can be
              seen as a group of such modules.</para>
            </listitem>

            <listitem>
              <para>When talking about CVS, a &#39;module&#39; is a kind of
              main entry of the repository. The MMBase CVS repository
              currently has the following modules: src (core java classes),
              documentation (docbook sources), html (general content for the
              mmbase distro), config (example configuration) and applications
              (components supported by the community).</para>
            </listitem>

            <listitem>
              <para>An independent piece of software which forms part of one
              or more larger programs. Different languages have different
              concepts of a module but there are several common ideas.</para>

              <para>Modules are usually compiled separately (in compiled
              languages) and provide an abstraction or information hiding
              mechanism so that a module&#39;s implementation can be changed
              without requiring any change to other modules. In this respect
              they are similar to objects in an object-oriented language,
              though a module may contain many procedures and/or functions
              which would correspond to many objects.</para>

              <remark>Definition copied from The Free On-line Dictionary of
              Computing (09 FEB 02) [foldoc]</remark>
            </listitem>
          </orderedlist>

          <glossseealso otherterm="cvs"></glossseealso>
        </glossdef>
      </glossentry>

      <glossentry id="unidir">
        <glossterm>unidirectional</glossterm>

        <glossdef>
          <para>A value for the &#39;dir&#39; attribute of reldef and insrel
          nodes. It only says something about the visibility of the relation.
          A unidirectional relation is not visible from the destination node.</para>

          <glossseealso otherterm="bidir"></glossseealso>

          <glossseealso otherterm="reldef"></glossseealso>

          <glossseealso otherterm="insrel"></glossseealso>
        </glossdef>
      </glossentry>

      <glossentry id="bidir">
        <glossterm>bidirectional</glossterm>

        <glossdef>
          <para>A value for the &#39;dir&#39; attribute of reldef and insrel
          nodes. It only says something about the visibility of the relation.
          Every MMBase relation is bidirectional in the sense that it has a
          clearly defined source and destination.</para>

          <glossseealso otherterm="unidir"></glossseealso>

          <glossseealso otherterm="reldef"></glossseealso>

          <glossseealso otherterm="insrel"></glossseealso>
        </glossdef>
      </glossentry>

      <glossentry id="taglib">
        <glossterm>tag library</glossterm>

        <abbrev>taglib</abbrev>

        <glossdef>
          <para>A Tag Library is a SUN defined way to define extra XML-like
          tags. A tag library is implemented in Java and currently only
          available in mixture with JSP-pages.</para>

          <glossseealso otherterm="mmbasetaglib"></glossseealso>
        </glossdef>
      </glossentry>

      <glossentry id="mmbasetaglib">
        <glossterm>MMBase tag library</glossterm>

        <abbrev>MMBase taglib</abbrev>

        <glossdef>
          <para>A taglib implementation for MMBase. Tags to access MMBase
          data, but also more general tags. It consists more or less a
          complete (however simple) language. The taglib can be used in
          combination with pieces of Java in your JSP pages.</para>

          <glossseealso otherterm="taglib"></glossseealso>
        </glossdef>
      </glossentry>
    </glosslist>
  </section>
</article>