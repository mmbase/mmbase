<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE builder PUBLIC "-//MMBase/DTD builder config 1.1//EN" "http://www.mmbase.org/dtd/builder_1_1.dtd">
<builder maintainer="mmbase.org" version="0" >

  <!-- <status>
  what is the status of this builder options : active or inactive
  -->
  <status>active</status>

  <!-- <classfile>
  This is a optional tag, it names the classfile that allows you to add
  support routines or changes them on a per builder base. For example
  images has routines to image support etc etc.

  possible values : Dummy or disabled tag makes mmbase use the default setup

  short name : Urls will start class : org.mmbase.module.builders.Urls.class

  long name : nl.vpro.mmbase.module.builders.Urls will start that class
  -->
  <classfile>Dummy</classfile>

  <searchage>1000</searchage>

  <!-- <names>
  names defines the different names used in user visible parts, singular for
  for talking about 1 object (Url,Person) and plurar for talking about multiple
  <Urls, people).
  >-->
  <names>
    <singular xml:lang="en">Object</singular>
    <singular xml:lang="nl">Object</singular>
    <singular xml:lang="eo">Objekto</singular>
    <singular xml:lang="fr">Objet</singular>
    <singular xml:lang="fy">Objekt</singular>
    <!-- multiple per language as defined by ISO 639 -->
    <plural xml:lang="en">Objects</plural>
    <plural xml:lang="nl">Objecten</plural>
    <plural xml:lang="eo">Objektoj</plural>
    <plural xml:lang="fr">Objets</plural>
    <plural xml:lang="fy">Objekts</plural>
  </names>

  <!-- <descriptions>
  small description of the builder for human reading
  -->
  <descriptions>
    <!-- descriptions per language as defined by ISO 639  -->
    <description xml:lang="en">Objects</description>
    <description xml:lang="nl">Objekten</description>
    <description xml:lang="eo">Objektoj</description>
    <description xml:lang="fr">Objets</description>
    <description xml:lang="fy">Objekten</description>
  </descriptions>

  <!-- <properties>
  you can define properties to be used by the classfile (if used) it uses
  a key/value system. Its a optional tag.
  -->
  <properties>
  </properties>

  <!-- <fieldlist>
  defines the different fields in this object, be carefull the order is important
  once defined keep them in the same order.
  If you use number and owner (the 2 default fields, please check the docs for this)
  -->
  <fieldlist>
    <!-- POS 1 : <field> 'number' is a default field (see docs) -->
    <field>
      <!-- gui related -->
      <gui>
        <guiname xml:lang="en">Object</guiname>
        <guiname xml:lang="nl">Object</guiname>
        <guiname xml:lang="eo">Objekto</guiname>
        <guiname xml:lang="fr">Objet</guiname>
        <guiname xml:lang="fy">Objekt Nummer</guiname>
        <guitype>integer</guitype>
      </gui>
      <!-- editor related  -->
      <editor>
        <positions>
          <!-- position in the input area of the editor -->
          <input>-1</input>
          <!-- position in list area of the editor -->
          <list>10</list>
          <!-- position in search area of the editor -->
          <search>10</search>
        </positions>
      </editor>
      <!-- database related  -->
      <db>
        <!-- name of the field in the database -->
        <name>number</name>
        <!-- MMBase datatype and demands on it -->
        <type state="persistent" notnull="true" key="true">NODE</type>
      </db>
    </field>

    <!-- POS 2 : <field> 'owner' is a default field (see docs) -->
    <field>
      <!-- gui related -->
      <gui>
        <guiname xml:lang="en">Owner</guiname>
        <guiname xml:lang="nl">Eigenaar</guiname>
        <guiname xml:lang="eo">Posedanto</guiname>
        <guiname xml:lang="fr">Propri√©taire</guiname>
        <guiname xml:lang="fy">Context</guiname>
    <guitype>string</guitype>
      </gui>
      <!-- editor related  -->
      <editor>
        <positions>
          <!-- position in the input area of the editor -->
          <input>-1</input>
          <!-- position in list area of the editor -->
          <list>11</list>
          <!-- position in search area of the editor -->
          <search>11</search>
        </positions>
      </editor>
      <!-- database related  -->
      <db>
        <!-- name of the field in the database -->
        <name>owner</name>
        <!-- MMBase datatype and demands on it -->
        <type state="persistent" size="12" notnull="false" key="false">STRING</type>
      </db>
    </field>

  </fieldlist>

</builder>
