<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE database PUBLIC "-//MMBase/DTD database config 1.1//EN" "http://www.mmbase.org/dtd/database_1_1.dtd">
<database>
  <!-- <name>
        The Name of the Database we are running, only used for display
    -->
  <name>MySQL</name>
  <!-- <mmbasedriver>
        Defines the database driver that handles the abstraction between
        mmbase and the given jdbs/database we are using.
    -->
  <mmbasedriver>org.mmbase.storage.database.RelationalDatabaseStorage</mmbasedriver>
  <!-- <scheme>
        Defines the strings for the different scheme database
        statements.
				These schemes use parameters {0}, {1}, etc... to indicate names and values that
				need be integrated in these schemes. this allwos you to place optimization code specific to 
				a database in a scheme without breaking the statements.
    -->
	<scheme>
	  <!-- create scheme
				 Defines a statement for creating a non-extended table.
				 Parameters:
		     {0} the name of the table to create.
				 {1} the list of field definitions (seperated by commas)
		-->
  	<create>CREATE TABLE {0} ({1})</create>
	  <!-- not-null scheme
				 Defines the code for creating a non-nullable field
				 Parameters:
		     {0} the name of the field to create.
				 {1} the field type definitions (i.e. varchar(30))
				 NOTE: if you ommit this scheme all fields are nullable
		-->
    <not-null>{0} {1} NOT NULL</not-null>
	  <!-- primary-key scheme
				 Defines the code for creating a field that is a primary key
		     {0} the name of the field to create.
				 {1} the field type definitions (i.e. int(11))
				 NOTE: if you ommit this scheme no primary keys are created
		-->
    <primary-key>{0} {1} NOT NULL, PRIMARY KEY ({0})</primary-key>
	  <!-- foreign-key scheme
				 Defines the code for creating a field that is a secondary (or foreign) key
		    	         {0} the name of the field to create.
				 {1} the field type definitions (i.e. int(11))
				 NOTE: if you ommit this scheme no foreign keys are created
		-->
    <foreign-key>{0} {1} NOT NULL, INDEX ({0})</foreign-key>
	  <!-- key scheme
				 Defines the code for creating a field that is also a unique secondary key
				 Parameters:
		     {0} the name of the field to create.
				 {1} the field type definitions (i.e. int(11))
				 NOTE: if you ommit this scheme no secondary keys are created
		-->
    <key>{0} {1} NOT NULL, UNIQUE ({0})</key>
  </scheme>
  <!-- <mapping>
        defines how mmbase should map the different types mmbase to this
        database.

        mmbase-type, the internal mmbase datatypes allways in caps
        min-size, minimal size this value is valid for
        max-size, maximum size this value is valid for
    -->
  <mapping>
    <type-mapping mmbase-type="DOUBLE">double</type-mapping>
    <type-mapping mmbase-type="LONG">bigint</type-mapping>
    <type-mapping mmbase-type="FLOAT">float</type-mapping>
    <type-mapping mmbase-type="INTEGER">integer</type-mapping>
    <type-mapping mmbase-type="NODE">integer</type-mapping>
    <type-mapping mmbase-type="STRING" min-size="1" max-size="255">varchar(size)</type-mapping>
    <type-mapping mmbase-type="STRING" min-size="256" max-size="65535">blob</type-mapping>
    <type-mapping mmbase-type="STRING" min-size="65536" max-size="16777216">mediumblob</type-mapping>
    <type-mapping mmbase-type="XML" min-size="1" max-size="255">varchar(size)</type-mapping>
    <type-mapping mmbase-type="XML" min-size="256" max-size="65535">blob</type-mapping>
    <type-mapping mmbase-type="XML" min-size="65536" max-size="16777216">mediumblob</type-mapping>
    <type-mapping mmbase-type="BYTE" min-size="1" max-size="65535">blob</type-mapping>
    <type-mapping mmbase-type="BYTE" min-size="65536" max-size="16777216">mediumblob</type-mapping>
  </mapping>
  <!-- <disallowed>
        defines disallowed fields, tables etc etc for this database
        if possible it also explains to mmbase what todo with it.
        illegal fieldnames for example will be automapped to a
        replacement if one is defined. This way apps made for mmbase
        don't need to be changes when running on a different database.
    -->
  <disallowed>
    <field name="parent" replacement="m_parent"/>
    <field name="type" replacement="m_type"/>
    <field name="data" replacement="m_data"/>
    <field name="key" replacement="m_key"/>
    <field name="keys" replacement="m_keys"/>
    <field name="from" replacement="m_from"/>
    <field name="global" replacement="m_global"/>
    <field name="use" replacement="m_use"/>
    <field name="time" replacement="m_time"/>
    <field name="status" replacement="m_status"/>
    <field name="month" replacement="m_month"/>
    <field name="day" replacement="m_day"/>
    <field name="hour" replacement="m_hour"/>
    <field name="comment" replacement="m_comment"/>
    <field name="hosts" replacement="m_hosts"/>
    <field name="to" replacement="m_to"/>
    <field name="second" replacement="m_second"/>
    <field name="local" replacement="m_local"/>
    <field name="group" replacement="m_group"/>
    <field name="fields" replacement="m_fields"/>
    <field name="int" replacement="m_int"/>
    <field name="create" replacement="m_create"/>
    <field name="read" replacement="m_read"/>
    <field name="write" replacement="m_write"/>
    <field name="column" replacement="m_column"/>
    <field name="order" replacement="m_order"/>
  </disallowed>
</database>

