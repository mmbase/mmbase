<?xml version="1.0"?>
<!DOCTYPE application PUBLIC "-//MMBase/DTD application config 1.1//EN" "http://www.mmbase.org/dtd/application_1_1.dtd">
<application name="contentrepository" maintainer="finalist.com" version="3" auto-deploy="true">
   <requirements>
      <requires name="Security" maintainer="mmbase://security.mmbase.org/" version="1" type="application"/>
      <requires name="Resources" maintainer="mmbase.org" version="1" type="application"/>
      <requires name="utilities" maintainer="finalist.com" version="1" type="application"/>
      <requires name="cmscsecurity" maintainer="finalist.com" version="1" type="application"/>
      <requires name="cmscrichtext" maintainer="finalist.com" version="1" type="application"/>
   </requirements>
   <neededbuilderlist>
      <!-- These are the application specific relation builders -->
      <builder maintainer="finalist.com" version="1">collectionrel</builder>
      <builder maintainer="finalist.com" version="1">contentrel</builder>
      <builder maintainer="finalist.com" version="1">creationrel</builder>
      <builder maintainer="finalist.com" version="1">deletionrel</builder>
      <builder maintainer="finalist.com" version="1">ownerrel</builder>

      <builder maintainer="finalist.com" version="1">imagerel</builder>

      <builder maintainer="finalist.com" version="1">collectionchannel</builder>      
      <builder maintainer="finalist.com" version="1">contentchannel</builder>
      <builder maintainer="finalist.com" version="1">contentelement</builder>
    </neededbuilderlist>
    <neededreldeflist>
        <reldef source="childrel" target="childrel" direction="bidirectional" guisourcename="childrel" guitargetname="childrel" builder="childrel" />
        <reldef source="contentrel" target="contentrel" direction="bidirectional" guisourcename="contentrel" guitargetname="contentrel" builder="contentrel" />
        <reldef source="collectionrel" target="collectionrel" direction="bidirectional" guisourcename="collectionrel" guitargetname="collectionrel" builder="collectionrel" />
        <reldef source="creationrel" target="creationrel" direction="bidirectional" guisourcename="creationrel" guitargetname="creationrel" builder="creationrel" />
        <reldef source="deletionrel" target="deletionrel" direction="bidirectional" guisourcename="deletionrel" guitargetname="deletionrel" builder="deletionrel" />
        <reldef source="ownerrel" target="ownerrel" direction="bidirectional" guisourcename="ownerrel" guitargetname="ownerrel" builder="ownerrel" />
        <reldef source="imagerel" target="imagerel" direction="bidirectional" guisourcename="imagerel" guitargetname="imagerel" builder="imagerel" />
   </neededreldeflist>
   <allowedrelationlist>
      <relation from="contentchannel" to="contentchannel" type="childrel" />
      <relation from="contentchannel" to="collectionchannel" type="childrel" />
      <relation from="collectionchannel" to="contentchannel" type="collectionrel" />
      <relation from="contentchannel" to="contentelement" type="contentrel" />
      <relation from="contentelement" to="contentchannel" type="creationrel" />
      <relation from="contentelement" to="contentchannel" type="deletionrel" />
      <relation from="contentelement" to="user" type="ownerrel" />
      <relation from="mmbasegroups" to="contentchannel" type="rolerel" />

      <relation from="contentelement" to="contentelement" type="posrel" />
      <relation from="contentelement" to="attachments" type="posrel" />
      <relation from="contentelement" to="images" type="imagerel" />
      <relation from="contentelement" to="urls" type="posrel" />

		<!--  inline links -->
      <relation from="contentelement" to="contentelement" type="inlinerel" />
      <relation from="contentelement" to="attachments" type="inlinerel" />
      <relation from="contentelement" to="urls" type="inlinerel" />
      <relation from="contentelement" to="images" type="imageinlinerel" />
   </allowedrelationlist>

   <datasourcelist>
   <!-- A testdata/back up skelet is generated. If the testdata is not available, it will still work. -->
      <!--<datasource builder="collectionchannel" path="contentrepository/collectionchannel.xml" />-->
      <!--<datasource builder="contentchannel" path="contentrepository/contentchannel.xml" />-->
      <datasource builder="cronjobs" path="contentrepository/cronjobs.xml" />

      <!--<datasource builder="editwizards" path="contentrepository/editwizards.xml" />-->
      <!--<datasource builder="properties" path="contentrepository/properties.xml" />-->
   </datasourcelist>

   <relationsourcelist>
   <!-- A testdata/backup skelet is generated for relation data. If the testdata is not available, it will still work. -->
<!--  
      <relationsource builder="insrel" path="contentrepository/insrel.xml"/>
      <relationsource builder="posrel" path="contentrepository/posrel.xml"/>
      <relationsource builder="childrel" path="contentrepository/childrel.xml"/>
      <relationsource builder="collectionrel" path="contentrepository/collectionrel.xml"/>
      <relationsource builder="contentrel" path="contentrepository/contentrel.xml"/>
      <relationsource builder="rolerel" path="contentrepository/rolerel.xml"/>
-->
   </relationsourcelist>

   <contextsourcelist>
      <contextsource goal="backup" type="depth" path="contentrepository/backup.xml"/>
   </contextsourcelist>

   <description><![CDATA[Installs the application. Included are all the builders.]]></description>
   <install-notice><![CDATA[You have installed the application.]]></install-notice>
</application>