<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC
    "-//SPRING//DTD BEAN//EN"
    "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>
	<!--interceptor beans config-->
	<!--
		This bean is a post-processor that will automatically apply relevant advisors
		to any bean in child factories.
	-->
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />

	<!--
		AOP advisor that will provide declarative transaction management based on
		attributes. It's possible to add arbitrary custom Advisor implementations
		as well, and they will also be evaluated and applied automatically.
	-->
	<bean
		class="org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor">
		<property name="transactionInterceptor" ref="transactionInterceptor" />
	</bean>

	<!--
		Transaction interceptor to use for auto-proxy creation.
		Transaction attributes will be read in from JDK 1.5+ annotations.
	-->
	<bean id="transactionInterceptor"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="transactionManager" />
		<property name="transactionAttributeSource">
			<bean
				class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource" />
		</property>
	</bean>

    <!--database and transaction-->
    <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
       <property name="jndiName" value="java:comp/env/jdbc/jaasdb"/>
    </bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"
		lazy-init="default" autowire="default" dependency-check="default">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
			</props>
		</property>
		<property name="annotatedClasses">
			<list>
				<value>com.finalist.cmsc.services.community.data.User</value>
				<value>com.finalist.cmsc.services.community.data.NewsPref</value>
			</list>
		</property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager" 
		lazy-init="default" autowire="default" dependency-check="default">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
   
	<bean name="userDAO" 
		class="com.finalist.cmsc.services.community.dao.UserDAOImpl" 
		lazy-init="default" autowire="default" dependency-check="default">
		<property name="sessionFactory" ref="sessionFactory" />	
   </bean>
   
   <bean name="newsPrefDAO" 
		class="com.finalist.cmsc.services.community.dao.NewsPrefDAOImpl" 
		lazy-init="default" autowire="default" dependency-check="default">
		<property name="sessionFactory" ref="sessionFactory" />	
   </bean>

   <!-- Service  -->
   <bean name="service" 
   		class="com.finalist.cmsc.services.community.HibernateService" 
		lazy-init="false" autowire="default" dependency-check="default">
		<property name="userDAO" ref="userDAO" />	
   </bean>
   
   <!-- Service  -->
   <bean name="serviceNewsLetter" 
   		class="com.finalist.cmsc.services.community.HibernateNewsPrefService" 
		lazy-init="false" autowire="default" dependency-check="default">
		<property name="newsPrefDAO" ref="newsPrefDAO" />		
   </bean>
	
</beans>