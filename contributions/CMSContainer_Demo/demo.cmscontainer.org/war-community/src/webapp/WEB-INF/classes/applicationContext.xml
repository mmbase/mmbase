<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC
    "-//SPRING//DTD BEAN//EN"
    "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>

   <!-- HIBERNATE -->
   <!--interceptor beans config-->
   <!--
      This bean is a post-processor that will automatically apply relevant advisors
      to any bean in child factories.
   -->
   <bean
      class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />

   <!--
      AOP advisor that will provide declarative transaction management based on
      attributes. It's possible to add arbitrary custom Advisor implementations
      as well, and they will also be evaluated and applied automatically.
   -->
   <bean
      class="org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor">
      <property name="transactionInterceptor"
         ref="transactionInterceptor" />
   </bean>

   <!--
      Transaction interceptor to use for auto-proxy creation.
      Transaction attributes will be read in from JDK 1.5+ annotations.
   -->
   <bean id="transactionInterceptor"
      class="org.springframework.transaction.interceptor.TransactionInterceptor">
      <property name="transactionManager" ref="transactionManager" />
      <property name="transactionAttributeSource">
         <bean
            class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource" />
      </property>
   </bean>

   <!--database and transaction-->
   <bean id="dataSource"
      class="org.springframework.jndi.JndiObjectFactoryBean">
      <property name="jndiName" value="java:comp/env/jdbc/jaasdb" />
   </bean>

   <bean id="sessionFactory"
      class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"
      lazy-init="default" autowire="default" dependency-check="default">
      <property name="dataSource" ref="dataSource" />
      <property name="hibernateProperties">
         <props>
            <prop key="hibernate.dialect">
               org.hibernate.dialect.MySQLDialect
            </prop>
         </props>
      </property>
      <property name="annotatedClasses">
         <list>
            <value>
               com.finalist.cmsc.services.community.data.User
            </value>
            <value>
               com.finalist.cmsc.services.community.data.NewsPref
            </value>
            <value>
               com.finalist.cmsc.services.community.data.GroupUserRole
            </value>
         </list>
      </property>
   </bean>

   <bean id="transactionManager"
      class="org.springframework.orm.hibernate3.HibernateTransactionManager"
      lazy-init="default" autowire="default" dependency-check="default">
      <property name="sessionFactory" ref="sessionFactory" />
   </bean>

   <bean name="userDAO"
      class="com.finalist.cmsc.services.community.dao.UserDAOImpl"
      lazy-init="default" autowire="default" dependency-check="default">
      <property name="sessionFactory" ref="sessionFactory" />
   </bean>

   <bean name="newsPrefDAO"
      class="com.finalist.cmsc.services.community.dao.NewsPrefDAOImpl"
      lazy-init="default" autowire="default" dependency-check="default">
      <property name="sessionFactory" ref="sessionFactory" />
   </bean>

   <bean name="groupUserRoleDAO"
      class="com.finalist.cmsc.services.community.dao.GroupUserRoleDAOImpl"
      lazy-init="default" autowire="default" dependency-check="default">
      <property name="sessionFactory" ref="sessionFactory" />
   </bean>

   <!-- Service  -->
   <bean name="serviceUser"
      class="com.finalist.cmsc.services.community.HibernateUserService"
      lazy-init="false" autowire="default" dependency-check="default">
      <property name="userDAO" ref="userDAO" />
   </bean>

   <!-- Service  -->
   <bean name="serviceNewsLetter"
      class="com.finalist.cmsc.services.community.HibernateNewsPrefService"
      lazy-init="false" autowire="default" dependency-check="default">
      <property name="newsPrefDAO" ref="newsPrefDAO" />
   </bean>

   <!-- Service  -->
   <bean name="serviceCommunity"
      class="com.finalist.cmsc.services.community.HibernateCommunityService"
      lazy-init="false" autowire="default" dependency-check="default">
      <property name="userDAO" ref="userDAO" />
   </bean>

   <!-- Service  -->
   <bean name="serviceGroupUserRole"
      class="com.finalist.cmsc.services.community.HibernateGroupUserRoleService"
      lazy-init="false" autowire="default" dependency-check="default">
      <property name="groupUserRoleDAO" ref="groupUserRoleDAO" />
   </bean>

   <!-- ACEGI  -->
   <!-- 
      <bean id="wicketApplication" class="web.MyApplication">
      <property name="myService" ref="myService" />
      </bean>
      
      <bean id="myService" class="bus.MyServiceImpl" />
   -->

   <bean id="filterChainProxy"
      class="org.springframework.security.util.FilterChainProxy">
      <property name="filterInvocationDefinitionSource">
         <value>
            CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON
            PATTERN_TYPE_APACHE_ANT
            /**=httpSessionContextIntegrationFilter,authenticationProcessingFilter,requestFilter,exceptionTranslationFilter<!-- ,securityInterceptor -->
         </value>
      </property>
   </bean>

   <bean id="httpSessionContextIntegrationFilter"
      class="org.springframework.security.context.HttpSessionContextIntegrationFilter">
      <property name="context">
         <value>org.springframework.security.context.SecurityContextImpl</value>
      </property>
   </bean>

   <bean id="portletSessionContextIntegrationInterceptor"
      class="org.springframework.security.context.PortletSessionContextIntegrationInterceptor">
      <property name="context">
         <value>org.springframework.security.context.SecurityContextImpl</value>
      </property>
   </bean>

   <bean id="authenticationProcessingFilter"
      class="org.springframework.security.ui.webapp.AuthenticationProcessingFilter">
      <property name="authenticationManager">
         <ref local="authenticationManager" />
      </property>
      <property name="authenticationFailureUrl">
         <value>/login</value>
      </property>
      <property name="defaultTargetUrl">
         <value>/login</value>
      </property>
      <property name="filterProcessesUrl">
         <value>/*</value>
      </property>
   </bean>

   <bean id="requestFilter"
      class="org.springframework.security.wrapper.SecurityContextHolderAwareRequestFilter" />

   <bean id="exceptionTranslationFilter"
      class="org.springframework.security.ui.ExceptionTranslationFilter">
      <property name="authenticationEntryPoint">
         <ref local="authenticationEntryPoint" />
      </property>
   </bean>

   <bean id="authenticationEntryPoint"
      class="org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint">
      <property name="loginFormUrl">
         <value>/login.jsp</value>
      </property>
      <property name="forceHttps">
         <value>false</value>
      </property>
   </bean>

   <bean id="accessDecisionManager"
      class="org.springframework.security.vote.UnanimousBased">
      <property name="allowIfAllAbstainDecisions">
         <value>false</value>
      </property>
      <property name="decisionVoters">
         <list>
            <ref local="roleVoter" />
         </list>
      </property>
   </bean>

   <bean id="securityInterceptorFilter"
      class="org.springframework.security.intercept.web.FilterSecurityInterceptor">
      <property name="authenticationManager">
         <ref local="authenticationManager" />
      </property>
      <property name="accessDecisionManager">
         <ref local="accessDecisionManager" />
      </property>
      <property name="objectDefinitionSource">
         <value>
            CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON
            PATTERN_TYPE_APACHE_ANT
            /secure/**=ROLE_User
         </value>
      </property>
   </bean>
  
   <!-- roleVoter  -->
   <bean id="roleVoter" class="org.springframework.security.vote.RoleVoter" /> 
   
   <bean id="authenticationManager"
      class="org.springframework.security.providers.ProviderManager">
      <property name="providers">
         <list>
            <ref local="jaasAuthenticationProvider" />
         </list>
      </property>
   </bean>

   <bean id="jaasAuthenticationProvider"
      class="org.springframework.security.providers.jaas.JaasAuthenticationProvider">
      <property name="loginConfig">
         <value>classpath:jaas.config</value>
      </property>
      <property name="loginContextName">
         <value>jaasdb</value>
      </property>
      <property name="callbackHandlers">
         <list>
            <bean
               class="org.springframework.security.providers.jaas.JaasNameCallbackHandler" />
            <bean
               class="org.springframework.security.providers.jaas.JaasPasswordCallbackHandler" />
         </list>
      </property>
      <property name="authorityGranters">
         <list>
            <bean
               class="com.finalist.cmsc.services.community.JAASAuthorityGranter" />
         </list>
      </property>
   </bean>

   <bean id="securityInterceptor"
      class="org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptor">
      <property name="validateConfigAttributes">
         <value>true</value>
      </property>
      <property name="authenticationManager">
         <ref bean="authenticationManager" />
      </property>
      <property name="accessDecisionManager">
         <ref bean="accessDecisionManager" />
      </property>
      <property name="objectDefinitionSource">
         <value>
               <!-- com.finalist.cmsc.services.community.Community.logoutUser=ROLE_Community_Administrator
               bus.MyService.mySecureMethod=ROLE_ADMIN
               bus.MyService.myOtherSecureMethod=ROLE_USER
               bus.MyService.myOtherSecureMethod=ROLE_ANONYMOUS  -->
         </value>
      </property>
      <property name="rejectPublicInvocations" value="true" />
   </bean>

   <bean
      class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
      <property name="beanNames">
         <value>*Service</value>
      </property>
      <property name="interceptorNames">
         <list>
            <value>securityInterceptor</value>
         </list>
      </property>
   </bean>
</beans>