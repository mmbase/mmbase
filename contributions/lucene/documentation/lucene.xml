<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
"http://www.oasis-open.org/docbook/xml/4.0/docbookx.dtd">
<article class="specification">
  <articleinfo>
    <title>MMBase Lucene module</title>

    <date>2005-12-24</date>

    <edition>$Id: lucene.xml,v 1.7 2007-02-22 15:22:42 michiel Exp $</edition>

    <authorgroup>
      <author>
        <firstname>Pierre</firstname>

        <surname>van Rooden</surname>
      </author>

      <author>
        <firstname>Michiel</firstname>

        <surname>Meeuwissen</surname>
      </author>
    </authorgroup>

    <abstract>
      <para>Lucene</para>
    </abstract>

    <legalnotice>
      <para>This software is OSI Certified Open Source Software. OSI Certified
      is a certification mark of the Open Source Initiative.</para>

      <para>The license (Mozilla version 1.0) can be read at the MMBase site.
      See <ulink
      url="http://www.mmbase.org/license">http://www.mmbase.org/license</ulink></para>
    </legalnotice>
  </articleinfo>

  <section id="introduction">
    <title>Introduction</title>

    <para>Lucene indexing is about full text search indexing. See <ulink
    url="http://lucene.apache.org/">the internet site of Lucene</ulink>. Most
    databases support this natively, but Lucene can do it too. Indices can be
    defined using java code (e.g. by JDBC connections or HTTP connections).
    MMBase is a database independent product, so database independent indexing
    like Lucene provides fits well in our scheme, and can easily be
    implemented using the MMBase bridge interfaces to provide the data to be
    indexed.</para>

    <para>This document is about a Lucene implementation as an MMBase
    'module'. Basicly this provides a configuration file to configure queries
    to an MMBase repository, which are then used to produces Lucene indices.
    Furthermore, of course, it provides an MMBase way to access the search
    functionality itself (which is based on the MMBase 'function
    framework').</para>
  </section>

  <section id="installation">
    <title>Installation</title>

    <para>Placing mmbase-lucene.jar in WEB-INF/lib suffices to provide the
    functionality and an activated MMBase module. You may also want to install
    mmbase-crontab.jar to schedule periodic full indices.</para>

    <para>You then also need to define indices, which can be done in a file
    &lt;config&gt;/utils/luceneindex.xml. For more information about that see
    the chapter about configuration in the present document.</para>

    <para>Some administration pages are provided too. We suggest installing
    those in /mmbase/lucene. You may want to trigger an initial full index,
    after defining those.</para>

    <para>Then of course you need to integrate a Lucene search in your site. A
    generic search tool is provided among the Lucene admin pages.</para>
  </section>

  <section id="configuration">
    <title>Configuration</title>

    <para>The hardest part of the configuration of the Lucene index is of
    course the definition of the indices itself. The luceneindex.xml
    configuration file basicly looks like this: <example>
        <title>lucenindex.xml</title>

        <programlisting id="luceneindex.xml">
&lt;?xml version="1.0"?&gt;
&lt;luceneindex
 xmlns="http://www.mmbase.org/xmlns/luceneindex"
 xmlns:mmsq="http://www.mmbase.org/xmlns/searchquery"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:schemaLocation="http://www.mmbase.org/xmlns/luceneindex http://www.mmbase.org/xmlns/luceneindex.xsd"&gt;
  &lt;index &gt;
    &lt;analyzer class="org.mmbase.module.lucene.analysis.nl.StandardCleaningAnalyzer" /&gt;
    &lt;!-- default index configuration --&gt;
    ....
  &lt;/index&gt;
  &lt;index name="forum"&gt;
    &lt;analyzer class="org.mmbase.module.lucene.analysis.nl.StandardCleaningAnalyzer" /&gt;
    &lt;!-- yet another index --&gt;
    ..
  &lt;/index&gt;
&lt;/luceneindex&gt;

        </programlisting>
      </example> So, you can have several indexes, each with its own
    'analyzer' (a Lucene concept, see <ulink
    url="http://jakarta.apache.org/lucene/..">API Doc for Analyzers</ulink>).
    Below each 'index' tag there can be 1 or more XML pieces defining a query
    to create the index. If more than one, then the definitions will be
    combined to one bigger index.</para>

    <para>A 'list' subtag defines an MMBase index, in a more or less MMBase
    taglib-like fashion.</para>

    <section>
      <title>MMBase indices</title>

      <para>'list' subtags defined MMBase queries. <example>
          <title>lucenindex.xml</title>

          <programlisting id="luceneindex2.xml">
&lt;?xml version="1.0"?&gt;
&lt;luceneindex
 xmlns="http://www.mmbase.org/xmlns/luceneindex"
 xmlns:mmsq="http://www.mmbase.org/xmlns/searchquery"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:schemaLocation="http://www.mmbase.org/xmlns/luceneindex http://www.mmbase.org/xmlns/luceneindex.xsd"&gt;
  &lt;index &gt;
    &lt;analyzer class="org.mmbase.module.lucene.analysis.nl.StandardCleaningAnalyzer" /&gt;
    &lt;list type="products"&gt;
      &lt;mmsq:constraint field="begin" operator="less"    value="today" /&gt;
      &lt;mmsq:constraint field="end"   operator="greater" value="today" /&gt;
      &lt;mmsq:field name="title" /&gt;
      &lt;mmsq:field name="subtitle" /&gt;
      &lt;mmsq:field name="intro" /&gt;
      &lt;mmsq:field name="body" /&gt;
      &lt;mmsq:field name="begin" /&gt;
      &lt;mmsq:field name="end" /&gt;
    &lt;/list&gt;

  &lt;/index&gt;
  ... more indices
&lt;/luceneindex&gt;

        </programlisting>
        </example></para>
    </section>

    <section>
      <title>Subindices</title>

      <para>It is also possible to add 'related' subtags to 'list'.</para>
    </section>

    <section>
      <title>Other types of indices</title>

      <para>Since Lucene provides a much more generic functionality, the
      configuration file of this module keeps the option open that you want to
      do more then just indexing MMBase.</para>

      <para>Currently one alternative is provided: Direct JDBC access. Others
      can be imagined, like indexing of JSP sources (direct indexing of the
      resources of the web-app), or using http connection to the MMBase
      web-app (using HTTP connections), which would provide a google like
      full-index.</para>

      <section>
        <title>Direct access to JDBC</title>

        <para>Can be defined with the 'jdbc' subtag of 'index'. At the moment
        the implementation supposes that the jdbc connection should go to the
        same database as the MMBase instance. More general jdbc connection
        configuration may easily be added.</para>

        <para><example>
            <title>Example for jdbc-tag</title>

            <programlisting id="luceneindex3.xml">
&lt;?xml version="1.0"?&gt;
  &lt;index name="vraag"&gt;
    &lt;analyzer class="org.mmbase.module.lucene.analysis.nl.StandardCleaningAnalyzer" /&gt;
    &lt;jdbc sql="select id,parentid,threadid,title,body,authorid,ratingcount,ratingpoints,configtype,status,createdtime,modifiedtime,priority,ip from frm_forum where configtype = 'vraag' and (status != 'H' or status is null) order by id"
          identifier="id"
          find="select id, parentid, threadid, title, body, authorid,ratingcount,ratingpoints,configtype,status,createdtime,modifiedtime,priority,ip from frm_forum where configtype = 'vraag' and id = [IDENTIFIER]"
          &gt;
    &lt;/jdbc&gt;
  &lt;/index&gt;

  &lt;index name="vraag_threads"&gt;
    &lt;analyzer class="org.mmbase.module.lucene.analysis.nl.StandardCleaningAnalyzer" /&gt;
    &lt;jdbc sql="select id,parentid,threadid,title,body,authorid,ratingcount,ratingpoints,configtype,status,createdtime,modifiedtime,priority,ip from frm_forum where configtype = 'vraag' and (status != 'H' or status is null) order by threadid,id"
          identifier="threadid"
          find="select id, parentid, threadid, title, body, authorid,ratingcount,ratingpoints,configtype,status,createdtime,modifiedtime,priority,ip from frm_forum where configtype = 'vraag' and id = [IDENTIFIER]"
          &gt;
      &lt;field name="createdtime" multiple="first" /&gt;
    &lt;/jdbc&gt;
  &lt;/index&gt;

  &lt;!-- If not possible to define the document with one query, it can also be done with subqueries --&gt;
  &lt;index name="vraag_threads_variant"&gt;
    &lt;analyzer class="org.mmbase.module.lucene.analysis.nl.StandardCleaningAnalyzer" /&gt;
    &lt;jdbc sql="select id,parentid,threadid,title,body,authorid,ratingcount,ratingpoints,configtype,status,createdtime,modifiedtime,priority,ip from frm_forum where configtype = 'vraag' and id == threadid and (status != 'H' or status is null) order by id"
          identifier="threadid"
          key="threadid"
          find="select id, parentid, threadid, title, body, authorid,ratingcount,ratingpoints,configtype,status,createdtime,modifiedtime,priority,ip from frm_forum where configtype = 'vraag' and id = [IDENTIFIER]"
          &gt;
          &lt;related sql="select id,parentid,threadid,title,body,authorid,ratingcount,ratingpoints,configtype,status,createdtime,modifiedtime,priority,ip from frm_forum where configtype = 'vraag' and threadid == [PARENTKEY] and (status != 'H' or status is null) order by id" key="id"&gt;
             &lt;field name="createdtime" multiple="first" /&gt;
          &lt;/related&gt;
    &lt;/jdbc&gt;
  &lt;/index&gt;

&lt;/luceneindex&gt;

        </programlisting>
          </example></para>
      </section>
    </section>

    <section id="history">
      <title>History</title>

      <para>There are currently two publicly available Lucene modules. The
      site http://mmapps.sourceforge.net provides an alternate version,
      careted by Finalist, which works on MMBase 1.7.</para>

      <para>The version you are looking at now was developed on the 1.8
      version of MMBase.</para>
    </section>
  </section>
</article>