<div
    class="mm_c c_streams b_admin ${requestScope.componentClassName}"
    id="${requestScope.componentId}"
    xmlns:c="http://java.sun.com/jsp/jstl/core"
    xmlns:mm-res="urn:jsptagdir:/WEB-INF/tags/mm/resources"
    xmlns:fn="http://java.sun.com/jsp/jstl/functions"
    xmlns:jsp="http://java.sun.com/JSP/Page"
    xmlns:mm="http://www.mmbase.org/mmbase-taglib-2.0">
  <jsp:output omit-xml-declaration="true" />
  <mm:cloud rank="basic user" jspvar="cloud">
    
    <h3>${mm:string(requestScope['org.mmbase.framework.state'].renderer.block.title)}</h3>
    <mm:import id="blockdescription">${mm:string(requestScope['org.mmbase.framework.state'].renderer.block.description)}</mm:import>
    <mm:write referid="blockdescription" escape="p" />

    <mm:import externid="trigger" />
    <mm:import externid="interrupt" vartype="integer" />
    <mm:import externid="all" vartype="boolean">false</mm:import> 
    <mm:import externid="cache" />
    <mm:import externid="source" />
    
    <mm:import externid="search" />
    <mm:import externid="page" vartype="integer">0</mm:import>
    <mm:import externid="max" vartype="integer">10</mm:import>
    
    <mm:import externid="type">mediafragments</mm:import>

    <!-- fill list with jobs if runnning -->
    <mm:import id="joblist" jspvar="joblist" vartype="List" />
    <mm:listfunction set="streams" name="runningJobs">
      <mm:first>
        <mm:link page="alljobs">
          <h4><a href="${_}"><mm:size /> jobs</a> running</h4>
        </mm:link>
      </mm:first>
      <mm:import jspvar="job" reset="true">${_.node.number}</mm:import>
      <jsp:scriptlet>
        if (!joblist.contains(job)) { joblist.add(job); }
      </jsp:scriptlet>
    </mm:listfunction>

    
    <mm:present referid="source">
      <!-- all these functions are on source nodes of caches -->
      <mm:node number="$source" notfound="skip">
        <mm:hasfunction name="triggerCaches">
        
          <c:choose>
            <c:when test="${!empty update}"><!-- update info of stream -->
              <mm:hasfunction name="updateSources">
                <c:choose>
                  <c:when test="${!empty cache}">
                    <mm:booleanfunction name="updateSources" referids="cache">
                      <p class="msg">Updated info of #${cache} (of source #${source}).</p>
                    </mm:booleanfunction> 
                  </c:when>
                  <c:otherwise>
                    <mm:booleanfunction name="updateSources">
                      <p class="msg">Updated info of source #${source}.</p>
                    </mm:booleanfunction> 
                  </c:otherwise>
                </c:choose>
              </mm:hasfunction>
            </c:when>
            <c:when test="${!empty cache}"><!-- retrigger this cache -->
              <p class="msg">Recaching of caches #${cache} of #${_node.number} started.</p>
              <mm:voidfunction name="triggerCaches" referids="cache" />
            </c:when>
            <c:when test="${all}"><!-- retrigger all caches of this source node -->
              <mm:voidfunction name="triggerCaches" referids="all" />
              <p class="msg">Recaching of <strong>all</strong> caches of #${_node.number} started.</p>
            </c:when>
            <c:when test="${interrupt eq source}"><!-- interrupt transcodings of this source node -->
              <p class="msg">
                <mm:function set="streams" name="cancelJob" referids="interrupt@node" />
              </p>
            </c:when>
            <c:otherwise>
              <!-- nothing -->
            </c:otherwise>
          </c:choose>
        
        </mm:hasfunction>
      </mm:node>
      
    </mm:present>


    <p>
      <mm:link>
        <mm:param name="type">mediafragments</mm:param>
        <a href="${_}">media</a> -
      </mm:link>
      <mm:link>
        <mm:param name="type">videofragments</mm:param>
        <a href="${_}">video</a> -
      </mm:link>
      <mm:link>
        <mm:param name="type">audiofragments</mm:param>
        <a href="${_}">audio</a> -
      </mm:link>
      <mm:link>
        <mm:param name="type">mediasources</mm:param>
        <a href="${_}">mediasources</a> -
      </mm:link>
      <mm:link>
        <mm:param name="type">videosources</mm:param>
        <a href="${_}">videosources</a> -
      </mm:link>
      <mm:link>
        <mm:param name="type">videostreamsources</mm:param>
        <a href="${_}">video streams</a> -
      </mm:link>
      <mm:link>
        <mm:param name="type">videostreamsourcescaches</mm:param>
        <a href="${_}">video streamcaches</a> -
      </mm:link>
      <mm:link>
        <mm:param name="type">audiosources</mm:param>
        <a href="${_}">audiosources</a> -
      </mm:link>
      <mm:link>
        <mm:param name="type">audiostreamsources</mm:param>
        <a href="${_}">audio streams</a> -
      </mm:link>
      <mm:link>
        <mm:param name="type">audiostreamsourcescaches</mm:param>
        <a href="${_}">audio streamcaches</a>
      </mm:link>
    </p>

    <mm:form>
      <fieldset>
      <h4>Search <mm:nodeinfo nodetype="$type" type="plural_guitype" escape="lowercase" /> (${type})</h4>
      <mm:fieldlist nodetype="$type" type="search" varStatus="fldstate">
          <mm:import id="fldname" reset="true"><mm:fieldinfo type="name" /></mm:import>
          <div class="row ${fldname}">
            <label for="mm_${fldname}"><mm:fieldinfo type="guiname" /></label>
            <c:choose>
              <c:when test="${fldname ne 'owner'}"><mm:fieldinfo type="searchinput" /></c:when>
              <c:otherwise>
                <mm:fieldinfo type="searchinput" datatype="eline" />
                <!-- c:choose>
                  <c:when test="${empty param._owner_search}"><input type="checkbox" name="_owner_search" id="mm_owner_search" /></c:when>
                  <c:otherwise><input type="checkbox" name="_owner_search" id="mm_owner_search" checked="checked" /></c:otherwise>
                </c:choose -->
              </c:otherwise>
            </c:choose>        
          </div>
        </mm:fieldlist>

        <div>
          <input type="submit" name="search" value="Search" class="search submit" />
        </div>
      </fieldset>
    </mm:form>

    <table class="searchresults" summary="Searchresults ${type}">
      <mm:listnodescontainer type="${type}">
        <mm:size id="total" write="false" />
        <mm:sortorder field="number" direction="DOWN" />
        
        <mm:present referid="search">
          <mm:context>
            <mm:fieldlist nodetype="$type" type="search">
              <mm:fieldinfo type="usesearchinput" /> <!-- 'usesearchinput' can add constraints to the surrounding container -->
            </mm:fieldlist>
          </mm:context>

        </mm:present>
        
        <mm:size write="false" id="size" />         
        <mm:maxnumber value="${max}" />
        <mm:offset value="${page * max}" />

        <caption>
          <strong><mm:nodeinfo nodetype="$type" type="guitype" /></strong> (<mm:write referid="type" />)
          <mm:write referid="size" /> out of <mm:write referid="total" />
        </caption>
        <tr>
          <th scope="col">#</th>
          <mm:fieldlist nodetype="$type" type="list" jspvar="fld" vartype="field">
            <c:if test="${fld.name ne 'number'}">
              <th scope="col"><mm:fieldinfo type="guiname" /></th>
            </c:if>
          </mm:fieldlist>
          <th>Action</th>
        </tr>
        <mm:listnodes>
          <tr>
            <td>
               <mm:link page="edit" referids="_node@node">
                 <a href="${_}"><mm:field name="number" /></a>
               </mm:link>
            </td>
            <mm:fieldlist nodetype="$type" type="list" jspvar="fld" vartype="field">
              <c:if test="${fld.name ne 'number'}">
                <td><mm:fieldinfo type="guivalue" /></td>
              </c:if>
            </mm:fieldlist>
            <td>

               <!-- ### rechaching -->
               <mm:import id="ntype" reset="true"><mm:nodeinfo type="type" /></mm:import>
               <mm:hasfield name="id">

                 <c:choose>
                   <c:when test="${fn:endsWith(ntype, 'caches')}">
                     
                     <!-- get source of this node (if it's cache)  -->
                     <mm:import id="thesource" reset="true"><mm:field name="id" /></mm:import>
                     <!-- check if found source is the ultimate (parent) source node -->
                     <mm:node number="$thesource" notfound="skip">
                       <mm:hasfield name="id">
                         <mm:import id="thesource" reset="true"><mm:field name="id" /></mm:import>
                         <!-- do it twice (maybe more?) -->
                         <mm:node number="$thesource">
                           <mm:hasfield name="id">
                             <mm:import id="thesource" reset="true"><mm:field name="id" /></mm:import>
                           </mm:hasfield>
                         </mm:node>
                       </mm:hasfield>
                     </mm:node>
                     
                     <c:choose>
                       <c:when test="${mm:contains(joblist, thesource)}">
                         <div class="msg">Transcoding: source #${thesource}</div>
                       </c:when>
                       <c:otherwise>
                         <mm:link referids="type,_node@cache,thesource@source">
                           <a href="${_}">retrigger</a> cache<br />
                         </mm:link>
                         <!-- update stream info -->
                         <mm:link referids="type,_node@cache,thesource@source">
                           <mm:param name="update">update</mm:param>
                           <a href="${_}">update</a> info
                         </mm:link>                     
                       </c:otherwise>
                     </c:choose>
                   
                   </c:when>
                   <c:otherwise>
                     does not end with caches
                   </c:otherwise>
                 </c:choose>
               </mm:hasfield>
               
               <mm:hasfield name="id" inverse="true">
                 <c:choose>
                   <c:when test="${mm:contains(joblist,source)}">
                     <div class="msg">Transcoding: source #${source}</div>
                   </c:when>
                   <c:otherwise>
                     <mm:hasfunction name="triggerCaches">
                       <mm:link referids="type,_node@source">
                         <mm:param name="all">true</mm:param>
                         <a href="${_}">retrigger</a> all caches
                       </mm:link>
                     </mm:hasfunction>
                   </c:otherwise>
                 </c:choose>
               </mm:hasfield>
               <!-- /rechaching -->

            </td>
          </tr>
        </mm:listnodes>

        
        <mm:url page="/mmbase/streams/streams/search" id="search_str" referids="type,search" write="false">
          <mm:fieldlist nodetype="$type" type="search">
            <mm:fieldinfo type="reusesearchinput" />
          </mm:fieldlist>
        </mm:url>

        <tfoot>
          <tr cols="100">
            <th colspan="9">
              <mm:previousbatches >
                <mm:last>
                  <mm:link referid="search_str" referids="max">
                    <mm:param name="page"><mm:index  /></mm:param>
                    <a href="${_}">«« previous</a> -
                  </mm:link>
                </mm:last>
              </mm:previousbatches>
              <mm:previousbatches >
                <mm:link referid="search_str" referids="max">
                  <mm:param name="page"><mm:index  /></mm:param>
                  <a href="${_}"><mm:index offset="1" /></a>
                </mm:link>
                <jsp:text> - </jsp:text>
              </mm:previousbatches>
              <mm:index offset="1" />
              <mm:nextbatches>
                <jsp:text> - </jsp:text>
                <mm:link referid="search_str" referids="max">
                  <mm:param name="page"><mm:index /></mm:param>
                  <a href="${_}"><mm:index offset="${page + 2}" /></a>
                </mm:link>
              </mm:nextbatches>
              <mm:nextbatches>
                <mm:first>
                  <mm:link referid="search_str" referids="max">
                    <mm:param name="page"><mm:index  /></mm:param>
                    - <a href="${_}">next »»</a>
                  </mm:link>
                </mm:first>
              </mm:nextbatches>
            </th>
          </tr>
        </tfoot>
        
      </mm:listnodescontainer>
    </table>

  </mm:cloud>
</div>
