#!/usr/bin/perl -w

#  Logs and mails CVS changes
#
#  @author Michiel Meeuwissen
#  $Id: cvsmail,v 1.18 2004-11-26 20:10:01 michiel Exp $

use strict;
use FileHandle;

# arguments
my ($log_filename, $user, $files, $toaddress) = @ARGV;

# configuration
my $basedir     = "/var/cvs/CVSROOT/log";
my $defaulttoaddress   = "cvs\@lists.mmbase.org";
my $cvs         = "/usr/bin/cvs";


if (! defined $files) {
    print "Needs (at least) three arguments\n";	
	print "cvsmail <log file> <user> <files> [<to address>]\n";
    exit 0;
}

if (! defined $toaddress) {
    $toaddress = $defaulttoaddress;
}

my @files = split(" ", $files);
my $dir = shift @files;


my $child;
if ($child = fork()) {
	print $child;
	# would need to disown here!
    exit 0; # be 'ready' immediatiely, don't let the commiter wait
} else { 
    sleep 5;
    # mesages are on  STDIN:
    my @message = <stdin>;
    
    # determin user:
    
    my $cvsuser = `/usr/bin/whoami`;
    chomp $cvsuser;
    
    #{
#	my ($fil, $oldversion, $newversion) = split(",", $files[0]);
#	my $logline =  `$cvs log -r $fil | grep author:`;
#	if ($logline =~ /author: (.*?);/) {
#	    $cvsuser = $1;
#	}
#    }


	
    # mail subject:
    my $subject = "".$dir." ";
    for my $file (@files) {
		$subject .= (split(",", $file))[0] . " ";
    }

    # mail message           
	# for 'mail'
    #my $message = "From: $user <$cvsuser\@mmbase.org>\nSubject: $subject\n".join("", @message);
	# for 'mutt'
	my $message = join("", @message);

    # also log this message:
    my $logfile = new FileHandle(">>$log_filename");
    
    print $logfile "--------------------------------------------------------\n";
    print $logfile "$user ($cvsuser) ". `date`. "\n";
    print $logfile $message;
    print $logfile "\n[$files]\n";
    $logfile->close();
    

    # do the mailing
    if (1) {
	my $mail = new FileHandle("|mutt -s \"$subject\" $toaddress -e 'my_hdr From: $user <$cvsuser\@mmbase.org>'");
	# for mutt: 	
	print $mail $message."\n";
	
	unless ($files =~ /New directory/) {
	    chdir($basedir.$dir); # why is this necessary?
	    for my $file (@files) {
		my ($fil, $oldversion, $newversion) = split(",", $file);
		print $mail "\n\n";
		if (defined $oldversion) {
		    if ($oldversion =~ /NONE/) {
			print $mail "$fil is new\n\n";
		    } else {
			print $mail `$cvs diff -u -b -r$oldversion -r$newversion $fil`;
		    }
		}
		
	    }
	}
	
	$mail->close();
    }
} 

